[{"title":"Vue 实现课程表和选课工具","path":"/2023/Vue/","content":"项目仓库：cityu-cs&#x2F;cityu-cs.github.io 部署地址：cityu-cs.github.io 背景暑假实习期间写的项目。 虽然 CityU 有一个历史悠久的第三方选课工具 Festival Jog，但是同个作者正在开发中的 新版 令人一言难尽（尽管我知道还在开发中，但是交互体验下降了很多），我就想着自己写一个也不是很难。 环境和工具 环境：Node.js v16.17.0 框架：Vue 3.3.4 + Vite 4.4.6 UI 库：Element Plus 2.0.6 IDE：WebStorm 2023.1 部署：GitHub Pages 使用组合式 API (Composition API) 编写。 使用 Event Bus 进行组件间通信。 组合式 API 更符合我的习惯，但是网上大部分教程都是基于选项式 API (Options API) 的（因为 Vue 2.x 默认使用选项式 API），所以有很多地方都是自己摸索的。 准备工作课程数据从 AIMS 获取课程数据。 要想直接从 HTML 中获取课程数据是不可能的，因为学校网站都强制 2FA 登录。 模拟浏览器的 Selenium 是可行的，但是因为效率低下，只作为不得已的方案。 不过，通过 F12 的 Network 面板，可以找到获取数据的 Fetch&#x2F;XHR 请求，提取 API 地址，这样就能不登录直接获取数据了。 可以参考这则问答。 处理课程数据爬取完成后，得到上千个 .json 文件，每个文件包含一个课程的具体信息。 为了方便后续处理，需要将这些 .json 文件合并成一个大的 .json 文件。 这里我犯了很大的错误，导致后面不得不反复写 python 代码修改文件结构。 结论而言，在 json 中尽量不要用数组，尤其是嵌套的数组。 比如，要标记 CS1102 和 CS1302 的科目为 CS，不应该这样写： 1234567891011121314&#123; &quot;subjects&quot;: &#123; &quot;CS&quot;: [ &#123; &quot;code&quot;: &quot;CS1102&quot;, &quot;name&quot;: &quot;Introduction to Computer Studies&quot; &#125;, &#123; &quot;code&quot;: &quot;CS1302&quot;, &quot;name&quot;: &quot;Introduction to Computer Programming&quot; &#125; ] &#125;&#125; 这样 CS 就是一个数组，而不是一个对象，会导致后续处理非常麻烦。 正确的作法是把 CS 作为各个 course 对象的属性，这样就能直接用 for...in 遍历了。 1234567891011121314&#123; &quot;courses&quot;: &#123; &quot;CS1102&quot;: &#123; &quot;code&quot;: &quot;CS1102&quot;, &quot;name&quot;: &quot;Introduction to Computer Studies&quot;, &quot;subject&quot;: &quot;CS&quot; &#125;, &quot;CS1302&quot;: &#123; &quot;code&quot;: &quot;CS1302&quot;, &quot;name&quot;: &quot;Introduction to Computer Programming&quot;, &quot;subject&quot;: &quot;CS&quot; &#125; &#125;&#125; 数据经过准备工作，得到两个 .json 文件： CourseList.json：所有课程的基础信息，包括科目代码、科目名称、学分、是否支持线上选课。 CourseDetail.json：所有课程的具体信息，包括各个 session 的 CRN、上课时间、上课地点、选课限制等。 CourseList.json123456789101112131415&#123; &quot;subject&quot;: [ &quot;AC&quot;,&quot;ADSE&quot;, // ... ],&quot;course&quot;: [ &#123; &quot;courseCode&quot;: &quot;AC4161&quot;, &quot;courseTitle&quot;: &quot;Accounting Information Systems and Emerging Technologies&quot;, &quot;creditUnits&quot;: &quot;3&quot;, &quot;webEnabled&quot;: &quot;Y&quot;, &quot;courseLevel&quot;: [&quot;B&quot;], &quot;subject&quot;:&quot;AC&quot; &#125;, // ... ]&#125; subject：所有学科代码的数组。这个数组让页面直接知道有哪些学科，方便筛选。实际生产中，这个数组应该是动态生成的。 course：所有课程基础信息的数组。 CourseDetail.json1234567891011121314151617181920212223242526272829&#123; &quot;AC3202&quot;: &#123; &quot;subjectCode&quot;: &quot;AC&quot;, &quot;courseCode&quot;: &quot;AC3202&quot;, &quot;courseTitle&quot;: &quot;Corporate Accounting I&quot;, &quot;creditUnits&quot;: &quot;3&quot;, &quot;courseLevel&quot;: [&quot;B&quot;], &quot;activities&quot;: [ &#123; &quot;crn&quot;: &quot;10011&quot;, &quot;day&quot;: &quot;T&quot;, &quot;startTime&quot;: &quot;09:00&quot;, &quot;endTime&quot;: &quot;11:50&quot;, &quot;bldg&quot;: &quot;YEUNG&quot;, &quot;room&quot;: &quot;G4702&quot;, &quot;section&quot;: &quot;S01&quot;, &quot;web&quot;: true, &quot;category&quot;: &quot;0&quot; &#125;, // ... ], &quot;category&quot;: [ &#123;&quot;0&quot;: [&quot;only for Major: AC&quot;]&#125;, &#123;&quot;A&quot;: [&quot;only for Minor: AC&quot;]&#125;, &#123;&quot;B&quot;: [&quot;only for College: CB&quot;,&quot;not for Major: AC&quot;]&#125; ] &#125;, // ...&#125; 每个课程作为一个对象，对象的 key 是课程代码。 有部分信息是和课程基础信息重复的，因为传参时只有一个 courseCode，直接通过 CourseDetail[courseCode] 就能获取到所有信息。 activities：所有 session 的数组。 category：每个 category 的选课限制。和 activities[] 中的 category 对应。在原始数据中，每个 session 都有独立的选课限制。由于 category 相同的 session 一般都是同一种限制，并且下面的课程详情表是按照 category 分组的，所以这里把 category 作为 key，把限制信息作为 value，放在一个数组中。 功能课程列表显示所有课程的表格，包括课程代码、课程名称、学分、是否支持线上选课，和查阅官网、查看 session 的两个按钮。 支持用课程代码、课程名称、学科、课程级别进行搜索和筛选。 支持分页、快速跳转、自定义每页数量。 在输入框中回车或点击搜索按钮时，会触发搜索。 &lt;template&gt;1234567891011&lt;div class=&quot;search-container&quot;&gt; &lt;el-input class=&quot;search-input&quot; placeholder=&quot;Course Code or Title&quot; v-model=&quot;queryText&quot; clearable @keyup.enter.native=&quot;search&quot;&gt;&lt;/el-input&gt; &lt;!-- 输入框 --&gt; &lt;el-select class=&quot;search-select&quot; v-model=&quot;querySubject&quot; placeholder=&quot;Subject&quot; clearable&gt; &lt;el-option v-for=&quot;item in subjectList&quot; :key=&quot;item.value&quot; :label=&quot;item.label&quot; :value=&quot;item.value&quot;&gt;&lt;/el-option&gt; &lt;/el-select&gt; &lt;!-- 学科筛选 --&gt; &lt;el-select class=&quot;search-select&quot; v-model=&quot;queryLevel&quot; placeholder=&quot;Level&quot; clearable&gt; &lt;el-option v-for=&quot;item in levelList&quot; :key=&quot;item.value&quot; :label=&quot;item.label&quot; :value=&quot;item.value&quot;&gt;&lt;/el-option&gt; &lt;/el-select&gt; &lt;!-- 课程级别筛选 --&gt; &lt;el-button class=&quot;search-button&quot; type=&quot;primary&quot; @click=&quot;search&quot;&gt;Search&lt;/el-button&gt; &lt;!-- 搜索按钮 --&gt;&lt;/div&gt; &lt;script&gt;上面的 HTML 代码中出现了很多变量，先定义一下： 123const queryText = ref(&#x27;&#x27;);const querySubject = ref(&#x27;&#x27;);const queryLevel = ref(&#x27;&#x27;); 这里就要说到 Vue 一个很重要的概念：响应式。虽然变量是用 const 定义的，但是它们实质是 Vue 提供的一个 reference，类似于 C 中的 const int *，其指向的对象不可变，但是对象本身是可变的。 当输入框中的文本发生变化时，queryText 会自动更新，而不需要像原生 JS 一样手动监听 input 事件。 搜索功能： 1234567891011121314151617181920212223242526function search() &#123; const query = queryText.value.toLowerCase(); const subject = querySubject.value; const level = queryLevel.value; if (!query &amp;&amp; !subject &amp;&amp; !level) &#123; // 无筛选条件时显示全部课程 resultList.value = fullList.value; total.value = resultList.value.length; updateCurrentList(); return; &#125; resultList.value = fullList.value.filter(course =&gt; &#123; if (query &amp;&amp; !course.courseCode.toLowerCase().includes(query) &amp;&amp; !course.courseTitle.toLowerCase().includes(query)) &#123; return false; &#125; if (subject &amp;&amp; course.subject !== subject) &#123; return false; &#125; if (level &amp;&amp; !course.courseLevel.includes(level)) &#123; return false; &#125; return true; &#125;); total.value = resultList.value.length; updateCurrentList();&#125; filter() 方法返回一个新数组，新数组中的元素是原数组中符合条件的元素。类似于 Java 中的 stream().filter()。 分页功能： 1234567891011121314151617const pagesize = ref(10);const currentPage = ref(1);const total = ref(0);function handleSizeChange(val) &#123; pagesize.value = val; currentPage.value = 1; updateCurrentList();&#125;function handleCurPageChange(val) &#123; currentPage.value = val; updateCurrentList();&#125;function updateCurrentList() &#123; const start = (currentPage.value - 1) * pagesize.value; const end = start + pagesize.value; currentList.value = resultList.value.slice(start, end);&#125; 分页的思路其实很简单：只要知道完整的数组，就能根据当前页码和每页数量计算出当前页首尾元素的下标。 当 end 下标超出数组长度时，slice() 方法会自动截断，所以不需要额外处理。 课程详情点击课程列表中的查看按钮，下方的表格会显示该课程的所有 session。 根据 category 分组，使用 tab 切换。 显示每个 category 对应的选课限制。 &lt;template&gt;12345678910111213141516171819202122232425262728293031323334353637&lt;div class=&quot;tab-container&quot;&gt; &lt;el-tabs value=&quot;activeTab&quot; @tab-click=&quot;handleTabClick&quot; :type=&quot;&#x27;card&#x27;&quot;&gt; &lt;!-- tab 切换 --&gt; &lt;el-tab-pane v-for=&quot;item in tabs&quot; :key=&quot;item&quot; :label=&quot;item&quot; :name=&quot;item&quot;&gt;&lt;/el-tab-pane&gt; &lt;/el-tabs&gt; &lt;p v-if=&quot;restrictions[activeTab] !== undefined&quot;&gt;Restriction:&lt;/p&gt; &lt;!-- 选课限制 --&gt; &lt;ul&gt; &lt;li v-for=&quot;item in restrictions[activeTab]&quot; :key=&quot;item&quot;&gt;&#123;&#123;item&#125;&#125;&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;table-container&quot;&gt; &lt;el-table :data=&quot;tableItems[activeTab]&quot; border stripe :header-cell-style=&quot;&#123;background:&#x27;#d9e5fd&#x27;, color:&#x27;black&#x27;, fontWeight: 1000&#125;&quot; :row-style=&quot;&#123;height: &#x27;0&#x27;&#125;&quot; :cell-style=&quot;&#123;padding: &#x27;0&#x27;&#125;&quot; &gt; &lt;el-table-column class=&quot;table-short&quot; prop=&quot;crn&quot; label=&quot;CRN&quot; min-width=&quot;1&quot;&gt;&lt;/el-table-column&gt; &lt;el-table-column class=&quot;table-short&quot; prop=&quot;section&quot; label=&quot;Section&quot; min-width=&quot;1&quot;&gt;&lt;/el-table-column&gt; &lt;el-table-column class=&quot;table-medium&quot; prop=&quot;dayTime&quot; label=&quot;Time&quot; min-width=&quot;2&quot;&gt;&lt;/el-table-column&gt; &lt;el-table-column class=&quot;table-medium&quot; prop=&quot;buildingRoom&quot; label=&quot;Venue&quot; min-width=&quot;2&quot;&gt;&lt;/el-table-column&gt; &lt;el-table-column class=&quot;table-short&quot; prop=&quot;webEnabled&quot; label=&quot;Web&quot; min-width=&quot;1&quot;&gt;&lt;/el-table-column&gt; &lt;el-table-column clash=&quot;table-short&quot; prop=&quot;status&quot; label=&quot;Status&quot; min-width=&quot;1&quot;&gt; &lt;template #default=&quot;&#123;row&#125;&quot;&gt; &lt;p&gt;&#123;&#123;sectionStatus[row.crn]&#125;&#125;&lt;/p&gt; &lt;/template&gt; &lt;/el-table-column&gt; &lt;el-table-column class=&quot;table-medium&quot; prop=&quot;add&quot; label=&quot;Action&quot; min-width=&quot;2&quot;&gt; &lt;template #default=&quot;&#123;row&#125;&quot;&gt; &lt;!-- 根据不同状态显示不同按钮 --&gt; &lt;el-button type=&quot;text&quot; @click=&quot;addToTimetable(row)&quot; v-if=&quot;sectionStatus[row.crn] === &#x27;OK&#x27;&quot;&gt;Add&lt;/el-button&gt; &lt;el-button type=&quot;text&quot; v-else-if=&quot;sectionStatus[row.crn] === &#x27;Added&#x27;&quot; @click=&quot;deleteFromDetail(row)&quot;&gt;Remove&lt;/el-button&gt; &lt;el-button type=&quot;text&quot; disabled v-else&gt;&#123;&#123;sectionStatus[row.crn]&#125;&#125;&lt;/el-button&gt; &lt;/template&gt; &lt;/el-table-column&gt; &lt;/el-table&gt; &lt;/div&gt;&lt;/div&gt; tableItems[] 是一个 key 为 category，value 为 session 数组的对象。例如，在上面 AC3202 的例子中，tableItems[&#39;0&#39;] 就是 AC3202 的所有 category 0 的 session。 Vue 解析 el-table 中的 width: xx% 时有 bug，参考文章。解决方案是用 min-width 代替 width, min-width 的值是几，就代表占几份宽度。 &lt;template #default=&quot;&#123;row&#125;&quot;&gt; 相当于一个匿名函数，参数是当前所在行 row，返回值是一个 HTML 元素，用于渲染当前单元格的内容。 这里使用 &#123;&#123;sectionStatus[row.crn]&#125;&#125; （直接访问值而不是调用函数）是因为最后一列的 action 按钮会根据 sectionStatus 显示不同的内容，所以必须要保存这个值而不是当场计算。 因此，只要在创建表格，增加、删除课程时更新所有 sectionStatus 的值，就能保证表格中的内容是最新的。 &lt;script&gt;以下几个方法实现比较简单，就不贴代码了： getDetail()：在课程列表中点击查看按钮时调用，根据课程代码获取课程详情。 handleTabClick()：点击 tab 时调用，改变当前 tab，显示对应的 session。 addToTimetable()：点击添加按钮时调用，将 session 添加到课程表中。 deleteFromDetail()：点击删除按钮时调用，将 session 从课程表中删除。 此处增删操作会调用 updateSectionStatus() 和 saveLocalStorage()，更新各个 session 的状态，并保存修改到 LocalStorage。 更新所有 sectionStatus 的值： 123456789101112131415161718192021222324function getAllStatus() &#123; if (activeTab.value === &#x27;&#x27;) &#123; return; &#125; for (let act of tableItems.value[activeTab.value]) &#123; for (let added of timetableList.value) &#123; if (added.crn === act.crn) &#123; sectionStatus.value[act.crn] = &#x27;Added&#x27;; break; &#125; if (added.courseCode === act.courseCode &amp;&amp; added.category !== act.category) &#123; sectionStatus.value[act.crn] = &#x27;Incompatible&#x27;; break; &#125; if (added.day === act.day &amp;&amp; added.endHour &gt;= act.startHour &amp;&amp; added.startHour &lt;= act.endHour) &#123; sectionStatus.value[act.crn] = &#x27;Clash&#x27;; break; &#125; &#125; if (sectionStatus.value[act.crn] === undefined) &#123; sectionStatus.value[act.crn] = &#x27;OK&#x27;; &#125; &#125;&#125; 这里要提一下 for ... of ... 和 for ... in ... 的区别。 for ... in ... 遍历对象的 key，for ... of ... 遍历对象的 value。 实质上，数组也是一种对象，下标是 key，元素是 value。例如：[1, 2, 3] 的对象表示为 &#123;0: 1, 1: 2, 2: 3&#125;。 可以得到以下对应关系： for ... of ... for ... in ... 数组 元素 下标 对象 value key 课程表网上虽然有很多课程表的实现，但是全都不适合我，所以只能自己写。 大部分课程表都是固定时间点，然后课程作为二维数组的元素。 但我希望实现的是动态的课程表： 初始化时，只给定最早上课时间 09:00 和最晚下课时间 22:50，可能上课日期星期一到星期日。表格中的内容是空的。 添加课程时，将课程放到对应的时间段，如果已经有课了，就显示冲突，不允许添加。 自动合并单元格，用于显示 &gt;1 小时的课程。 点选单元格时，弹出对话框，确认是否删除课程。 我不知道怎么设计。我要怎么确定每一行每一列是否有课？然后，是什么课？持续多久？这些信息要怎么保存？ 但是如果忽略后面几个问题，只回答第一个问题，还是可以实现的。 &lt;template&gt;1234567891011121314151617181920212223242526&lt;div class=&quot;timetable-container&quot;&gt; &lt;el-table :data=&quot;hours&quot; border :header-cell-style=&quot;&#123;background:&#x27;#d9e5fd&#x27;, color:&#x27;black&#x27;, fontWeight: 1000, textAlign: &#x27;center&#x27;&#125;&quot; :span-method=&quot;mergeTimetable&quot; :row-style=&quot;&#123;height: &#x27;70px&#x27;&#125;&quot; :cell-style=&quot;tableCellStyle&quot; @cell-click=&quot;deleteFromTimetable&quot; &gt; &lt;el-table-column label=&quot;Time&quot; min-width=&quot;2&quot;&gt; &lt;template #default=&quot;&#123;row&#125;&quot;&gt; &lt;p&gt;&#123;&#123;row&#125;&#125;:00&lt;/p&gt; &lt;/template&gt; &lt;/el-table-column&gt; &lt;el-table-column v-for=&quot;day in dayKeys&quot; :key=&quot;day&quot; :label=&quot;char2Day[day]&quot; min-width=&quot;4&quot;&gt; &lt;template #default=&quot;&#123;row&#125;&quot;&gt; &lt;div v-for=&quot;act in timetableList&quot; :key=&quot;act.crn&quot; v-show=&quot;act.day === day &amp;&amp; act.startHour === row&quot; class=&quot;timetable-data&quot;&gt; &lt;p class=&quot;timetable-data-title&quot;&gt;&#123;&#123;act.courseCode&#125;&#125; - &#123;&#123;act.section&#125;&#125;&lt;/p&gt; &lt;p class=&quot;timetable-data-info&quot;&gt;&#123;&#123;act.dayTime&#125;&#125;&lt;/p&gt; &lt;p class=&quot;timetable-data-info&quot;&gt;&#123;&#123;act.buildingRoom&#125;&#125;&lt;/p&gt; &lt;/div&gt; &lt;/template&gt; &lt;/el-table-column&gt; &lt;/el-table&gt;&lt;/div&gt; 先说明一下几个常量： hours = [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22] char2Day = &#123;&#39;M&#39;: &#39;Mon&#39;, &#39;T&#39;: &#39;Tue&#39;, &#39;W&#39;: &#39;Wed&#39;, &#39;R&#39;: &#39;Thu&#39;, &#39;F&#39;: &#39;Fri&#39;, &#39;S&#39;: &#39;Sat&#39;, &#39;U&#39;: &#39;Sun&#39;&#125; dayKeys = [&#39;M&#39;, &#39;T&#39;, &#39;W&#39;, &#39;R&#39;, &#39;F&#39;, &#39;S&#39;, &#39;U&#39;] 整个 el-table 绑定的数据是 hours，每个元素对应一行。 第一列是一个模板，内容为 &#123;&#123;row&#125;&#125;:00，row 是当前行的值，也就是小时数。因此，第一列显示的是 9:00、10:00、11:00 等。 第二列开始是用 v-for 生成的多列模板。 用每个星期生成一列，每个小时生成一行。因此除头行头列外，表格中的每个单元格都是一个小时。 对每个小时，遍历 timetableList，如果有一门课的 day 和 startHour 与当前小时相同，就显示这门课的信息。 v-show 是 Vue 的一个指令，类似于 v-if，但是不会销毁元素，只是隐藏。这样，如果一个小时有多门课，就会显示多个元素，而不是覆盖。（v-if 会销毁元素，所以只会显示最后一门课。） 是的。判断是否有课的逻辑就是这么简单。只要星期和小时都对上了，就知道是哪门课了。 span-method 绑定 mergeTimetable 方法，用于合并单元格。 &lt;script&gt;1234567891011121314function mergeTimetable(&#123;row, column, rowIndex, columnIndex&#125;) &#123; if (columnIndex === 0) &#123; return &#123;rowspan: 1, colspan: 1&#125;; &#125; for (let act of timetableList.value) &#123; if (act.day === dayKeys[columnIndex - 1] &amp;&amp; act.startHour === row) &#123; return &#123;rowspan: act.endHour - act.startHour + 1, colspan: 1&#125;; &#125; if (act.day === dayKeys[columnIndex - 1] &amp;&amp; row &gt; act.startHour &amp;&amp; row &lt;= act.endHour) &#123; return &#123;rowspan: 0, colspan: 0&#125;; &#125; &#125; return &#123;rowspan: 1, colspan: 1&#125;;&#125; mergeTimetable 每创建一个单元格就会调用一次，参数是当前单元格的信息。 如果当前单元格是第一列（显示小时数），就不合并。 然后，仍然是遍历 timetableList，寻找是否有课程占用当前单元格。 如果当前单元格是课程的第一个小时，就返回 rowspan 为课程持续小时数，colspan 为 1。 如果当前单元格是课程的第二个小时及以后，就隐藏该单元格，返回 rowspan 为 0，colspan 为 0。 如果当前单元格没有课程，就不合并。 为什么要隐藏呢？因为如果不隐藏，就会出现这样的情况： 假设 A 课程在星期一 9:00-11:50 (占用 9:00, 10:00, 11:00)，B 课程在星期二 10:00-10:50 (占用 10:00)。 此处 RxCx 表示原本居于第 R 行第 C 列的单元格，Row X Col X 表示显示在第 R 行第 C 列的单元格。都是以 0 开始计数（第 0 行和第 0 列是表头）。 A 课程匹配到的是 星期一 9:00 (R1C1)，rowspan 为 3，colspan 为 1，合并了 R1C1、R2C1、R3C1。 但是实际上 R2C1 和 R3C1 并没有消失，也并不像 Excel 那样合并了。 它们仍然要显示出来。Col 1 挤不下了，所以它们会向右平移到 Col 2。 Col 1 Col 2 Col 3 Row 1 R1C1 R1C2 R1C3 Row 2 R1C1 (2) R2C1 R2C2 Row 3 R1C1 (3) R3C1 R3C2 Row 4 R4C1 R4C2 R4C3 如此一来，原本应该占用 R2C2 的 B 课程就被挤到了 Row 3 Col 2，而原本应该显示的 Row 2 Col 2 就空出来了。 而 隐藏本应该被合并的单元格 就能解决这个问题。 Col 1 Col 2 Col 3 Row 1 R1C1 R1C2 R1C3 Row 2 R1C1 (2) R2C2 R2C3 Row 3 R1C1 (3) R3C2 R3C3 Row 4 R4C1 R4C2 R4C3 在处理完这个问题之后，课程表的基本功能就实现了。 点击单元格时，弹出对话框，确认是否删除课程是用 deleteFromTimetable() 实现的，并调用 updateSectionStatus() 和 saveLocalStorage()。略过。 杂项LocalStorage12345678910function saveLocalStorage() &#123; localStorage.setItem(&#x27;timetableList&#x27;, JSON.stringify(timetableList.value));&#125;function loadLocalStorage() &#123; const data = localStorage.getItem(&#x27;timetableList&#x27;); if (data) &#123; timetableList.value = JSON.parse(data); &#125;&#125; 初始化打开页面时，需要初始化课程列表——进行一次空搜索，显示所有课程。 此外，读取 LocalStorage 中的数据，更新课程表。 结语作为 Vue 的练手项目，这个项目还是很让我满意的。 不过，代码组织、数据结构、规范等方面我是一概不懂的，所以写得很乱而且很难维护。 设计思路也很混乱，很多地方都是现学现卖，好在最后还是实现了想要的功能。 此外，CSS 非常简陋，没有考虑 UI&#x2F;UX 和响应式，在手机上看表格会很难受。 如果有大佬看到这篇文章，希望能给我一些指导。 感谢阅读！","categories":["Tech"]},{"title":"2023 年 9 月","path":"/2023/202309/","content":"我现在实在是缺乏更新博客的动力，所以标题本来应该有的一个关键词都懒得加了。 不过好在周末本来也干不了什么事情，姑且是有时间写一写吧。 亦赢亦输大二是真的很忙。 一方面，课程表上的课程其实和大一是一样多的。18 学分的课，每周要上 18 小时的 Lecture，再加上 4 ~ 6 小时的 Lab，并没有多少区别。不过 18 学分实际上是非常多的，但是考虑到由于专业课很难更变 Lecture 的时间，为了以后上 GE 和选修课的方便，前两年能多上几门都是好的。 另一方面，课业的难度与强度与大一完全无法比拟。大一上完全是通识教育，大一下才有三门比较简单的专业课。但是到大二上，专业课增加到 5 门，并且是计算机组成原理、数据结构和算法、面向对象、计算机网络及离散数学这些相当核心的课程。计组和计网给人的感觉可能是背课本，但实际上不用模拟软件玩上几个小时，连 D Flip-Flop 或者是 4 位 ALU 都不一定能搞清楚。DSA 更是相当接近 OI 和算法竞赛的内容，作业题都在学校的 OJ 上，尽管理论上深度和广度要求都不高，实际上思维的转变就足以阻碍很多人。OOP 和 DM 相对比较简单，但同样需要花课后时间思考和练习。 再是，我到大二才发现，学校开展的活动确实是极其丰富多彩。志愿服务、短途考察、PALSI (小助教) 、Tech 300（创业营）等等，都是非常有意思的活动。此外，还有很多申请奖学金、参加第三方赛事、竞选学生组织的机会。如果不仔细阅读每一封 Email，很容易就一学期呆在宿舍里荒废了。但与之相对的，如果对活动了解的太多，就会发现自己的时间不够用了。 于是我现在就深觉自己太过忙碌，又什么都没做好。 这有什么值得升华的主题吗？ 不知道，但我可以确信的是，如果我仍然每天 0 点之后睡觉，那么迟早会出问题。必须要抵制熬夜刷手机的诱惑。——真的，虽然说上大学之后作息就没好过，但是让我切身体会到睡眠不足和作息不规律的危害之后，我没法承担这样的风险。 不过姑且是讲一讲另一个「亦赢亦输」的主题吧。 自从 7 月开始我一直沉迷于「蔚蓝档案」（国际服）。这款游戏我觉得应该不用在这里打广告了——我可以这样保证，如果你下载了游戏，看到登录界面的 CG 就能明白了。尤其是补习部的那张，完美符合我对美少女的想象。 只可惜现在看不到这一组开屏 CG 了。 游戏中有一名极其强力的 DPS 名叫「圣园未花」，她的大招描述是这样的： 对1名敌方单位造成攻击力1540%的伤害(基于目标当前生命值百分比将该伤害提升至1-2倍)(目标当前生命值百分比越高，造成的伤害越高) 意思很简单，最终伤害随着目标生命值百分比的增加而增加。不过实际上大招造成的是多段伤害，每一段都会即时计算目标生命值百分比，因此越往后倍率越低。 那么这和「亦赢亦输」有什么关系呢？ 有一名总力战 Boss 名为「Binah」，其最高难度至少需要 3 支队伍才能击破。（简单说明一下总力战：Boss 攻高血厚，最高难度通常无法用一支队伍击破；总力战允许用多支队伍参战，但是角色不能重复使用） 因为需要多支队伍，就有必要考虑把未花放在哪一支队伍里。在最优解中，如果放在第一支队伍，可以快速压 Boss 血线，但是后续晕眩 Boss 要求的伤害就更难达到；如果放在第二支队伍，未花造成的伤害就会减少。为什么呢？因为基于目标当前生命值百分比将该伤害提升至 1-2 倍，如果第一支队伍的伤害过高，那么第二支队伍的未花就会造成更低的伤害。换句话说，目标生命值百分比越低，损失的伤害越多。 这就是非常典型的「亦赢亦输」的情况。有一个看起来是奖赏的东西，但实际上人人都有，如果你得不到最多的奖赏，你就相当于损失了很多。倒也不是我想讲这个理论，社群里人人都在讨论伤害损失的问题。这个额外伤害不是额外的、免费的、附赠的吗？是的，但是因为它实在是太好了，我们都把它当成理固宜然的事情了。如果本来就没有这个额外伤害，我们也不会觉得有什么不对。 这个（被过度简化的）例子到此已经足够了，把结论外推到生活中就能得到一个普遍的结论： 天下没有免费的午餐。 对，实际上就是这个老生常谈的道理。即使它事实上是免费的——暂且不论时间和精力的成本——你在心理上也会认为它是有代价的。它并不是无节制的，当你感受到它的不足时，你就会觉得自己亏了。就算在事理上是赚了，你仍然会觉得自己因为赚得不够多而亏了。你甚至不会强调自己赚了多少，而是强调自己亏了多少。 当然，在生活中还有一个非常重要的限制因素是时间和精力。就算你能够完美地安排计划、预见到所有的风险，你也不可能关心并做好所有的事情。而在这种情景下，人很容易过于关注自己没有做到的事情，而忽略了自己已经做到的事情。这就是「亦赢亦输」的另一种情况。 我们总是在意自己的损失，而不是自己的收益。这就是 Utility Theory 的基础，人类心理上并不把损失和收益看成等价的。但与此同时，这和效用函数讨论的也不完全相同——亦赢亦输现象是因为人在与 理想状态 比较，不知不觉中偏移了参照系与函数的原点，把「不亏」定义为「最大化收益」，而不是「没有损失」。而预期效用理论则是因为人在与 现实状态 比较，现实状态下亏的东西太多，因此人们会选择不亏（字面意义上的非负收益）的东西。 顺便一提，我这学期选的通识课程是 Green Economics，主要内容是环保视角下的经济学。实际上内容是最基本的市场经济学，不过是习题背景全都与环保相关。这样一门课也确实挺不错，不需要 Macro 和 Micro 的基础，又能学到一些基础的经济学知识。 不过基础理论有一个很大的问题，就是它们都是在理想状态下成立的。而在现实中，很多情况下我们都无法达到理想状态。这就是为什么我们需要更多的理论，来解释人们在现实中的行为。 一个简单的例子，最低工资是一种 price floor，它的目的是保护低收入人群的利益。但是实际上，最低工资会导致失业率上升，因为雇主不愿意支付高于市场价格的工资。这就是一个典型的「亦赢亦输」的例子，最低工资的提高会导致失业率的上升，而失业率的上升会导致更多的人需要最低工资。这就是一个恶性循环。 ——以上是理论的推导。实际上研究表明，适当提高最低工资有助于降低失业率，但是对调节竞业市场平衡的作用仍然有限，只能作为一种补充手段。 最后是，我 8 月份说好要写一篇博客讲 SQL 处理连续日期的问题，但是我现在还没写……可能写不了了，因为数据库帐号已经被公司收回了。 不过实际上有很多知识都值得写博客讲解——毕竟网上也能找到很多内容几乎相同的 CSDN 博客不是？ 不过倘我真的要写，那肯定是得用心准备的。现在实在是没什么精力与动力写博客，我不准备写流水帐——虽然生活确实有很多趣味值得分享，亦不是随便写几句谜语然后无病呻吟——虽然我确实还有很多想说而从未出口的话；我只想写一些有价值的东西，而不是为了写而写。 以上。祝看到这里的你生活愉快。","categories":["Journal"]},{"title":"2023 年 8 月：丧失","path":"/2023/202308/","content":"但从根本上说，其他人并不像自己想象的那样对我感兴趣。如果向全世界发布信息，我总是害怕会被很多人看到，但实际上我的影响力微乎其微。所以，即使我随意将自己的工作日志广播出去，只要在意的人能看到就好了……因此可以说，这就是我自己的工作日志！我怀着这样轻松的心情做着这些事情。嗯，现在也是这样。 でも、基本的に、自分が考えているほど、ほかのひとって自分には興味が無いものなんですよね。全世界に向けて何かを発信するとたくさんのひとに見られてしまうという怖さを感じてしまうんですが、実際のところは、自分の影響力なんてたかが知れていて。だから、惜しみなく作業ログを垂れ流したとしても、気にしてくれるひとだけ、気にしてもらえたらそれでいい・・・なんなら、自分の作業ログだしっ！って、そんな軽い気持ちでやってました。まぁ、今もそう。——DTM 初心者とボカロ P コミュニティ 8 月 9 日，星期三ボカコレ和上个月一样，工作之后就越来越没有写博客的动力了。不过不管是工作学习还是娱乐总归是在思考着一些事情，所以还是想要写下来。 由于我已经懒到极致，连标注日期的必要都没有了。这玩意还能称为「日志」吗？ 首先是，ボカコレ 2023 Summer 已经落下帷幕了。 如果你不知道什么是 ボカコレ，那么看到它的英文名 Vocaloid Collection 也能猜到，是一个围绕以 VOCALOID 等音声合成软件的音乐创作活动，每年举办两次。这一届有 4 个主要赛道，分别是 TOP 100（主榜）、新人、ネタ（梗曲）、remix。还有一些演奏、MMD&#x2F;3DCG 的副赛道。 当然这些并不重要。本届的主榜第二是 ずんだシェイキング &#x2F; なみぐる feat.ずんだもんぎ 春日部つむ，这首歌的前作是 ボカコレ 2023 Spring 的新人榜第二 ずんだパーリナイ，现已在 Project Sekai 实装； 新人榜第一是 おどロボ &#x2F; 海茶 feat.琴葉姉妹 with ずんだもん，这首歌也会在 Project Sekai 实装； 这两首歌都毫无疑问是非常优秀的作品，顺便一提，画师都是 nekomo，独特的像素风非常可爱。 当然，这篇博客不是来推歌的，而是根据往届ボカコレ的惯例，收集和交换感想。 有必要的话，会另外写一篇文章来推荐一些歌。——又在挖坑不填了。 交换感想以下所有文章都在 note.com 发布，并且带有 #ボカコレ 的标签。 DTM 初心者とボカロ P コミュニティ很认真地讲了自己作为 DTM 新手在吉他、钢琴、MIX 方面获得的社区帮助。 ふぉんとのボカコレ2022秋整理了 ボカコレ 2022 Autumn TOP 100 和新人榜总共两百首歌的 PV 中使用的字体。果然不管是什么领域都会有人很认真地研究。结果而言，使用最多的五种字体是「游明朝」、「しねきゃぷしょん」、手写体、「ヒラギノ明朝」、「筑紫Aオールド明朝」。还列举了一些字体使用非常精妙的 PV。 ボカコレをビジネスで考えてみよう也一直有人想要逃离排名。 可能把ボカコレ从春&#x2F;秋两季改成冬&#x2F;夏两季，更有庆典的感觉。不过这个夏祭り终究是属于少数人的，不管是 TOP 100 还是 rookie，被埋没的永远是大多数。这事儿当然算不上有什么问题，对名P来说，粉丝量并不会提供太强的竞争力，还是需要作品的实力；对新人来说，往推特上一发，加上几个标签，然后听天由命就是了，说不定就火了。所以整个会场的焦点常常集中在几个「期待の新人」身上，直到新人这个名号的有效期过了。 source: @kgneissr IQゼロのプロモーション戦略因此，进入 T100 确实是一件值得庆祝的事情。 顺便一提，鼓励观众发弹幕确实是能够很好地提高排名的手段。比如说 rookie 榜 T99，温室 &#x2F; Name.o feat.V_flower，以 4.4 万的播放量位居第 7，但是由于弹幕、点赞、收藏太少，最终排名只有 99。 ボカコレお疲れ様でした！ これだけ全力で作った曲だし自分が推さないで誰が推してくれるんだ！ 这首歌是我倾尽全力创作的，我不代言谁来代言！ ボカコレ2023春考察 一つ難点があるとすれば、ボカロ文化はオルタナの文脈で成長してきたもの（だと小豆沢は思ってます）なのに、メインストリームが使うような手法を使ってのし上がることに自己矛盾が生じないかどうか、という部分でしょう……消費文化に対する反逆者であったはずなのに、いつのまにか消費文化の真ん中にいた自分。 如果说有什么缺点的话，那就是 VOCALOID 文化是在另类音乐的背景下成长起来的，但如果用主流的方式登上顶峰，这不是自相矛盾吗？……我本应是消费文化的反叛者，但不知不觉中我发现自己已置身于消费文化之中。 断片般的创作好吧，我们暂时告别ボカコレ这个话题，来讨论一些二次创作的事情。 有必要声明一下，我故意把事情讲得很模糊，因为有时候不宜指涉具体例子，但是我又想讲出来，所以就这样吧。 在上一篇博客中提到过，二次创作有三个要素： 原作 二创与原作的关联性（至少能够让人想起原作） 原作带来的粉丝基础、粉丝的期望 模式 载体（视频、漫画、小说）及其特性（适合怎样的内容） 传播渠道及其受众 内容 制式（结构、非具体的内容）、想法（将制式应用到具体的内容上） 技术、时间、精力 三者交互提供了不同的可能性，又在不同方向上互相限制。 「制式」指的是一种不需要具体特征（比如说，原作中的角色和设定）就能成立的模式，包括结构以及结构的初步实现。 「想法」指的是如何将制式和具体特征结合起来，以提高二创作为创作（艺术）或者娱乐的价值。 8 月 30 日，星期三故事就到这里打住，已经到了实习的最后一天了。 这两周我用 Vue.js + Element-plus 写了个排课工具： 工作流：Webstorm + Vue.js + Vite + GitHub Pages 网站：CityU Schedule Helper 项目：cityu-cs&#x2F;cityu-cs.github.io 看起来很简单——至少架构上是很简单， 真的只有一个 main.js 和几个 .vue 文件； 没有数据库交互，因为我没有钱租服务器； 所有的数据都是放在 .json 文件里的，好在文件并不大（源码合计体积大约 1MB），所以实际响应速度还是很快的。 实际上还是花了我一周多的时间从零开始到调试完成，虽然有很多时候是在摸鱼。 这个工具的主要功能： 通过课程代码、课程名称、科目、级别等信息搜索和筛选课程 浏览各个课程的上课时间段，选择加入到自己的课表中 课表可视化，方便分享、导出 网页会自动判断上课时间冲突和无法添加的课程 网上几乎没有开源的方案能解决我的问题，所以我只能自己写了，也作为熟悉 Vue.js 的练习。 （写这个之前我几乎没有接触过 Vue.js，只是看过一些教程，所以还会犯出在 &lt;script setup&gt; 中使用 export default 的低级错误。前者是 Composition API，后者是 Options API，不能混用。） 踩的坑太多了，多到我有必要另外写一篇文章来记录，这里就先挖个坑。","categories":["Journal"]},{"title":"2023-08-01：Re-creation in Pragmatism","path":"/2023/20230801/","content":"It has been more than a month since I last wrote a reflection. The reason is simple; internship is pretty busy. But thankfully I do have some time to rehearse my thoughts. I have been reading William James’ Pragmatism for the past few days. Interesting and insightful, it is a book that I would recommend to anyone who is interested in philosophy. Though, this article is not a book review. Instead, I would like to share some of my thoughts on the idea of re-creation in pragmatism. The very first thing to do, just like in many other philosophical contexts, is to define the term. Re-creation, in this context, is the process of creating something new out of existing things. It is a process of creation, since time and effort are required to create something new; but different from creation, since the new thing is not created out of nothing, but rather out of existing things. In other words, re-creation is a process of creation that is constrained by the existing things. Constraints are everywhere. In fact, I would argue that constraints are the very reason why we need to create. If there are no constraints, then there is no need to create. For example, if we can live forever, then there is no need to create new things. We can just live forever and enjoy the existing things. But since we cannot live forever, we need to create new things to enjoy. In this sense, constraints are the very reason why we need to create. And in re-creation, constraints are the very reason why we need to create new things out of existing things. Re-created things extend the existing things, and simultaneously, the new elements in the re-created things are limited by the existing properties of the original existence. Macroscopically, moulding specific existence from abstract elements, theories and ideas is a process of re-creation. For instance, creating a new piece of music is a process of re-creation, since the new piece of music is created out of existing elements, such as notes, chords, and rhythms. Musical theories and ideas also extend and limit the possibilities of the new piece of music. In this sense, any original creation is also a process of re-creation. But that’s not what we are going to talk about today. Microscopically, reshaping specific existence into another thing is also a process of re-creation. And that’s where the pragmatism comes in. There are actually two ways of re-creation in pragmatism: the first one is to keep the structure and form, but modify the content; the second one is to keep the element, but alter the structure or form. They are called redintegration and reconstruction respectively. For instance, rearranging a musical piece is a process of redintegration; while creating a new piece of music or fanfiction based on an existing piece of music or novel is a process of reconstruction. Redintegration is only limited to a few specific types of existence, such as music, paintings, or code (if you wish to call ‘fork’ with such a long name). But reconstruction is applicable to almost everything. You almost create something new. There are no limitation on forms of expression, and content can be anything. But wait - you are recreating something, so there must be some constraints. It is the elements that prevent you from creating something that is completely new. It can be characters, settings, chord progressions, art styles, or even the laws of physics. In this sense, reconstrctuion is connected to the original existence merely by the elements, which, however, is already enough for readers to recognize the connection. Readers. Yes, readers are also essential in any creation. They provide a constant stream of motivation for creators to create, or to continue creating; and concurrently, their expectance also constrains the creation. And, in reconstruction, the constraints from readers are even more important. In fact, the constraints from readers are the very reason why reconstruction is possible. If nobody ever recognizes the connection between the original existence and the new creation, then it is nothing but a new creation. Well, if the artist provides tags or descriptions, anybody can easily recognize the connection. But that does not solve the problem essentially. Unrecognizable works are only commented “out of character” or “out of style”, and that’s it. With a by-and-for-the-readers mindset, reconstruction is a process of re-creation thatutilizes the elements from the original existence,creates something new out of the elements,retains the similarity of elements between the original existence and the new creation,satisfies the readers’ expectations. Is that a satisfactory definition? Well, actually full of mistakes. Although I have emphasized each of the four points, they also come with constraints that make this definition self-conflicting. First, something I have been always underlining: self-indulgence also has its place in art. The reason behind is too trivial to explain. When both reader and author is you, it is pretty much like: Ended Up DeadSheeno MirinYou reckon this alone is the “truth” to youAnd that everything else is false?Well, if you’re satisfied with that,Then I won’t restrain you from drowning there,However, no matter how far you go, that’ll still beA mere story made up of the signals you’ve ever siphoned over;It’s nothing more than a foreword of you, by you, for you.English translation from Vocaloid Lyrics Wiki Artists who create sarcastic works are usually depicted as dissatisfied with anything, including their own works. But that’s not true. They are just dissatisfied with the world, and the fact that they are trying to convey the dissatisfaction through their works should never be interpreted as self-hatred, which, however, would make it impossible to perceive the sarcasm. Yes, the song is criticizing the self-indulgence. But I quote it here because it is why I would vindiacte self-indulgence. The song is criticizing the self-indulgence caused by unselective information consumption, which will eventually lead to a mentally doomed state, or “doomscrolling”. But self-indulgence in art is different. It is the very beginning of every creator. To satisfy yourself is the first step to satisfy others. It is also one of the most important motivations for creators to create. You start with no readers. You entered the world of creation, full of enthusiasm, but more importantly, you already know what you must create. You are not satisfied with the existing beings, which motivates you to create something new, and sail you through the first ocean of creation. Before you could replace the engine with readers’ expectations, you need to start with your own expectations. Even if you are only recreating doujin (lit. same person; refers to re-creation that features the main elements like characters of the original work; basically same as reconstruction) &#x2F; fanwork &#x2F; parody, the motivation still serves as an important part of the creation. Whether you are too satisfied with the original work or not, you still starts with no readers, full enthusiasm, clear expectations, and a strong motivation to create. Nothing is essentially different from creating something original; but it should be easier to accumulate fans since you are recreating something that already has fans, compared to starting up as an full original creator. So why would I quote the song? Because it is a reminder that self-indulgence is not the only thing that matters. Startup is also a stage where the majority of quasi-artists are stuck. They tend to care too much about the comments, reactions and monetization, and eventually lose their motivation to create. They are not satisfied with their own works, but instead indulged with the illusions made up by the readers. Everything seems fine, expect that the work is not at the center of the creation. The readers are. So the creation can be anything; it doesn’t really matter, but the state of “the creation exists” is the only thing that matters. Or they are easily defeated by negative comments, or too little reactions. And the story is over. So we should modify the 4th line of the definition to: try to satisfy both the author and the readers; but never sacrifice the author’s satisfaction for the readers’. Additionally, about the form and elements. It should be noted that content, an abstract of the internal musical &#x2F; art &#x2F; plot &#x2F; concept flow, is unspecific. If you change the form and elements, but use the same flow, then it will appear different, but feel the same. For instance, low quality reskin games, or AI generated art with same prompts except the characters. Creating such things is a blasphemy to art, and should be excluded from the definition. That also raises a new question: content is important, but does form matter? Well, in fields of re-creation, most of the creators are only capable of one specific form. I can’t compose music or draw paintings, so I can only write. But form still matters. For majority of both artists and readers, form is more decisive than the type of the content. For instance, if I were not interested in doujin, I would never find an opportunity to read The Disappearance of Suzumiya Haruhi. (Copilot, good book, but who asked? I am serious.) So with a given form and elements that limits the expression of content, the creator should utilize the idea so that the content are designed in the most pragmatic way. Which is contradictory to the form-oriented mindset: with given idea and elements, the creator instead find a form that can express the content in the most pragmatic way. Which is better? I would not comment on this. Sarcastic enough, it is difficult to master both routes. But this provides a chance for content and form to be equally important. And that’s why I would like to modify the 2nd line of the definition to: build up the content and form based on ideas and elements in the most pragmatic way. So that’s it. In short, re-creation is a process of creation that is constrained by the existing things. Its characteristics are:preserves the elements form original work,select most suitable form and content to project the idea,and some rules of thumb for both original and parody creators:satisfies self before readers. Thanks for reading. I am not sure if I have made myself clear, but I hope you enjoyed it. See you next time. P.S. I do not wish to admit that I structured the pragmatism based on my views on erotic doujinshi. But that’s a good theory, isn’t it? Just do not read the article again, with “you moulded the theory simply because ero manga is warranted to be pragmatic” in mind. No, I did not. Actually, based on my interpretation on Kaiwai music (Kaiwai is a small fraternity featuring artists imitating each other’s music), I have already had a vague idea of the pragmatism. But I did not realize it until I read Pragmatism. Original and imitation mixes with each other, and somehow grants birth to a new subgenre. The good news about it, is many Kaiwai artists have now become renowned musicians. They starts with no listeners and simple imitations, but gradually, they have developed their own styles, and now they are creating their own music. That’s truly pragmatic, in terms of both creation and creators. And .edley is something you should never miss. P.P.S. Blue Archive is a good game. Go download it. Official website for Global version","categories":["Shorts"]},{"title":"笔记：pandas 的常用操作","path":"/2023/Pandas/","content":"示例来自 Kaggle 的 Pandas 课程。 读取和写入文件1reviews = pd.read_csv(&quot;../input/wine-reviews/winemag-data_first150k.csv&quot;, index_col=0) index_col=0：将第一列作为索引。在 csv 的某一列已经是数字编号 (0, 1, 2, …) 的情况下使用。 1reviews.to_csv(&quot;filename.csv&quot;) 索引和选择二维 DataFrame 的索引方式：先行后列，用逗号分隔。只选择行，则不需要写出列名。: 表示所有行。 ilociloc 用行&#x2F;列的数字位置 (0, 1, 2, …) 来索引，类似于 Python 原生的列表索引，左闭右开。 123456reviews.iloc[0] # 取出第一行reviews.description.iloc[0] # 取出 description 列的第一行reviews.iloc[-5:] # 取出最后五行reviews.iloc[:, 0] # 取出第一列reviews.iloc[1:3, 0] # 取出第 1-2 行的第一列 locloc 用行&#x2F;列标签来索引，索引是左闭右闭的，除了数字，也可以取字符串区间。 123reviews.loc[:9, &quot;description&quot;] # 取出第 0-9 行的 description 列# description 是第 1 列 (0-indexed)，因此上述代码等价于reviews.iloc[:10, 1] 条件选择1reviews.loc[(reviews.country == &#x27;Italy&#x27;) &amp; (reviews.points &gt;= 90)] 运算符：&amp; (and)、| (or)、~ (not)。 1reviews.loc[reviews.country.isin([&#x27;Italy&#x27;, &#x27;France&#x27;])] isin：判断值是否在列表中。 1reviews.loc[reviews.price.notnull()] isnull：判断是否为 NaN。 统计综述 count, mean, median, min, max, std：常用的统计量。忽略 NaN。 describe：返回上述统计量的汇总。 idxmax, idxmin：返回最大&#x2F;最小值的索引。 unique：返回所有唯一值构成的列表。即去重。 value_counts：返回每个值出现的次数。 映射12rpm = reviews.price.mean()centered_price = reviews.price.map(lambda p: p - rpm) 返回一个 Series，索引与原来相同，值为函数的返回值。 12bargain_idx = (reviews.points / reviews.price).idxmax()bargain_wine = reviews.loc[bargain_idx, &#x27;title&#x27;] 列和列的运算结果仍然是 Series，因此可以使用 idxmax 等方法。 使用操作符运算类似于 apply，可以让一行中的多列数据参与运算，但是速度更快。 123456789def star(row): if row.country == &quot;Canada&quot; or row.points &gt;= 95: return 3 elif row.points &gt;= 85: return 2 else: return 1star_ratings = reviews.apply(star, axis=&quot;columns&quot;) apply：对每一行&#x2F;列应用函数。默认按列，axis=&quot;columns&quot; 按行。返回一个 Series。 分组和排序1reviews.groupby(&#x27;points&#x27;).points.count() 按照 points 列的值进行分组，然后对每组的 points 列进行计数。也就是输出每个 points 值出现的次数。 12country_provinces = reviews.groupby([&#x27;country&#x27;, &#x27;province&#x27;])country_provinces.apply(lambda df: df.loc[df.points.idxmax()]) 选出每个 country-province 组合中 points 最大的行。 1country_provinces.reset_index() 将 country-province 的 MultiIndex 从索引中移除，拆分为两个普通的列。然后自动添加 0-indexed 的列索引。 1reviews.groupby([&#x27;country&#x27;]).price.agg([len, min, max]) 按照 country 分组，输出每组的记录数、price 列的最小值和最大值。 agg：对每一列应用多个函数。此处的 len 是 Python 的内置函数。 123countries_reviewed = country_provinces.agg(&#123;&#x27;points&#x27;: [&#x27;len&#x27;, &#x27;mean&#x27;], &#x27;price&#x27;: [&#x27;min&#x27;, &#x27;max&#x27;]&#125;)countries_reviewed.reset_index()countries_reviewed.sort_values(by=[(&#x27;points&#x27;, &#x27;mean&#x27;)]) 对多列使用 agg，生成了一个行方向上的 MultiIndex。因此需要使用元组来索引，如 (&#39;points&#39;, &#39;mean&#39;)。 sort_values：按照指定列的值进行排序。默认升序，ascending=False 降序。 1countries_reviewed.sort_index() 按照列索引进行排序。 数据类型和缺失值1reviews.points.astype(&#x27;float64&#x27;) 将 points 列的数据类型转换为 float64。 一般地，整数使用 int64，浮点数使用 float64，字符串使用 object。 1reviews.region_2.fillna(&quot;Unknown&quot;) 将 region_2 列中的 NaN 填充为 “Unknown”。 1reviews.taster_twitter_handle.replace(&quot;@kerinokeefe&quot;, &quot;@kerino&quot;) 批量替换。 重命名和合并表1reviews.rename(columns=&#123;&#x27;points&#x27;: &#x27;score&#x27;&#125;) 将 points 列重命名为 score。 1234canadian_youtube = pd.read_csv(&quot;../input/youtube-new/CAvideos.csv&quot;)british_youtube = pd.read_csv(&quot;../input/youtube-new/GBvideos.csv&quot;)pd.concat([canadian_youtube, british_youtube]) concat：将作为 list 传递的多个 DataFrame 按行拼接（即纵向堆叠，行数相加）。 1234powerlifting_meets = pd.read_csv(&quot;../input/powerlifting-database/meets.csv&quot;)powerlifting_competitors = pd.read_csv(&quot;../input/powerlifting-database/openpowerlifting.csv&quot;)powerlifting_combined = powerlifting_meets.set_index(&#x27;MeetID&#x27;).join(powerlifting_competitors.set_index(&#x27;MeetID&#x27;)) join：将两个 DataFrame 按照指定的列进行合并（如果表 powerlifting_meets 和 powerlifting_competitors 中的两行具有相同的 MeetID，则合并为一行，保留两张表中的其他所有列）。 使用 lsuffix 和 rsuffix 来处理两个表中列名相同但含义不同的列。","categories":["Tech"]},{"title":"2023 年 7 月：缺省","path":"/2023/202307/","content":"很忙。倒也不是很忙，工作和娱乐都占据了很多时间，不太能剩下什么精力来进行写博客之类的杂事。 我的脑海里一时半会儿也没什么好的关键词飘过，所以标题就是缺省值了。 近况报告，7 月 12 日工作实习。上班时间是 8:30-17:30，中午 12:00-13:30 午休。 从零开始做一个 Servlet+Java Web 项目，后续还会加入 Bootstrap, jQuery 等前端框架、用 Spring Boot 重构后端。 生活在玩 世界计划 缤纷舞台! feat. 初音未来 (日服)。游戏很好玩，但是由于我上班没有合适的环境玩游戏，基本上靠 AUTO 清理体力。下班和周末会花不少时间玩，但是不冲榜。卡组太差，技术有限，开心就好。 在自学雅思。目标大概是在 2024 年 1 月之前取得 7.5 分。但是我主要靠自己啃书做题，所以进度很慢。 在听音乐，各种各样的音乐。从界隈曲延伸出去的可能性是无穷的，我不可能听到每一首好歌，但是我不会拒绝任何一首好歌。 在观察人类。我向来喜欢阅读博客与博客类似物——正当窥伺，而关于音乐创作、评论、分享的博客内容丰富、类型广泛，而且作者之间又会互相引荐，在这个过程中可以发现更多有趣的人。 当然，由于我有不少“对互联网上不知道散失在哪里的内容印象深刻”的经历，有必要把我觉得有趣的博客记录下来。 创作者和分享者我们从 ポストずんだロックなのだ (是后俊达萌摇滚的说) &#x2F; 世界電力 feat. ずんだもん 这首歌说起。这是第一届无色透名祭播放量第二高的作品，虽然说这个没有排名的活动中播放量并没有什么意义，但是受到高度关注的作品肯定有其独特之处。 但是这里不是来讨论曲子的。这里只是分享一些博客、帖子、拼贴诗、行为艺术，以及更多创作者和分享者对于「音乐」的理解。 無色透名祭あとがき - あなたのファンはどこにいるのか：世界電力在无色透名祭后的感言。不管十年还是初投稿的 P 主，视频的播放量都有可能受到推荐算法等不确定因素的影响。播放量并不能直接反映作品的质量，甚至也不反映喜爱度，而只呈现了部分群体在部分时间内的行为。因此，应该在意的不是”时间累积播放量”，而是”时间累积的人”。 ボカコレルーキー反省会：再生数分布や属性別の最適な動き方など：如何合理地利用社交媒体在ボカコレ上取得优势。另外，比起超过 85% 的作品都达不到 500 播放量的ボカコレ Rookie，所有作品都超过 500 播放量的无色透名祭显然给了不知名音乐人更多的机会。 目標達成のボカコレ2023春：创作者的最初和最终目的，即被听众听到。 後編-ボカコレ2023春を終えて∼クロヨウチュウ篇∼：很多人都想拿到第一，但与此同时很多人也拿不到第一。但是为了提高排名而努力也是有意义的。（提高排名 !&#x3D; 高排名） で考えるクリエイターのメンタルコントロールについて：也有人想要逃离ランキング这个概念。不过到最后总归能找到自己喜欢的音乐，也算是一件好事。 近况报告，7 月 28 日工作7 月 17 日开始做数据分析项目。公司用 PostgreSQL 存储数据，用 Navicat 进行数据操作、分析、制作报表。 PgSQL 虽说和 MySQL 基础语法差不多，但是内建函数、timestamp 的处理、视图、触发器等等都有不少差异，所以没法简单地迁移 SQL 语句。 例如，MySQL 中的 outer apply 在 PgSQL 中没有对应的语法，需要用 left join + lateral 来实现。 已经给公司做了一份报表，但是不管是数据源还是分析方法上都出现了不少问题。还是得多学多看多问多练。 过几天写一篇文章讲一下怎么处理连续时间的问题。 顺便一提，公司的数据库规模远超我的想象，虽说还没有达到「大数据」的程度。比如说，某张表 2200 万行，转储下来就是 20GB，更别说这过程的内存消耗直接把公司电脑卡死了。 也因此，虽然「视图」是非常重要的工具，但是堆叠视图后查询效率低得令人发指，有时我干脆新建临时表来处理数据。虽说面对更大规模的数据，动辄几小时的查询也是常态，但我可是要写报告的，10 分钟都等不起。 生活然后我又不想玩世界计划了。虽然月卡已经充了，我也能很干脆地不上线，那肯定是有原因的——有更好玩的游戏。 在玩 蔚蓝档案 (国际服，TW&#x2F;HK&#x2F;MO)。游戏很好玩，扫荡很方便。没了。韩国人手游特有的养成膨胀——这点在《边狱巴士》中体现得尤为明显。 但是我 270 抽没出水大叔，我很难受。我不想玩了。 退坑两天之后又回来了。那就认清现实，该借的时候狠狠地借，备战 3 周年 Fes。 在背雅思单词。现在「不背单词」在开展暑假打卡活动，1~3 人组队，所有人在 14 天内至少打卡 13 天，就能瓜分上亿酷币。这倒是不错的激励方式。因为我当时刚开始用不背单词，所以也随便找了一个只打卡过 10 天的队友，结果两个人成功全勤了。有的时候血压拉满，23 点看到队友还没打卡；有的时候我早上起来队友已经打卡了。当然我的学习时间也不是很规律。 根据活动页面的统计信息，约 80 万人至少打卡过 1 天，约 40 万人至少打卡过 13 天，活动的参与度还是很高的。 不过为什么要背单词呢？先不论根本原因，直接原因是这是每天上下班挤地铁的最佳消遣。看视频、看小说、玩手游我都试过，倒不是说时间花得值不值，在拥挤的地铁上，面对大量的目光，我总是下意识地把手机屏幕遮掩起来朝向自己。与之相对的，什么娱乐都不如背单词光明正大。 我得承认因为工作没什么闲情逸致写博客，但是偶尔这样更新一下也是不错的。","categories":["Journal"]},{"title":"暮しガスメータ / 電ǂ鯨 歌词翻译和节奏考证","path":"/2023/Kurashi/","content":"Title: 暮しガスメータ (生计煤气表) Artist: 電ǂ鯨 @ELwhale35 Vocal: 琴葉葵、琴葉茜 (Sub)、ストピくん (Cho)、根音ネネ (Cho) (Voice SE: 東北きりたん) 萌娘百科 Youtube Niconico Bilibili (字幕，转载) 我很喜欢的一首歌，虽然网上已经有翻译了，但并不妨碍我自娱自乐做一份意译。 但是除此之外，我今天准备扒谱的时候看 Youtube 上的耳コピ视频，发现节奏极其复杂，于是就有了这篇文章。 很可惜的是，没有官方 midi，以下的节奏纯粹是我用耳朵听出来的，所以可能有错误，欢迎指正。 网上已有的扒谱都是按照 4&#x2F;4 节奏来写的。不过，有一个视频 把 BPM 当成了 260，而实际上 BPM 是 130。我一直在考虑是什么原因导致他用双倍 BPM 写谱，然后发现 130 BPM 下，副歌开头是在小节的第 3 拍，而如果用 260 BPM 写谱，副歌开头就是在小节的第 1 拍了。 继续思考、比较，我发现这首歌的节奏远远不止这一处奇怪。几乎整首歌的歌词都和 4&#x2F;4 拍下的小节无法对齐，存在大量的盈拍和亏拍。此外，乐句和乐句之间也存在重合的情况（即抢拍），用不定节奏也很难描述。 因此我决定把 4&#x2F;4 拍和不定节奏两种模式下的节奏都写出来，以供参考。表格较长，向右滑动查看翻译。 各种乐谱中有且只有 Chodify 上的是弱起 1 拍的。考虑到最后一个小节只有 3 拍，我认为这是合理的（用休止符弱起，相当于把原来 4&#x2F;4 节奏下的每一拍都往后移了一拍，例如原来的 1:1-10:4 变成了 1:2-11:1）。 而实际上，如果按照没有弱起的节奏计算，大部分乐句的第 1 拍落在 4&#x2F;4 节奏的第 4 拍上，而不是第 1 拍上。虽然也有很多乐句的第 1 拍落在 4&#x2F;4 节奏的第 1 拍上，但是可以认为，整首歌确实是弱起 1 拍的。 点此查看无弱起版的节奏考证。 表例橙色：表示这一段结尾少 1 拍粉色：表示下一段开头抢 1 拍无弱起：（前奏、间奏、尾奏）的小节对齐无弱起的 4&#x2F;4 节奏与之相对的，（主歌、副歌）的小节对齐有1拍弱起的 4&#x2F;4 节奏 歌词节奏时间翻译 BPM 130弱起 1 拍 Intro(开头+1拍) 4/4 x 10 [1:1-11:1]无弱起 Verse 1(3/4+4/4+4/4+5/4) x 4 (结尾-1拍) [11:2-26:4] 郊外　萎びた町の集合住宅のぬるい空気3+4+4+511:2-15:1凋敝的城镇 郊区的公寓 微热的空气 惨めに僕を殺さないで。3+415:2-16:4不要杀死我 弃于凄惨间 どうか、心を奪わないで。4+517:1-19:1还请你不要 夺走我的心 君は、僕の大事ながらくたになった友達を3+4+4+519:2-23:1是你 对着我生锈了的重要朋友 「おもちゃになってしまったね」と3+423:2-24:4说着「变成玩具了呢」 そんな風に、懐かしそうに笑わないで。4+(5-1)25:1-26:4然后怀念般地笑着 Verse 24/4 x 8 [27:1-32:4] また、遠足前の夜中に住む4+427-28而今 远足前的夜晚 たくさんの腐ったこどもたちが4+429-30许多 腐烂的孩子们 なお明日のことがいとほしくなって泣くんだ4+431-32仍在 渴望明日而泣 耳をふさいで寝るといい。4+433-34:4只好 蒙住耳朵 寻求安眠 Interlude 1(抢1拍,开头+1拍) 4/4 x 8 [34:4-43:1]无弱起 暮しは続いてゆく。生活还在继续 Verse 3(3/4+4/4+4/4+5/4) x 2 (结尾-1拍) [43:2-50:4] 正午にまた眠くなる3+443:2-44:4今日安心轻抚我 安心があやしてくれる今日に4+545:1-47:1正午催促我入眠 僕らの体は錆びついた3+447:2-48:4不觉身体已生锈 ついに錆びついてしまったんだ4+(5-1)49:1-50:4不知此期终将至 Pre-Chorus 14/4 x 9 [51:1-59:4] だが、それがいくら憎らしくても4+451-52不过 就算再讨厌 僕たちの暮らしてしまう日々は。4+453-54这是 我们生活的日子 ああ洗濯の取り込みがまだだって気づいて4+455-56啊啊 衣服还没收 空と遊んで崩れた両の4+457-58伸出 崩坏的双手 手を伸ばす459:1-59:4与天空游戏 Chorus 1(抢1拍) (5+6+6)/4+(4+6+6)/4 [59:4-67:4] 暮しガスメータ559:4-60:4生计只需煤气表 安心の代金は郵便局で払う6+661:1-63:4在邮局付清安心的代价 暮しガスメータ464:1-64:4生计除了煤气表 他にも安心はコンビニエンスで百うん十円6+664:4-67:4其他的安心在便利店也只需百十元 Chorus 1(抢1拍) (5+6+6)/4+(4+6+6)/4 [67:4-75:4] 暮しガスメータ567:4-68:4生计只需煤气表 幽霊は夜笑い669:1-70:2幽灵夜里发笑 僕はまた困る670:3-71:4我又陷入困扰 暮しガスメータ472:1-72:4生计除了煤气表 みだりな安心はコンビニエンスで百うん十円6+673:1-75:4胡闹般的安心在便利店也只需百十元 Interlude 2(开头+1拍) 4/4 x 8 [76:1-84:1]无弱起 あおい：ダンス踊って？　ダンスダンス476:2-77:1葵：一起跳舞吗？跳舞跳舞 あかね：ダンス踊って？　ダンスっす。477:2-78:1茜：一起跳舞吗？我们在跳哦 あおい：ほらダンス踊って？　ダンスダンス478:2-79:1葵：来吧一起跳舞吧？跳舞跳舞 あかね：ダンス踊ってよ。279:2-79:3茜：就一起来跳舞嘛 きりたん：ヤダヤダ。180:1（不要不要。） あおい：ダンス踊って？　ダンスダンス480:2-81:1葵：一起跳舞吗？跳舞跳舞 あかね：ダンス踊って？　ダンスっす。481:2-82:1茜：一起跳舞吗？我们在跳哦 あおい：ほらダンス踊って？　ダンスダンス482:2-83:1葵：来吧一起跳舞吧？跳舞跳舞 あかね：ダンス踊ってよ。283:2-83:3茜：就一起来跳舞嘛 きりたん：...できない！！184:1（……我做不到！！） Interlude 3(抢1拍,开头+1拍) 4/4 x 8 [84:1-92:1]无弱起 （生活） Pre-Chorus 2(抢1拍,开头+1拍) 4/4 x 9 [92:1-100:4] 昔むかしに恥じた日々と4+492:1-93这是很久前令我羞愧的 重なってしまった物語だ4+494-95日子里诞生的故事 こどもたちの笑う声が膨らんで濁った4+496-97孩子们的笑声越发响亮而嘶哑 君を騙してしまうような4+498-99就算是能骗过你的 嘘でもいい。4100:1-100:4谎言也好啊 Chorus 2(抢1拍) (5+6+6)/4+(4+6+6)/4 [100:4-108:4] 暮しガスメータ5100:4-101:4生计只需煤气表 不意になればいい6102:1-103:2指针在不意间滑过 僕はまた曇る6103:3-104:4我又陷入不安 暮しガスメータ4105:1-105:4生计除了煤气表 孤独の詰め合わせ6106:1-107:2还有一份孤独的大杂烩 団地A棟の狭い空の下6107:3-108:4在小区A栋的狭隘天空下 Chorus 2(抢1拍) (5+6+6)/4+(4+6+6)/4 [108:4-116:4] 暮しが滑った5108:4-109:4生活不意间滑落 午睡のふりをして君が事切れる6+6110:1-112:4假装午睡的你就这样离去 現実＝幻想な気がして4+3113:1-114:3留下感觉现实如同幻想般的我 写真写真3114:4-115:2任随照片与照片 団地A棟の空に撒いている6115:3-116:4在小区A栋的低空滑翔 Outro4/4 x 3 (结尾-1拍) [117:1-119:3]无弱起 翻译参考了 Vocaloid Lyrics Wiki。 VLWiki 上最后一句的翻译是非常精妙的， Photos, photos are flying through the air at block A 颇有「未若柳絮因风起」的意趣。我本来想翻译成 照片照片 在小区A栋的低空飞行 但后来上我还找到了一篇歌词解读。这也很有意思，以一个我从来没有想到的角度，给这个隐喻做了一个更加绝望的解读。因此我把翻译改成了 任随照片与照片 在小区A栋的低空滑翔 「任随」和「滑翔」既可以作为一个词，也可以分开作为两个字理解，这样就算是同时保留了两种解读。 如果你和之前的我一样觉得这首歌只是在讲述失去挚爱之后孤独且荒诞的生活，并且被「生活还在继续」这样希望与绝望共存的图景所打动，那么我建议你不要看这篇文章，因为它会让你对这首歌的理解产生很大的冲击。—— Copilot 如是说。 另一种解读琴叶姐妹住在群山环绕的小镇郊区。火山爆发导致瓦斯等有毒气体泄漏，重重灾难下小镇的居民们都死亡了，只有琴叶姐妹幸存下来。(Interlude 3) （生活）此处 PV 中可以看到城市在水中，每座建筑物都像是一座孤岛。猜测这座城市并不是在海上，而是如同切尔诺贝利一样，因为自然灾害不得不与外界隔绝。君は、僕の大事ながらくたになった友達をまた、遠足前の夜中に住む たくさんの腐ったこどもたちが幽霊は夜笑い 僕はまた困る许多孩子们在远足前的夜晚死去，肉体腐烂成为垃圾，灵魂化作幽灵困扰着葵。（注意此处是「僕」而非「僕ら」，意味着只有葵能看到幽灵。）昔むかしに恥じた日々と重なってしまった物語だこどもたちの笑う声が膨らんで濁った君を騙してしまうような嘘でもいい。此处 PV 中可以看到幽灵们的手越伸越长，想要抓住葵。但突然幽灵的手臂都被切断了。僕らの体は錆びついた　ついに錆びついてしまったんだ空と遊んで崩れた両の手を伸ばす但是与此同时，残留的瓦斯开始影响她们的身体。开始生锈，最终成为垃圾，这是疾病与死亡的隐喻。暮しが滑った午睡のふりをして君が事切れる現実＝幻想な気がして写真写真団地A棟の空に撒いている生活在不意间滑落，也就是长久以来的生活方式被打破了。在有毒气体的长期影响下，午睡的茜逝去。自然，打算和茜长期生活在一起的葵无法接受现实，告诉自己这是幻觉，是梦。葵回顾着和茜的回忆。那么最后的问题是，葵到底选择了接受现实还是继续逃避呢？这里就有几种可能性了：字面意思上，葵接受茜的死亡，选择了继续生活。葵为了逃避现实，选择了“随着照片一样在空中飞行”，跳楼自杀。（但是，死亡也有可能是隐喻意义上的，也就是“心”&#x2F;精神的死亡。）思考到这一步，这个隐喻承载的绝望已经远比生活本身更加深刻了。不过，解读作者还补充到，「因为有毒气体的影响，葵也活不了多久了。」另一方面，还可以说，瓦斯已经影响到精神安定，她已经无法正常生活了。煤气表并不是记录日用煤气的，而是监测有毒气体浓度的。尽管这和已经灭绝的城市背景看起来不相符，不过她们毕竟还要去邮局和便利店，只看到整个世界观一隅的我们并不能断言这是不可能的。那么，你怎么看呢，我的朋友？","categories":["Misc"]},{"title":"技术：JavaWeb 项目环境配置","path":"/2023/Javaweb/","content":"话说在前头，如果你像我一样对 JavaWeb 的基础知识了解不够，光是配置环境以运行别人的项目就可以让你欲仙欲死。 不过我还是希望这篇文章能够帮助到你（也提醒自己）。因此，请务必一步步仔细阅读、操作，有问题可以在评论区留言。 环境 OS: Windows 11 IDE: IDEA 2023.1.2 (Ultimate Edition) SDK: JDK 1.8.0_372 (Java SE 8) Database: MySQL 8.0.33 Server: Tomcat 9.0.76 IDEA 导入 Eclipse 项目为了学习 JavaWeb 项目的开发，我从最经典的图书管理系统这个案例入手，找了一个 CSDN 上的项目。 不过当我导入项目后，就出现问题了：项目结构没有 src 目录。打开资源管理器检查，发现 src 目录确实存在，但是在 IDEA 中却没有显示出来。 有问题的项目结构 根据文件 .classpath 可知，这个项目是在 Eclipse 中开发的。 解决方案： 导入模块Ctrl + Alt + Shift + S 打开 项目结构。请注意，不是打开 设置（Ctrl + Alt + S，即全局设置）。也可以点击右上角的齿轮图标，选择 项目结构。在 项目设置 - 模块 选项卡中，点击右侧的 + 号，选择 导入模块。在选择导入文件或目录的窗口中，选择项目的根目录。在导入模块的窗口中，选择 从外部模型导入模块 - Eclipse。接下来的配置不需要修改，下一步直到完成即可。如果配置无误，可以看到 IDEA 的文件树根目录变成了整个项目的根目录，并且 src 等目录也能正常显示了。配置完成后的项目结构 配置数据库连接如果你还没有配置 MySQL，去官网下载 MySQL Installer。如果你有疑惑，可以参考 这篇 CSDN 文章。 除此之外，还需要下载 MySQL-Connecter-J，这是 MySQL 的 Java 驱动包。（它包含了 com.mysql.cj.jdbc.Driver，驱动包和类名不一致是很正常的现象，不要再问我为什么了！） 至于数据库怎么连接，要看具体项目了。一般会将数据库的连接信息写在一个 .properties 文件中，只需要修改数据库密码即可。 IDEA 配置数据库链接此外，为了让 IDEA 也能理解数据库结构，方便编写 SQL 语句，点击右侧边栏的数据库图标，添加 MySQL 数据库。 建议设置为全局配置、永久保存密码。配置完毕后点击下方的测试连接。 添加 MySQL 数据库 测试数据库连接这一般是第一个运行的 main() 函数。Ctrl + Shift + F10 运行…… 一般都会报错，因为种种依赖没有正确配置，比如说 javax.servlet 等等。 编译报错 我们先转进配置 Tomcat，顺便解决依赖问题。 配置 Tomcat 环境下载 Tomcat前往 Tomcat 官网，选择你需要的版本下载。此处以 Tomcat 9 为例。 下载时选择 64-bit Windows zip，才能建立本地服务器。 下载后解压到任意目录，例如 D:\\java\\apache-tomcat-9.0.76。 配置环境变量配置环境变量打开 控制面板 - 系统和安全 - 系统 - 高级系统设置 - 高级 - 环境变量。Windows 10&#x2F;11 可以直接搜索 Path 或 环境变量。添加环境变量：键为 CATALINA_HOME，值为 Tomcat 的目录（此处为 D:\\java\\apache-tomcat-9.0.76）。修改环境变量 Path，在最后添加 %CATALINA_HOME%\\bin。在 IDEA 中打开 项目结构，在 平台设置 - SDK 选项卡中找到你使用的 SDK 的路径，例如 C:\\Users\\Color\\.jdks\\corretto-1.8.0_372。添加环境变量：键为 JAVA_HOME，值为 SDK 的路径。修改环境变量 Path，在最后添加 %JAVA_HOME%\\bin。添加环境变量：键为 JRE_HOME，值为 %JAVA_HOME%\\jre。修改环境变量 Path，在最后添加 %JRE_HOME%\\bin。第 4 步，找到 SDK 的路径 在 Tomcat 目录下进入 \\bin，双击 startup.bat，启动 Tomcat。如果命令行中出现 信息 [main] org.apache.catalina.startup.Catalina.start [xxx]毫秒后服务器启动，证明环境变量配置无误。 打开浏览器访问 http://localhost:8080/，看到 Apache Tomcat/9.0.76，证明 Tomcat 启动成功。 Tomcat 启动成功 此时应关闭 Tomcat，避免后续操作 8080 端口被占用。 在 IDEA 中配置 Tomcat 和依赖配置依赖打开 项目结构，在 项目设置 - 模块 选项卡中，选择 依赖，添加： - mysql-connector-java 的 jar 包 - tomcat 的 lib 目录（此处为 D:\\java\\apache-tomcat-9.0.76\\lib）添加依赖此时再测试数据库连接，应该没有问题了。 配置 Tomcat 服务器最后也是最核心的步骤。 配置完成后，打开任意 .jsp 文件，可以在右上角看到浏览器图标，点击即可在浏览器中打开。 新建 Facet打开 项目结构，在 项目设置 - Facet 选项卡中，点击右侧的 + 号，选择 Web。选择模块，确定。修改 Web 资源目录，选择 web（也有可能名为 webapp 等）。此处为 D:\\java\\others\\Library_management-\\WebContent。修改 Web 模块部署描述符，选择 web 目录下的 WEB-INF\\web.xml。此处为 D:\\java\\others\\Library_management-\\WebContent\\WEB-INF\\web.xml。新建 Facet注意观察上图左侧 \\WebContent 的结构。配置完成后，其图标变成带有一个蓝色圆点的文件夹。 新建 Artifact如果你还没有关闭项目结构窗口（如上图），点击右下角的 创建工件。否则，在 项目设置 - 工件 选项卡中，点击右侧的 + 号，选择 Web 应用程序：展开型 (Web Application: Exploded) - 基于模块。根据下方提示修正依赖问题。有两种方法：将 mysql-connector-java.jar 包添加到 WEB-INF/lib 目录下（打包时会自动添加）。将 tomcat 的 lib 目录的作用域改为 已提供 (Provided)（打包时不添加。由于必须要完整的 Tomcat 环境才能运行，即使把 Tomcat 的 lib 目录添加到 WEB-INF/lib 目录下，也无法在未配置 Tomcat 的电脑上运行。因此，不如直接在打包时不添加，减少打包体积、避免冲突）。这个问题不修正也可以。一般发布自己的项目时都会修改成 已提供。新建工件 配置 Tomcat回到 IDEA 主菜单，选择 运行 - 编辑配置。（右上角运行符号的下拉菜单中也有 编辑……，但只能编辑当前运行的配置）新建配置，点击 + 号，选择 Tomcat 服务器 - 本地。注意不要选择 TomEE 服务器。配置 应用程序服务器，选择 Tomcat 的目录（此处为 D:\\java\\apache-tomcat-9.0.76）。点击右下角 修复，在 部署 选项卡中，选择刚刚新建的工件（此处为 Library_management:war exploded）。第 1 步，找到编辑配置选项第 2 步，新建配置 到此我们终于完成了所有配置。Ctrl + Shift + F10 运行，应该可以在浏览器中看到项目的主页了。 运行成功","categories":["Tech"]},{"title":"2023-06-22：No Stalker No Life","path":"/2023/20230622/","content":"Let’s be honest. I am really a fan of peeking into others’ life. Not voyeurism, I have to make it clear. I am not interested in others’ privacy, but in how others live their life. I am fascinated by how they spend their time, how they feel about their life, and what they are willing to share with others. Or more specific, I somehow clicked into a random user who shared many life slices on the Internet, and I was simply amazed by the fact that he actually has so many things to share. That really exhilarated me, and I was like, just overexcitedly pacing back and forth in my room; or a child who has just found a new toy, but have to resist the temptation to play with it immediately. I am pretty grateful to these authors, for they delighted a stranger who have never had the chance to meet them in person, in a rainy night. Life, is a precious art form, while many fail to appreciate it. I am definitely not a good appreciator, and I am not prepared about suprises I would encounter in my over-regulated life. But the fact that I am still able to admire others’ life, is something I should be grateful for. Okay, let’s list their name down here to prevent me from accidentally or delibreately clearing my browser history, or my memory. Some users I foundBokugaPeterCxyAsterisks2024_ As you can see, wherever they post their life slices, on WeiBo, ZhiHu, or their own blog, I will find them. This is simply because I am not intended to search for them, but I am just clicking random links and accidentally bumped into a really, really interesting person. I am not a stalker, but I am a fan of life slices. Life slices, a term suggested by Copilot, refers to fictions featuring massive amount of life details, which is a universally acknowledged genre in all art forms, including literature, film, and even games. However, it is also rarely discussed in depth, because it is so common that people do not even notice it; at the same time, it is dramatically difficult to produce a good life slice, more dramatic than a drama with complex plots and twists. (To be clear, some work features both interesting life slices and appealing plots, but it is not my focus here.) But why fictional life slices? Don’t we already have noticed plenty of inspiring life slices in real life? Yes, they are great, but I will never check back. I don’t have to, nor want to. The fact that they have enlightened me is enough; the content is not what really matters. If I check back, some memories will be ruined, nullifying the premise that I was pretending to listen to the others’ sharing their life, not and will never interact with them AS IF THEY ARE REAL PEOPLE - yes, although they ARE real people and their life slices are factual, I instinctively treat them as fictional characters, because when I read these words, I was loaded with the preset to appreciate them as a work of art. And that’s where the topic grows into in-depth discussion: Fictional lifes and real lifes are essentially different. Fictional lifes are designed with specific purposes. It does not mean the author has to explicitly convey his intention - if something makes you cry, it is usally a tragedy, but not necessarily. It can be the very opposite, where things become too good to be true, and you are crying because you are so happy - and here comes the difference: some authors intentionally make you cry, while some do not. Your tears might be the result of the authors’ intention, or actually your own interpretation mixtured with your own life experience or even your mood at the moment. Therefore, if some concidence decides your feeling towards a work at a specific “moving” moment, it can be pretty hard to reproduce the same feeling again. But reality? Real lifes can also be designed, by the person or someone else. But, well, let’s rephrase that: real lifes can be continued with convincing reasons which makes it look like carefully designed. What does continuous mean? Life slices fictions, as its name implies, only depict a number of uncontinuous life moments, or events. It never tells you what happens between these events, or what happens after the story. This is not a problem because you don’t have to waste time on the repeated, boring, or even meaningless parts of life. You can just focus on the interesting parts, and that’s what makes life slices so appealing. But you are a reader full of imagination. Your wild thoughts will attempt to fill the gaps between these events and add color to afterstories. You still use life slices to design the story, but you are in charge of the details - you no longer needs to admire the author, but you are the author. Even though all these fragments won’t add up to a complete story, you are still and even more satisfied, because your logic is not restricted by the author’s intention. Both fictional lifes and real lifes should follow human logic. Unexpected events can occasionally happen. In fictions, natural and human calamities are designed with specific purposes, while in real life, they are just random. But in both cases, they are not the focus of the story. The focus is always on the characters, and how they react to these events. So, these events don’t need to follow human logic, but the characters do. And that’s where the divergence emerges: In fictions, the characters react in a way which appears to follow human logic. But actually, with the authors’ intention in mind, the characters are actually following the authors’ logic. The events are carefully designed to make the characters react in a way that the authors want them to change, and they just react seemingly naturally but factually artificially. Authors do care about the characters, because they are always the core of any story. They want to create distinctive characters, make them change gradually, and end up achieving something with a different personality. But author don’t care about the characters’ life, because they are not real. They are just a tool to convey the authors’ intention. Even in the most character-orinted fictions, say, the love comedy, the characters are still a tool. The authors want to make the readers laugh, to feel fulfilled (although, as argued above, if you feel a strong crush when reading life slices, it can be your interpretation but not authors’ intention), and to feel the characters’ love (usually the most emphasized feeling, even though it is indirect). Author carefully design their lifes to achieve these goals, but still, the author does not need to worry the actual consequences of the characters’ actions, since the story will just progress (or never progress) as the author wants. Behinding the creation lies a logic link: author wants to create for some motivation (for money, fame, dream or just for fun), and the readers also want to read for some motivation (for relaxation, inspiration, or just for fun). The authors and readers then signed a contract: you give me time and I return with the feeling you prefer. And the substances exchanged in this contract are the work. Characters, though being the core of the story, are completely dependent on the work. Without the work context, they are worthless bunch of words or pixels, literally nothing. Characters and work are just mediums. Essentially, the focus is what the author wants to convey and what the reader expects to receive. The exchange is wrapped in a story, and the characters are “the medium of the medium”. Readers perceive the second order emotions from the characters. You don’t feel characters’ emotion directly, but you feel the emotion the author wants you to feel, and the characters are just a tool to convey that emotion. Though what makes the circumstances comprehensive is that, as I have repeatedly emphasized, your interpretation takes the decisive role in the emotional output. But still, the author has achieved what he wants, and does not need to care what you readers really think (though many of them do care on social media, but that’s another story). - Then what about you? Do you actually need to remove the disguise on the fiction stories and care about the authors’ factual motivation? No. In short: fictions are designed reader-oriented instead of character-oriented. Some categorizes this opinion as pragmatism. But, if fictions are not shared, does it even has any meaning? Authors can claim that they only create for themselves. Truly self-oriented creation, however, is equivlent to disrespect towards the readers. If you don’t care about the readers, why do you even bother to share your work? Real lifes differ from fictions fundamentally. You or someone else design your life. You have to consider the consequences before actions, because it is your own life that cannot be rewound. You simply cannot save and load. And even though you have more possibilities compared to restricted, partial lifes in fictions, your time is very limited. You cannot return to the same “life fork” again and again, and will have to choose one of them. Or you’d prefer to escape from reality? That’s also a choice, only building up regret in your conscience. The continuity of real lifes work here. You cannot skip in real lifes. That’s where the fantasy breaks. The boring, repeated, meaningless, or even painful parts will torture you, simply because you are alive as a person, and you have to be responsible for your life. Escape is probably the worst choice since it implies you don’t want to be responsible. But the consequences will teach you a lesson. Many will end up never reconcilling with their past, and that’s why they are so regretful. Well, I am somehow regretful too, but I am still trying to find a way out of the repeated failures. You don’t need to be fully in charge of your life to reflect on your life. If you avoids the subject, it’s merely an excuse. To demonstrate this, let’s continue the example of love comedy. Be honest and admit that you really wants a love comedy in your life. (If you actually don’t, think of other concepts bothering your life.) But you don’t! That’s because you have become an expert in excusing yourself. If you do care about your life, why don’t you step out? Do not make excuses. You are not a character nor reader, but an author. Fantasy, the concepts you utilized to fill the gaps in fictions, is useless in real lifes, because currently you are the only audience of the life theater. If you don’t share your feeling with others (either in explicit or implicit way should work), they will simply never notice your desires and expectations. Okay, let’s summarize the differences between fictional lifes and real lifes: Fictional lifes are designed with authors’ logic, intended for readers’ perception. Nobody has to be responsible for the characters’ life (but authors should be respectful to the readers).Real lifes are designed with your logic, intended for your perception. You have to be responsible for your life. The article grows too long so I have to stop here. This topic is probably still worth diving deeper, but to transform myself from a suspicious stalker to a inspiring talker is not as simple as I have expected. Many ideas burst when you brainstorm about the topic. However, when it turns to writing a blog to convience yourself and others, it is entirely different. Most of the thoughts are ill-formed or even unrelated, and you have to organize the correct ideas into a coherent structure. During the composition of this short argument, I have failed to persuade myself for three times, and finally settled down with this version. Initial draft quantifies the time and feeling on life slices, and concludes that past life are just life slices and thus nothing different from fictions. That’s evidently absurd, but only when I find I cannot continue the topic with this premise did I realize the issue. Second draft focuses on the Applied Behavior Analysis, but fails to be connected to the topic. Third draft goes back to the difference between fictional lifes and real lifes, but then I argued real lifes does not require logic, which is also absurd. Some of real life events are seemingly logicless because not everything about the person involved is known to the audience, who tends to conclude with very little information. And some accidents are just happening by chance, which does not follow human logic. In this version I found a way to avoid these two issues, by shifting the focus from the events to the characters. And that’s only the first step of logic link. The focus then moved to the work and finally the author, and I finally found the correct way to conclude the topic. Work is created by people for people, and so does real life. But your identity changes from reader to author makes everything different. Let’s conclude with a joke. As you are already an university student, you no longer expects a love comedy with JKs. Instead you are curiously looking forward to JDs. But wake up from that good old dream. The only JD accompanies your university life is JD-GUI.","categories":["Shorts"]},{"title":"2023-06-17：Back to Square One","path":"/2023/20230617/","content":"Let’s go back to square one. Okay, this is the very first post written in English. I am not a native English speaker. However, given my academic background, I am supposed to read and write English articles fluently. Well, yes and no, just like the answer to many other questions regarding my life. I could intepret English without translating into my mother tongue in my minds, but I still never feel like reading long English passages. I could work on my research in English, but academic articles require throughout revision before submission; or write short emails, diaries and game reviews in English, which I fear that I have never expressed my thoughts clearly. But when I made up my mind to change the situation - attempting to write a blog in English, there must be some strong motivations behind. Here: Snowy Day with Peter, secondary blog of PeterCxy, mainly for short articles in English. By very rare chance I found this interesting blog. As some people on iM were talking about New Year’s Eve Gala in their senior high school, I jumped into the discussion and recalled my memory of Senior 2’s Gala. Our class presented a situational comedy featuring ill-humor and tasteless jokes, which was welcomed with bursts of laughter. I worked on the PPT which imitates the style of Galgame (including UI, and choices that can be selected by the audience, though every single choice leads to the same ending), and also responsible for collecting and editing music, sound effects and images. The jokes were just terrible, but I was so proud of myself at that time. The atmosphere was like, I was the only one who can use Photoshop in my class, and thus I have to work on so many things in limited time. To showcase how horrible these jokes were, I will give you an example: Never Gonna Give You UpYou have been warned I recovered documents like this from my old laptop, which is a ThinkPad E480 with i5-8250U (4C8T, BF 1.8 GHz, TB 3.0 GHz), 8GB RAM and 256GB SSD. It is not a thin-and-light laptop, but a heavy brick with a 65W power adapter. The performance is also not good enough for today’s standard, but it is still enough for my parents to use. They were all created in my senior high school because this laptop was bought in my Senior 1 (2019). Among them are many interesting creations, including short films for school activities, short novels for writing contests, and blogs. Yes, blog. I have been writing blog since 2019 - well, to be accurate, I was writing blog in 2019. I have not written a single word as diary from 2020 to 2022. I used Github Pages to deploy my blog at that time. However, that Github account and the local blog repository were deliberately deleted in 2020. I have no idea why I did that, but I did, just like I have reset my game saves for dozens of times. But when I deleted it, I also archived the blog in HTML format. Why? I don’t know since I am actually not a fan of reviewing my past. But I did, and I am glad that I did. I can recover some of my memories of 2019 from these archives. One of the blog written in Oct 2019 has been retrieved here. From today’s view, it’s meaningless cringy yells from a naive child. But let’s not be sarcastic about it, because I has always been a naive child. One interesting thing is that, this was written before my first exposure to ACGN (in Nov 2019), which dramatically changed my worldview and led me to gradually form theories about the world and the society. Well, also made me a weeb, which is, simply a fact that should not be identified as “either good or bad”. Thus at that time, I yelled because I knew I was facing problems, paradoxes and dilemmas, but I had no idea how to solve them. And I did not solve them, nor even tried to solve them. Let’s set down to the main topic. In that blog, I found Typeblog, PeterCxy’s main blog. The blog only contains a few English articles. However, from a link in my 2019’s blog, I knew that Typeblog was a Chinese blog with hundreds of entries back in 2019. So why? It appeared that he has rebuilt this blog in Apr 2022, archiving all the old entries locally and only retrieving a few of them to the new blog. That was the very last things I would expect. The worst thing could happen in the web era is that content was DELETED DELIBERATELY. Imagine searching for an inspiring article for 4 years, only to find the author has deleted it. Still I am not a fan of archiving webpages or even favorating them in my browser, leading me to infinite regret when I want to find them again. But when I do found them, I will feel unparalleled satisfaction. However - then I found a button called Shorts in Typeblog, which leads to Snowy Day with Peter. It is a secondary blog, containing dozens of diary-like articles, mostly in English, but also one Chinese article titled 「初恋」, and another Japanese article titled 「生きる理由」. I was just shocked by the fact that he can write in three languages fluently, and also that someone would keep a multi-language blog. Then I spent an hour or so to digest entries whose title attracted me. He writes the short articles in a secondary blog, because he has very high standard for the main blog (searching for a topic, mindstorming, writing, revising, and finally publishing) which takes too much time. At the same time he wants to record some life thoughts, so that’s how Snowy Day was born, in a very casual way. I would conclude he is a perfectionist, but also a pragmatist. He is serious about blogging. He loves writing, but he also knows that writing is not his main job. He is a programmer, and also a student. He has to balance his time between work, study and life. He has to make compromises and choices, and part of this paragraph was generated by Copilot. Again, back to square one. This passage, though pretty long, has not actually answered why I want to write a blog in English. But, seriously, I would answer, why do I need to have a reason? Okay I will give you one brief reason. When I write in Chinese, there are so many things that I do not express clearly. I was imaging a reader, just a copy of me, whom I am talking to. He knows all the secret of my life, and I do not need to explain explicitly. I have so many experiences, thoughts, feelings in life, and some of the details are omitted so I do not feel so cringy. But when writing in English, I could not even convey my ideas clearly due to limited vocabulary and grammar. I have to explain everything in detail, and even though I have no or few readers, I have to write as if I was talking to a stranger. I have to be more careful about what I am writing, and I have to be more honest about my feelings. I have to be more serious about writing, and I have to be more serious about life. Copilot are definitely an expert in composing parallel sentences. And that was fine. I have to change myself someday. I know some are leading a more fruitful and satisfactory life than me, and that’s why I am not satisfied with my current life. I do lead a life just like many other students with a middle-class family background, with abaudant material resources, a relatively free life, and a promising future. But I am not satisfied with it. I WANT TO BE BETTER, not because I can be better or I should be better, but because I know there are better possibilities in life, and I want to explore them. To become better, I will have to do things that I have never done before, not good at, not interested in, or even afarid of. And writing English blog is one of them, in an effort to reflect on my life and thoughts, but not to show off my English skills. English itself is just a tool, and what I need is exactly a tool, no matter it is English, Chinese, or even Japanese. And that’s it. This passage mainly records the process of how I found PeterCxy’s blog, and how I was inspired by him, which just happened last night. But I do have a lot of things to read and write about. About past, present, future, and beyond imagination. I go jogging in the evening for 20-30 minutes almost everyday, and I have been thinking about a lot of things during jogging. I listen to no music, but just to my thoughts. Though most of the ideas are unorganized and unclear, some are still worth reflecting and exploring. And it was always fun to exchange some random thoughts with friends, which finally leads me to feel obligated about writing a blog to record the interesting seeds of thoughts. And that’s it. See you tomorrow, because that’s a special day.","categories":["Shorts"]},{"title":"2023 年 6 月下：夏天","path":"/2023/202306A/","content":"赛博垃圾桶我为什么（还在）看漫画[Pennel] Ashita wa bunnkasai（明日は文化祭）当之无愧的天才。作者对「朴素」的少女有很深的理解，半途的几个面部特写是我在其他漫画中从没有见到过的。别的作者并不会想着特写这种表情，而基本上只是把表情放在满是对话气泡的画面的一隅。如果单纯用「可爱」来形容，就类同在美食探店视频中反复强调「好吃」一样，缺乏特色而失去了意义。但是作为一个不仅不专业、阅历还十分有限的人，很难找到什么形容词来形容这种「朴素」的可爱。不过尚且有一点可以确定：如同作者在第二本单行本的后记中提到的，「毕竟漫画是要给读者看才能成立的东西，虽然エロ漫画的目标是要给人用的……总而言之，作品出世之后必须要有读者购买，才算是真正的完成。」——美食也是要让食客吃才算是真正的完成。那么，读者看到漫画而感到满足，对作者和读者来说都是一件好事。我能发表什么感想呢？只能希望你也去看看吧。 06-09 (Fri)车祸警示录我一出地铁站就毫无防备地看到了车祸现场。不知道是不是我这辈子第一次看到，总之自从我开始关注车祸新闻以来，我从来没有见过这么近的距离。 EXIF 信息 就在武林门地铁站 A 口旁，体育场路环城西路口的斑马线上，一辆电动车被撞倒在地，物品散落一地，车主被隐藏在遮阳伞下，不知状况如何。交警已经就绪，因为这里本是繁忙路口，高峰时段会有交警指挥交通，所以自然是迅速赶到现场。 很可惜，我想多拍几张照片，但繁忙的车流频繁遮挡相机的视线，我也只好快步走向公司。 06-10 (Sat)住めない夏 不宜居的夏天 说起「夏天」，你会想到什么 ACGN 作品呢？ 嗯，可以有很多。 最近出圈的「通往夏天的隧道，再见的出口」，看到对电影的一些评论，我对原作的兴趣也大增，不过还没来得及看。 但是，好吧，我并不喜欢夏天。我从小到大都不喜欢夏天。 从生活上来说，放暑假虽然很好，却未必有很多时间可以自由支配。但是毫无疑问更加重要的是，夏天实在是太热了，以至于我这个一直拿亚热带季风气候当作气象学典范的人，也不得不承认高温对人类精神的磨折。 当然，其实我平等地憎恨春天、夏天、秋天、冬天。 太过寒冷的冬天和没有暖气、肉身御寒的长三角地区是绝配——这个笑话已经讲了十数载，而对我个人伤害更大的是，由于隔代遗传基因，我和奶奶一样是家族里少有的容易长冻疮的人。初中的冬日清晨，在严寒的自行车库里值日之后，到 8 点钟我的手才能恢复到能够写字的状态。早自习听写？那就很抱歉，全是歪歪扭扭的。 我同样不喜欢春天和秋天。温度的急遽变化往往伴生着感冒、咳嗽、喉咙痛，家里四季都不够用的草珊瑚含片见证这钟成为例常的痛苦。（当然，咳嗽在另外两个季节也不少见。）与此同时，这还对衣品为零的我带来了骇人的社会学挑战。对长袖和短袖判断错误就足够难受一整天了，更何况有的短裤比长裤更热…… 終わらない夏 漫无止境的夏天 从艺术上来说，我同样平等地憎恨春天、夏天、秋天、冬天。 春天的故事太过美好，以至于樱花以秒速五厘米的速度飘落时，我却还在看着那些樱花。 夏天的故事同样太过美好，以至于当我继续过一成不变又一事无成的失败暑假时，我只能继续幻想下一个夏天能做点什么。换言之，夏天还是太热了，热到我连花火大会和大海都懒得欣赏了，还是直接在家里喝冷饮吧。 秋天在 ACGN 中往往不是什么特别的存在，甚至可以说最大的价值就是作为夏天的延续。不过无论是戏里戏外，生活总是要继续的，这也足够喜剧、悲剧和荒诞剧利用好一年中的所有季节。（不过有一点是不同的：戏中人会开始第二学期，而我虽然同样是三学期制，却是第一学期。我只能祈祷这个新学年不会过分地忙乱。） 冬天则理固宜然地承载着让我失去体温的记忆，也恐怕是最温暖人心的季节了，毕竟，这时候的主要热源除了暖炉只剩人体了。 一年前我的硬盘里有两部关于夏天的 Galgame，结果一部是推了一条线——这一条线还很不巧是因为我回老家没网才有兴致玩的，一部是看了个开头，然后就在硬盘里躺尸了。 一年后，我的固态硬盘什么也不剩了，而移动硬盘多了很多部不需要明确季节的 Galgame，毕竟不管在哪个季节吃点糖都是不犯法的。 但是，好吧，我并不喜欢夏天。我从小到大都不喜欢夏天。 最後で最初の夏 最后也是最初的夏天我才想起来这个短语正确的写法是最初で最後，但是放在这里，先是最后、再是最初。 我并不打算回忆高考后的夏天，因为实在是过分地无趣。 简而言之，我六月份在准备三位一体招生，最后是哪家也没过。收到录取通知书之后，七八月份就彻底宅在家里，每天刷刷视频、玩玩游戏，偶尔出去吃个饭，偶尔去图书馆看看书，偶尔去看看电影。——Copilot 是这样说的，但是实际上过分地高估了我的社交能力。顺便一提，那个夏天确实是热得过分。总之，要说有什么值得庆祝的事情，就是开始学日语了——从 7 月 23 日开始，将近满一年了。 这样的生活确实是过分地阴湿。不像高中发生的诸多故事与事故，后者不太光明又不太阴暗，不太好又不太坏，不太欢乐又不太悲伤，不太现实又不太荒诞，不太有趣又不太无聊。这样的经历，当然值得去孙吧水一帖，虽说那个殖民地我从来没敢跨入一步。 总之，还是忘记去年的失败的夏天吧。因为今年总会有新的故事。 今天是浙江省高考的最后一天。表弟考完了，来我家办庆功宴，却不想和他妈吵起来了。 由于我在洗澡没有听到闹剧的全程，不过等我到餐桌上的时候，还来得及目击高潮。 「你根本不知道自己能考上什么学校」「军校就是你的前途！」「你军校本科出来是少尉，研究生出来是中尉。」「指挥类的视力要求比较高，你去读非指挥类的。」表弟快速干饭，然后逃离现场。 以上文字经过简化，毕竟我的记忆也没有那么好。但是听到第三句的时候，我确实是尤为震惊。 我并不准备深入批判这句话背后的价值观，群友一句「2023年了还搁那将来出来是什么玩意儿的」的玩笑话足够反驳了。 当然，事情还没完。接下来他娘一直在饭桌上高声疾呼，讲着军校要准备体检（视力要求 4.3）和政审的事情，还需要他立即估分，然后就是一顿骂。 刚高考完估分当然是不合宜的。单纯因为这个时候连内部答案都要不到，就足够否决了，更别说考生的心理状态了。 群友开始畅谈高考志愿和中考志愿，有母亲强制要求改志愿的受害者，有拉着他人一起改志愿的加害者。我倒是没能参与这个话题。毕竟我中考根本就不用选择，高考虽然做出了选择又不用分数，不怎么用分数，总之，我和选择的缘分并不在我的选择范围内。 现在想想，高考志愿，我选了 CityU，确实是用分数与学校排名做出了一笔合适的交易，应该是不怎么亏的。但是，再深入思考的话，好吧，我并不喜欢夏天。我从小到大都不喜欢夏天。 关于夏天，想写的事情实在太多，但实际上想得还远比写下来的多。我姑且在这里挖个坑，准备写「不存在的夏天」「只剩温度的夏天」「明年的夏天」等等，很多值得思考的故事，道听途说的、亲身经历的，揉杂着想法，都在炎热的夏天中融化。 06-13 (Tue)何もしない夏 无所事事的夏天 某群的聊天记录。 完整版 我的口袋有12个表 9:30:40还有就是彩礼就买卖的体现我的口袋有12个表 9:32:00具体就是，男方向女方家庭拿两百黄金买人情，然后女方家里人不需要经过女方同意就可以把女的出嫁给男方我的口袋有12个表 9:33:18双标是这样的了我的口袋有12个表 9:36:02如果是两情相悦，按道理来说根本不需要彩礼，特别是现代我的口袋有12个表 9:36:27因为家人无法限制你的行动雏男 9:37:29终于看懂你想说啥了 但是我是二次元看不得这个雏男 9:40:39你说的对 但是本人境外势力我的口袋有12个表 9:40:52外国就没这么多逼事我的口袋有12个表 9:41:08二次元得以延续我的口袋有12个表 9:41:46但传统文化被削弱 这番对话是相当洞见的。两条推论看似浅显，在生活中却从未被人提及。 不过，我压根就没打算深刻谈谈个中道理，想要让我从混杂的思绪中整理出一方能够自圆其说的观点，那还不如指望我去好好工作——比如说，我现在的大作业是，构建图书馆管理系统。 听起来很简单对吧？ 实际上，设计系统确实是个很艰涩的工作，写完文字纲要之后写代码，写着写着就开始加新东西，还得回去改文字稿。还得算上，至少全面推倒重来了一两次。 不过这一步在软件工程中确实非常基础且重要。一定要在设计框架的时候想好，弄明白需要哪些对象、哪些属性、哪些方法，才能让所有的用户、图书，以及最重要的，借书还书等操作都能够实现。如果数据库结构设计的不好，后面想写代码发现不好实现，还得回去倒腾，在生产环境中这样的事情可是要不得的。 06-16 (Fri)だれも知らない夏 没有人知道的夏天 最近事情很多，我周末恐怕也不怎么来得及写博客，所以就先把脑子里还没来得及交代的事情整理一下。 首先是，最近在看《义妹生活》。此书的文风相当独特，雅淡又不失幽默，完全没有我久仰其大名而形成的想象中的晦涩难懂。 当然，因为此书的标题是义妹“生活”，不管怎么写，总应该是换种方式写生活，因此怎么想都不会过于高深莫测。而它确实做到了以一种独特的方式写生活，虽然角度和内容并不值得称奇，但确有自己的一种风格。 那么，为什么是《义妹生活》呢？我现在每天坐地铁上下班，由于 2 号线太挤，这十几分种时间几乎没办法好好利用。我有尝试过背日语单词，但是效果并不好，因为不戴耳机的情况下，旁边没有人在外放短视频已经谢天谢地了，这么嘈杂的环境下，我根本没法集中精力。 游戏？手机上根本没有游戏能玩，我没了电脑就失去了绝大部分娱乐方式。 所以还是干点轻松的事情吧。上班族喜欢看网文，而对我来说轻小说成了恰如其分的选择。漫画对眼睛要求太高，而轻小说在合适的阅读器上，几乎不需要花什么精力就能不断滑页——滑页比起翻页来说体感好太多了。 当然也没有这么一路顺风。根本就不存在什么合适的阅读器，只有适配了移动端浏览器视图的网页能让阅读比较轻松。而凑巧哔哩轻小说就是这样的网站，所以我就在上面看了起来。 看着这个站的热门榜，感觉就像回到了三年前，基本上全是熟悉的名字，当然其中大半不合我的胃口所以永远不会点开来看。不过，凑巧点到了义妹，那就是另一个故事了。 写了这么多，我的目的当然不是这个！现在我谨代表少子化対策漢化組向大家推荐一本轻小说，没错，也是义妹，它的名字是——《妹妹人生》！ 好吧，不能剧透，所以我的推荐只能到此为止了。我刚开始读的时候很难想象这是入间人间的作品，但也仅限于刚开始。 存在しない夏 不存在的夏天 今天从家里的老电脑拷贝了一些高中时的文件。 那是一本 i5-8250U (4C8T, 基频 1.8 GHz, 睿频 3.0 GHz)、8GB 内存、256GB 移动硬盘的 ThinkPad E480 轻薄本。 虽然说是轻薄本，但实际上一点也不轻（&gt;2kg）不薄，甚至比我今天的全能本还要厚重。电源适配器也是 65W 的大砖头，而我今天用的是 100W 氮化镓充电器（我同事用的 65W 版本，已经和手机的充电头无异了）。 与此同时，性能也非常薄弱，哪个方面放在今天都不太够用，不过姑且能满足家里的一些上网和办公需求。价格也是四千出头，哪怕放在当时也不算便宜。(顺便一提，这颗 CPU 在当年的评价相当之高，因为 7 代酷睿除了标压 i7 以外全系 2C4T，而 8 代酷睿低压 i5 就有 4C8T 了，性能毫无疑问是大幅提升的。) 此外，开机之后风扇也几乎一直狂转。显示屏是 1920x1080 的，屏幕边框也很宽，这些放在当时算不上什么问题，但是用过高性能高颜值的全新笔记本之后，人很容易被惯坏，很难接受充满年代感的老电脑。 这些当然都不重要，因为电脑是为人服务的。重点肯定在于我在这台电脑上做了什么。 这些文件都是我在高中时期创作的和参与创作的内容，包括但不限于：元旦文艺汇演、微电影、参与征文大赛的短篇小说、博客，还有 Bangumi 爬虫。 高二元旦文艺汇演应该是高中最大型的文娱活动了。我们最初的设计是用 PPT 模拟视觉小说，我负责 PPT，由于最后文本呈现在 PPT 上，这也包括了音乐、美术的素材的收集和编辑，以及剧本的最终修改。内容是浴霸、Jojo、希望之花等烂梗大杂烩，最后串烧了个典中典之恋爱循环宅舞，玩梗的水平相当低劣。倘若不信，可以挑战一下下图： 尴尬癌勿点你已经被警告过了 以群友的评价，「洋不洋土不土徒留尴尬」。 当然以高中生的审美能力，绝对不会在有限的时间内深究 PPT 上的语言是多么拙劣空洞。他们只会跟着人群哈哈大笑，这也正是我们的目的。 微电影，高一和高二都剪过，两个工程加起来 10+GB 了。 高一班里有四个人剪辑，高二重新分班之后只有我一个了。 所以我只好把电脑带到班主任的办公室里，每天晚自习花一节课的时间来剪，顺便玩泰拉瑞亚，持续了一个多星期，外加周末爆肝。 当然不管我怎么剪也改变不了剧本薄弱的事实。 不过，我也出了不少状况。由于一部分剧情的配音是在安静的办公室补录的，其噪音水平和教室环境完全不同，为了保证观感尽量统一，后者必须去噪且开更大的音量，BGM 也相应地调小。但是我怎么也没想到在学校演讲厅外放的音量这么大，BGM 完全盖过了人声。 我当时给最后一段剧情配的 BGM 是 A-39 的《WATER》，这样一首情绪激昂的 Hardstyle(?) 乐曲，被我切成了燥子，加了大量的淡入淡出、倍速，并把最硬的部分切掉、保证前后衔接，才勉强和剧情时长对上。结果，不仅音量均衡炸了，还被人吐槽和纯爱柔和的氛围不太搭。 毫不客气地说，换一首 Galgame 高潮处的 BGM，效果会好很多。但是当年我的电脑上并没有 Gal；这些在 2019 年多次重装系统之后尽数丢失。当然，想想也是，如果多存几个 10+GB 的游戏，这电脑根本活不到今天。 参与征文大赛的短篇小说，这就太有意思了。 文章是海拔七五八三米。 群友做出了如下锐评： 这是什么基础学科，为什么这些字连起来组成的话都难以理解 这是什么，相扑语吗，我无法理解含义 结果而言，我非常成功地完成了对轻小说文风的失败谐仿。 博客总共有两篇，一篇是2019 年 10 月的近期随想。 那个博客在我退役（2019 年 11 月）之前就结束了它的使命。 后来不知道为啥我删除了博客的本地仓库，同时以 HTML 的形式保留了两篇文章。这到底是想去还是想留，就不得而知了。 Bangumi 爬虫。我上个月已经提到过了。 可以鉴赏一下当时完全没有前端知识储备的我是如何解析网页的： 1234567findLink = re.compile(r&#x27;&lt;a class=&quot;l&quot; href=&quot;(.*?)&quot;&gt;(.*?)&lt;/a&gt;&#x27;)findTitle = re.compile(r&#x27;&lt;small class=&quot;grey&quot;&gt;(.*)&lt;/small&gt;&#x27;)findRating = re.compile(r&#x27;&lt;small class=&quot;fade&quot;&gt;(.*)&lt;/small&gt;&#x27;)findJudge = re.compile(r&#x27;&lt;span class=&quot;tip_j&quot;&gt;\\((\\d*)人评分\\)&lt;/span&gt;&#x27;)findRank = re.compile(r&#x27;&lt;span class=&quot;rank&quot;&gt;&lt;small&gt;Rank &lt;/small&gt;(\\d*)&lt;/span&gt;&#x27;)findInfo = re.compile(r&#x27;&lt;p class=&quot;info tip&quot;&gt;(.*?)&lt;/p&gt;&#x27;, re.S)findDeta = re.compile(r&#x27;&lt;a href=&quot;javascript:void\\(0\\)&quot; title=&quot;(\\d*)人评分&quot;&gt;&#x27;) 居然是正则表达式提取 HTML 标签！多少有一点先见之明在里面。 显然，和现在用 BeautifulSoup 解析 HTML 标签相比，思路是一致的——找到信息在页面中的位置，然后提取出来。不过实在是有点太折腾了…… 总而言之，本文展示了高中时期非常幼稚的一些创作。 这当然不是“好”或者“不好”就能界定的；对于高中刚刚接触二次元等亚文化而正在极大地扩展视野的我来说，尝试 “模仿” 只是一种正常的行为，而我今天再次回顾，也只是在陈述事实罢了。 不管积极与否，这些作品都是我高中时期的一部分，也是我今天的一部分。我不会否认它们的存在，也不会否认它们的价值。——Copilot 肯定是不会感到尴尬的，因为它不会感到任何东西。 06-31 (Sat)当然，实际上是 7 月 1 日。 なつかしいなつ 怀念的夏天 最近发现日语中的同音词非常丰富且有趣。比如说，这里的「なつ」，既可以是「夏」，也可以是「懐」。 这个兴趣的开端是「とべない深海魚 &#x2F; 金魚光線 feat. 琴葉葵」，一首海鲜界隈曲。这曲子作为「初めまして」实在是过分地天才了，快去听吧。不过，最让我感兴趣的是间奏的 PV 文字「乾燥した間奏」。发现「乾燥」和「間奏」都是「かんそう」，然后借拙模作出了「完走した感想」这个名字（两个词同样是「かんそう」）。 话说回来，夏天确实让人怀念。虽然，更多的出于一种想象性的追授，而非切身的怀念。听着外婆的手机抖音外放“三十年前的夏天，没有空调WiFi西瓜，却一点都不觉得热”，我的第一感想是，没有人真的喜欢炎热的夏天，只是一层滤镜加于记忆之上，让人觉得夏天是美好的。 不过，夏天实在是太热了，这让我不得不感到生理性的厌恶。虽然说热空气阻滞不了我对运动的热情——因为我每天晚八点才夜跑，但是跑完之后，滚烫的脚底板和湿透的衬衫作用于人身上就是拉向地面的重力。此时路过地下停车场出口，就能感受到风的凉爽，但与此同时又很快会失去这种感觉。 ——话说回来，为什么已经七月了还要继续写六月的博客呢？因为前面有些事情必须补充。 今年夏天的笑话已经讲完了。 表弟最后考了 591 分，省排名 62000+。没过特控线 (594)，所以不能报军校。提前批也只能选陆军工程大学，走人防方向（土木、给排水之流）。 我当然不能评价这是好是坏，这只是一个非常单纯的事实。不过，最后他放弃提前批，优先填报了边远的 211。至于这到底是不是他的选择，是不是好的选择，这两个问题并不同一，我也没法做定论。 结果而言，我本来很关注的情景喜剧就这么烂尾了，这当然不是什么好事。 此事休要再提。","categories":["Journal"]},{"title":"2023 年 6 月中：美食","path":"/2023/202306F/","content":"美食街地图大地图蓝色大头针是蓝天商务中心，红色大头针和小红点都是餐饮店，沈塘桥和武林门是地铁站（都是换乘站）。小地图红色大头针是蓝天商务中心，紫色大头针是一般店家。 蓝天商务中心的位置很尴尬。嗯，也不该这么说，因为这座大厦的历史可比地铁 1 号线都要久远。 但是，对于一个离不开地铁的现代城市来说，它的位置确实不太好：恰好座落在武林门和沈塘桥站的正中间，意味着无论走哪边都是十分钟的路程。 而且更不幸的是，参看大地图，周围的餐饮点实在是过分有限，何况什么川菜湘菜当然不是每天都吃得起的——先不说有没有人会一个人去吃，就算有，恐怕也得是在美团团购上抢到券的情况下；更不用提，根本不合我的口味。虽然高德地图称之为「美食」，但每天找点快餐吃还是更实际一些。 不过，不挑食总归能吃上还算满意的东西，这些天吃的快餐确实是让奔波的日子别有一番滋味。 06-05 (Mon)晓儿面馆&#x2F;肉丝拌川+青菜&#x2F;￥20晓儿面馆在「湘之荷餐厅」旁边（见大地图）。因为门面过于狭窄，往往被路人忽略，但是中午仍然生意兴隆。 离蓝天商务中心正门最近的一家店。 初来1乍到，上司请客，他点了一碗大排拌川加鸡腿，￥25。 嗯，我并不习惯别人请客，虽说加几块钱就能吃到大排，但是我对此并不感兴趣。 对我来说，青菜是最重要的，也是最贵的，很多快餐便宜就是因为没有蔬菜。 话说回来，并不应该指望一碗 20 的面条有如山珍海味，味道和份量都很不错。 但还是有点贵。我的午餐补贴就一天 15，天天吃这家就得自掏腰包了。 此外，油放得有点多了，会给清理手机屏幕带来一定的麻烦。 沙县小吃&#x2F;肉丝炒粉&#x2F;￥14沙县小吃在文晖路上，杭州星都宾馆一侧（见大地图）。绕到整个楼区对角，再过马路（湖墅南路），看到夏天很不合时宜的羽绒服广告，旁边就是了。 诚如上述，我非常喜爱青菜，至于主食，只要能吃饱就行，是饭食还是面食根本无所谓。 不过，我进这家店之前没想到沙县小吃也是像面点一样的经营方式，只给了很多炒饭&#x2F;粉&#x2F;面的选择。 讲道理如果有比较便宜的蒸饺和拌面等小吃，可能还是不错的——为什么我会对这辈子从来没去过的沙县小吃有这样的想象呢？大概是看了江心赋的《沙县大酒店》，产生了错觉，最终却在名字很像的沙县小吃遗憾离场。 总之。这炒粉味道不错。为了方便地铁安检，我在公司把水倒掉了，干炒粉我当然吃得下去——我品尝的面食可太多了。 但主要问题是份量太少了。晚上回家不小心吃了个三明治，这下两天的午餐补贴都没了。 06-06 (Tue)全家&#x2F;香烤猪扒蛋包饭&#x2F;￥14.8全家在文晖路湖墅南路口（见小地图右上角的紫色大头针）。 便利店便当，听起来是只存在于日本的东西，但其实在国内也有，只是国内的连锁便利店本身就是罕见的存在。 总而言之，能吃。 但是很难想象为什么这玩意虽然名字叫猪扒蛋包饭，却是一份名副其实的大杂烩。混杂了某种蔬菜粒的肉排、如卷尺一般蜷缩的火腿、两片没有包着任何东西的鸡蛋、两块完全放弃味道的土豆、一撮伪装成青菜的香菜，还有浸泡在酱汁里的米饭。 确实能吃。除了香菜我不是很能忍受——学校食堂里有时候拿香菜代替常规配菜，我从小到大没受过这么大委屈，从此记恨这种青菜的模仿者——以外，味道还算不错，甚至火腿还挺香。 量也出乎意料的还很足。不过，仍然改变不了它是大杂烩的事实。 也改变不了它是便利店便当的事实。不要被你和店员注视微波炉 90 秒之后，店员给你热腾腾的便当、餐具、餐巾纸外加一个防烫的硬纸板夹给迷惑了；你五分钟之后就吃完出门去，温度一点不剩。 想要诗化这种贫穷的生活方式，还不如去咖啡馆点一杯不合时宜的冰拿铁。 顺便一提，我是在自动收银机上付款的。不如交给店员结帐，然后直接就能热，这样更方便。 再顺便一提，全家的便当并不好抢。大部分都是一天限量两份或者四份（摆起来比较好看），从早到晚不会补货。所以晚上吃？别想了，你真的要吃 17.8 的麻辣小龙虾吗？而哪怕是中午来，12 点和 12 点半也有巨大的区别。 晓儿面馆&#x2F;青菜肉丝面&#x2F;￥15 当天晚上我从文晖路跑到环城北路都没找到一家店能吃的。看到了两家东北饺子，但是不太想吃，于是兜兜转转还是回到了晓儿面馆。 浪费了半个多小时，19:45 才吃上饭。这个点总算是没客人了，我的书包也有了座位。老板做面，老板娘准备收摊。 面确乎不错，虽然只有青菜和肉丝，味道很好，量也足够。 不过量更大的是温暖人心的面汤——呃，实在有点过于暖了，我喝了整碗汤，结果周三早上醒来发现自己舌头麻麻的。 舌头烫伤了，口腔右壁也未能幸免，只能大涂特涂香港特产口腔溃疡药（正美™得口乐特效口腔内膏，主要成分是水杨酸胆碱），到周五才好。 06-07 (Wed)全家&#x2F;葱油大排面&#x2F;￥11.8 11.9 这个价格自然是过分地诱人了。 我周二中午去的时候已经抢光了，可曾想到周三就复仇成功了。 但是味道不太行。大排姑且是大排，葱油面可不是葱加上油加上面——他们真的只是在索然无味的面条上撒了一点葱，一点香味都没有。 量大概还可以，下午没忍住吃了点零食。 06-08 (Thu)永和大王&#x2F;卤肉拌饭三件套&#x2F;￥14.92美团团购&#x2F;参考价￥17.8 永和大王在武林路上（见大地图右下角的红色大头针）。 店内吃卤肉拌饭 + 豆浆两件套套餐就要 19.9。但是在美团团购上的三件套套餐只要 17.8（不计平台优惠）！这下不得不狠狠地品尝了。 卖相和味道上来说，在我吃的这么多快餐中肯定算得上极品了，以至于我都能忽略蔬菜不够多的问题。 卤肉拌饭的卤肉不是那种炖得很烂的，而是切成小块的，但是肥瘦相间，肥肉的油脂和瘦肉的鲜味都很充分地融合在一起，吃起来很香。——Copilot 是这样评价的，看图来说确实不假。类似于学校食堂里的肉燥饭，但是后者太贵了，要 HK$ 28。 豆浆——冰豆浆——其实并没有什么特色可言，不知道以豆浆作招牌的永和大王这么多年下来是不是变质了，不过总比真正意义上的祖传豆浆要健康吧…… 蛋羹也是少得可怜，几口吃完不需要丝毫怜悯。我小时候格外喜欢老娘舅的太湖银鱼丝蛋羹，但是量越来越少，套餐越来越贵，到今天也只能是一个存在于想象中的符号罢了。 不过话说回来，蛋羹真当对我有这么大的吸引力吗？等我开始思考这个问题，过量的鸡蛋摄入已经麻痹了我的神经，我已经不必思考真正的美味了。 06-09 (Fri)A面店&#x2F;火腿鸡蛋炒面&#x2F;￥12.38美团外卖&#x2F;参考价￥19.38 店名不是真实店名。一般使用这种 SEO 特化型店名的店，都不是连锁店，因此你想吃也吃不到。 不过由于我经常买的也就那几家，为了方便区分就用字母代替了。 因为有周五过期的优惠券，就想着用掉吧，虽然并不是最优解，总是能省个几块钱的。 结果就把自己坑死了。 微辣 因为没看到「不辣」在第一行第三个，我以为这个店所有的面都是辣的，因此勉强点了微辣。当时还在想，又不是川菜店，有必要分出来四种辣度吗？ 结果害得我喝了两大瓶水。 说实话，由于辣味让我不得不停下来回顾味道，在第二口面入口之后、补充水分之前，我感觉味道还是比较鲜的；到最后，终究是被水冲淡了。 另外，心急火燎的我同样漏看了另外一个好东西，「免费送冰红茶」，这下真的是亏大了。 碗比较大，反而导致面看起来比较浅，但是实际上量还是很足的。 为了在好评返现的同时让店家颜面比较好看一点，我换了个角度拍照，看起来就比较满了： ……但是结果而言由于手机的 AI 相机很糟糕，拍起来像是冷面——字面意思上的，色彩变冷了。上面那张图看起来比较鲜艳，可能让人更有食欲吧。 06-12 (Mon)卡梅罗炒饭&#x2F;火腿鸡蛋炒饭套餐&#x2F;￥-2美团拼好饭&#x2F;参考价￥11.9 美团拼好饭和美团外卖不是同一个服务，特征是要拼单，但是价格更低。甚至可以说，低得离谱。 由于新人全额返外加好评返现，这餐的实际支出是负数。 我对炒饭有一种莫名的怀念——绝对不是因为“被炒的炒饭”。要说为什么，实际上我在食堂里经常吃到的是盖浇饭，虽然不赖，但是吃多了感觉炒饭确有其魅力。 好吧，恐怕炒面炒粉给我的感觉也不会有什么区别。作为主食，只要能吃饱就行。 至于这顿，没啥可说的。味道不错，量也足够，但是没有什么特别的地方。上不去下不来就卡在那儿了，只能说是一顿饭而已。 不过实际上，不用料理包做这样一顿饭，又何尝容易呢？ 06-13 (Tue)热干面先生&#x2F;热干面+肉夹馍&#x2F;￥6.68美团拼好饭&#x2F;参考价￥9.8 继续美团拼好饭。 肉夹馍比较寡淡。 热干面加了酱包，味道确实不错。我从来没吃过正宗的热干面，也就是说第一次败在便宜热干面上，不过确实有点意思。 热干面里加了少量彩椒。我回家问了一下才知道正宗的热干面确实是辣的，虽然我吃到的更多是花生酱的腻味。 06-14 (Wed)东北水饺&#x2F;全家福水饺 21 个&#x2F;￥9.88美团拼好饭&#x2F;参考价￥11.5 还是美团拼好饭。 水饺自不用说，总归是好吃的。 虽然这辈子吃了这么多饺子，除了韭菜馅儿，其他的仍然很难分辨出具体的味道。 送了两包醋一包辣椒油，但是由于我拿到时外包装已经漏油了，一拿上楼就将塑料袋连同一包醋一包辣椒油一起扔进了垃圾桶。 结果而言，我确实低估了醋的需求量。 06-15 (Thu)801炒粉干&#x2F;鸡蛋炒粉干+豆干+热狗肠&#x2F;￥10.7美团拼好饭&#x2F;参考价￥11.7 仍在美团拼好饭。 比起加饮料加酸辣粉加小菜，这三件套可谓是以最意想不到的方式组合在一起。 甚至可以做出这样的推测：这家店比起沙县小吃更接近小吃店。 不过确实不错，哎，您在这儿稍等，我给您从别的店里誊抄个好评过来，“量大管饱，味道不错，十分满意，还会再来”。 粉干没有肉，只有青菜和鸡蛋，确实是比较接近我想象中的炒粉滋味。 豆干……这确乎是豆制品，但是当时我却不断尝试着用这贫瘠柔弱的身板完全包裹住热狗。哪怕成功了，咬了一口还是会原型毕露，只好分开来吃。 06-16 (Fri)B饭店&#x2F;鸡排+嫩排+培根套餐&#x2F;￥6.9美团拼好饭&#x2F;参考价￥9.9 坚持美团拼好饭。好吧，下周不用坚持了，毕竟拼好饭上的菜式是比较有限的，一下子就划到底了。 看到这个名字会不会觉得作为肉类盛宴有点便宜的过分呢？ 实际到手的第一印象是： 首先，这不叫鸡排叫鸡柳； 其次，很难想象为什么店家用番茄酱在鸡柳上涂抹出如此艺术的图案，艺术到可以说这盒饭是我吃了这么多外卖里面卖相最好的一份。 但是吃到肚子里又是截然不同的感受了。肉排的味道固然不错，但是左侧的土豆萝卜丝好似在暗示…… 快逃.jpg 掀开来一看，果然只有一点点菜，这也就意味着被肉排蛊惑的食客马上就要面对一大碗不加配菜的白饭。 不过或许唯一的一点希望是土豆萝卜丝实际上是辣的，总归算是一种味道。 我正准备打个差评，却开始脑补店家有个针对差评顾客的联盟，只要你给差评，他们就会给你送一份免费的饭，然后你就会被他们的好评洗脑，最终成为他们的忠实顾客。于是我就打了个好评。 好吧，这周的美食街就到这里了。我很荣幸地在此宣布，冠军是周四的粉干套餐。 06-17 (Sat)老杭州面摊&#x2F;肉丝拌川&#x2F;￥16周末，去杭州市肿瘤医院看望爷爷，顺便在医院附近吃了一顿面。 没有图。忘记拍了。但是老杭州面摊既然叫这个名字，得是正宗的。 葱、豆干、豆丝、肉丝，相当的原教旨，还好吃。 只能说比起上面加青菜才有味道的拌川高到不知道哪里去了。 06-18 (Sun)禧悦荟&#x2F;生日快乐面&#x2F;￥0 面不需要什么味道就能下肚。如果你不赞同这个观点，说明白米饭吃少了。 虽然说是零元，也只是这碗面是送的。生日宴总共花了两千余元，虽不宜评价这价格是否值得，但是番茄火锅肥牛确实是一绝。 以下是别话： 父亲在前一天说，「逢九不过生日」，说是明天不应该大摆宴席。 不过等到了包厢，又说「生日要过虚岁」，所以过的是二十岁生日，要大张旗鼓地过。因此，去年的 “19 岁生日” 因为疫情没有过，是非常明智的。 我自不能评价哪种说法更对，只能概括为灵活迷信。 和灵活就业、灵活理财一样，灵活这个词为的就是结果，而非手段。 06-19 (Mon)C饭店&#x2F;广式腊肠蛋炒饭&#x2F;￥8.81美团外卖&#x2F;参考价￥14.81 因为美团拼好饭上拼不成，而且又有券，就改为点外卖了。 放了太多盐。我确实爱吃咸，经常盐摄入量超标，但这份饭恰巧逼近了让我舒服的咸度上限。虽然不健康，但是确实非常好吃。 但是炒饭本身就是过于令人安心的食物，不需要任何理由，就能让人吃得很开心—— 06-20 (Tue)卡梅罗炒饭&#x2F;里脊肉炒饭套餐&#x2F;￥11.1美团拼好饭&#x2F;参考价￥11.6 ——除非太淡了。 这份饭仅有的滋味在于加的两根火腿肠。剩下的不仅不够咸，还不够鲜，让人觉得好似炒冷饭。 或许真的是炒冷饭——但愿不是。虽说从成本考虑，也没必要用冷饭。 和上面的炒饭一比，两份都太过于极端了，不过肯定是咸一点比较好。 当然这顿饭也是有救的。只要改成微辣，就不可能让人觉得寡淡无味了。 这么说，用辣来掩盖菜的贫乏，其实是一种不少见的技巧。 06-21 (Wed)全家&#x2F;港式餐蛋面&#x2F;￥12.8 港式午餐肉煎蛋炒面。确实很港式，像是我在 CityU 吃的午餐的低配版（炒饭+两大块午餐肉+两个煎蛋+蔬菜，HK $23），当然价格也低配了。 微辣的炒面，一个卖相不佳的煎蛋，少的可怜的午餐肉，和意思一下的青菜，填饱肚子，作为一餐。却也足够了。 总的来说不错，比大排面量更足。 06-25 (Sun)东北水饺&#x2F;牛筋面+玉米鲜肉水饺 12 个&#x2F;￥9.1美团拼好饭&#x2F;参考价￥10.7 牛筋面是什么呢？吃了半天也没想明白。搜了一下，吃法和凉皮类似，那也确实，味道和凉皮也差不多。不能说有什么特别之处，但作为主食还算爽口。 老样子，饺子没有什么评价的必要。 06-26 (Mon)801炒粉干&#x2F;鸡蛋炒粉干+豆干+热狗肠&#x2F;￥10.8美团拼好饭&#x2F;参考价￥12.4 和上面一模一样的套餐，所以根本没必要放图。 可以注意到原价涨了 0.7 元。我上次拿的红包是 1 元，这次是 1.6 元，看起来多了，实际上还贵了 0.1 元。 一种过于常见的街头骗术，伴随这过于常见的街头小吃。但是炒粉真的很好吃。 06-27 (Tue)热干面先生&#x2F;热干面+雪花鸡排&#x2F;￥7.5美团拼好饭&#x2F;参考价￥11.1 你以为是鸡排，那就大错特错了，和上面的那份盖饭一样，这是鸡柳。 量还可以。热干面究竟是不是辣的，我已经不太纠结了。 06-28 (Wed)全家&#x2F;照烧鸡排双拼饭&#x2F;￥13.8 全家在做一种很的便当。 首先鸡排竟然是货真价实的，不是鸡柳，光这一点——成本上就比外卖高出不少。 虽然是双拼饭，但是有三种菜，未免有些奇怪。灵机一动的我作出以下推测： 土豆炖鸡丁的类似物和豌豆其实属于同一道菜，它的名字叫宫保鸡丁，只是由于技术原因分开加工，所以就这么放了。 实际上我还是很佩服全家的。这玩意虽说比起外卖没有明显的价格优势，但是强就强在你下楼去便利店买，是先看到了陈列在冷藏货架上的便当再下单的。你看的非常清楚，里面只有少得可怜的蔬菜，但至少是有绿色蔬菜的。下完单就能趁热吃，给不满不留任何机会。 全家是真的想做好原教旨的便当。 06-29 (Thu)A面店&#x2F;火腿鸡蛋炒面+盒饮&#x2F;￥10.8美团拼好饭&#x2F;参考价￥11.8 和上面一样所以没有图。 由于在美团拼好饭上每次只能点一个商品，店家一般都会把饮料放进套餐里。也因此，不会有漏看赠饮的傻子了。 另外，这次还是点了微辣，有备而来就觉得不怎么辣了。 06-30 (Fri)A面店&#x2F;广式腊肠炒河粉&#x2F;￥10.1美团拼好饭&#x2F;参考价￥11.7 还是这个面店，还是经典配方，只是主食换成了河粉。也没啥区别。 学校食堂里卤肉拌饭的饭可以换河粉、米粉、濑粉之类的面食，对我来说没什么区别。不过粉汤热腾腾的，冬天可能吸引力更大一点。 哦对了，还是微辣，但是今天的微辣比昨天的微辣辣了一点。希望下周不要更辣了。第一次那个辣度我就不太能承受了。","categories":["Journal"]},{"title":"2023 年 6 月上：涂白","path":"/2023/202306/","content":"白塗り（Shiro-nuri）是指在日本戰後，為了避免戰爭責任，對於戰爭相關的書籍、電影、漫畫、電視節目等進行的審查、刪改、禁止發行的行為。這種行為在日本戰後的 10 年間十分盛行，對於日本的文化產業造成了極大的影響。在 1952 年，美國佔領軍對於日本的審查權力被廢除，白塗り也隨之結束。白塗り得名于日本傳統的白粉妝容，因為白粉妝容可以隱藏面部的瑕疵，因此白塗り也可以隱藏日本戰爭的瑕疵。另一方面，美國佔領軍在日本戰後的審查制度被稱為「黒塗り」（Kuro-nuri），因此白塗り也可以被視為是對「黒塗り」的回應。但是，由於日本戰後的審查制度並未完全廢除，因此在日本的文化產業中，仍然存在著審查的現象。在日本，這種現象被稱為「グレー」（Gray）。 —— 涂白 - 维基百科，自由的百科全书 赛博垃圾桶在垃圾桶里找到一张涂白的画纸新近看的一些比较喜欢的漫画。[Jorori] Koiseyo Otome（恋せよ乙女）：不知道上哪儿的链接随便选的一本，我一开始都没认出来是 Jorori 的作品，但是光线追踪这玩意上手之后才知道是真当震撼。——为什么我说没认出来呢？我两年前还不懂事的时候第一次看单行本就被开头劝退了（笑）[Jorori] Natsu to Jun（夏と純）：也是随便选的一本，知名度要更高一点。要不是看了罗马音标题我可能都忘了「純愛」怎么读了，真的[Gosaiji] Sotsugyou Reward + Sotsugyou Reward fin（卒業reward）：警惕分割放送[Super Zombie] Sukumizu de Ikou!!（スク水で行こう）：天才（注意彩封与彩封的草稿的区别）[Doji Ro] Incha Doushi no Sex ga Ichiban Eroiyo ne（陰キャ同士のセックスが一番エロいよね）：天才中的天才。顺便一提，作者玩〇〇〇〇这个桥段已经不是第一次了，可以看看去年的[Kise Itsuki] Erythron no Hitomi（エリュトロンの瞳）：「阅副标题无数」节目潜在优质客户；这个列表里最喜欢的一集，没有之一另外还有一些算是印象很深刻的。[Gosaiji] Tokumei no Futari（匿名のふたり）：你群离岛[Iwami Yasoya] Ero Manga sugiru Osananajimi（エロ漫画すぎる幼馴染）：不要笑挑战。另外值得一提的是我的输入法打「おさななじみ」第一个结果是「幼馴染み」，这对我的搜索造成了不可估量的坏影响[Gosaiji] Sukusuku Seichou Nikki（すくすく成長日記）：日志最多上传 9 张图片 06-01 (Thu)熊猫速度今天最大的成果是把之前在 Bangumi-Anime-Ranking 挖的坑给填完了：基于偏序网络的简化排名算法（Simplified Ranking System Based on Partial Order Network, PONet）。 原算法：基于偏序网络的更简单易懂的科学作品排名 算法解释和说明（英文）发布在 Github 排名结果（中文）发布在 Bangumi 这个标题指的是，熊猫 pandas 的速度实在是慢的令人发指。有多慢呢？我们直接放数据说话： 步骤 偏序生成 偏序合并全序 时间复杂度 O(M) O(N^2) 数据量 M&#x3D;7.7e6 N&#x3D;8.5e3 DataFrame 耗时 16 hrs 10 hrs ndarray 耗时 25 mins 2 mins 对，您猜怎么着？仅仅是把 pandas.DataFrame 转成 numpy.ndarray，运算速度提升了 25~300 倍，让这个本来不可能在可接受的时间内运行的算法得以实现。 顺便一提，这个算法的提出者用 SQL 合并，同样是 O(N^2) 的时间复杂度，他用了 4 个小时。虽然说电脑与电脑的性能完全不可一概而论，但是我这 i5-12500H + 16GB RAM 的笔记本，瓶颈反而出在内存上，而不是 CPU 上，这意味着还有很大的优化空间（比如说 numba 和 multiprocessing，但是我并不像写，因为这个速度对我来说已经很快了）。 入门经典接下来转进算法。 首先是我自己在上面的发布帖里写的总结： 原则：作品 i 优于作品 j ⇔ 同时对 i 和 j 进行评分的用户中，认为 i 更优的用户多于 j算法： 考虑作品 i 和作品 j。假设有 n 名用户同时对 i 和 j 进行了评分，其中 x 人对 i 的评分高于 j，y 人对 i 的评分低于 j，则： 如果 n≥10，则 定义 i 对 j 的“合计积分（Total Score）”为 (x-y) 分； 定义 i 对 j 的“比例积分（Percentage Score）”为 (x-y)&#x2F;n 分，接近于科学排名中的“倾向性概率”； 定义 i 对 j 的“简易积分（Simple Score）”为 sgn(x-y) 分，其中 sgn 表示符号函数（即正数取值为 1，负数取值为 -1，0 取值为 0）; 定义 i 对 j 的“折衷积分（Compromised Score）”为 (x-y)&#x2F;sqrt(n) 分。 如果 n&lt;10，则四种积分一律记为 0 分。 针对每一个作品 i，分别计算 i 相对于考虑范围内的所有其他作品 j (j≠i) 的积分，然后取对其他所有作品的平均分作为 i 的最终得分。 然后是我个人关于算法更加详细的解读： 首先，这个算法的核心原则摆在这里，意味着它是 user-based；与一般的基于某条目评分做文章的 entry-based 系统完全不同，关键不是所有条目的评分分布，而是所有的评分记录，因此，无论爬取还是处理，都是快不起来的。 其次，我对不同种积分的进一步看法： 假设我们有作品 A 和 B (x&#x3D;90, y&#x3D;10, n&#x3D;100)，以及作品 C 和 D (x&#x3D;9, y&#x3D;1, n&#x3D;10)。 只考虑这两对关系中，四部作品获得的积分： 合计积分：A+80, B-80, C+8, D-8。合计积分更利好高人气的作品 (A&gt;C)，高人气一般意味着和其他作品有更多的共同语言 (x 更高)，尽管 y 也会更高，但是 x 的影响更大。 比例积分：A+0.8, B-0.8, C+0.8, D-0.8。比例积分更利好低争议度的作品。尽管在这个例子里，A 和 C 获得的比例积分相同，但是假定有一个用户，他对 B 的评价高于 A，对 D 的评价高于 C，那么更新后的积分变化为：A+0.88, B-0.88, C+0.63, D-0.63。这个用户的评价对 C 和 D 的影响更大，因为其基数小，一个反向评价就能显著地提高争议度。在实际数据中，「对 B 的评价高于 A」的这种用户往往是大量出现的，其特征是，有一个较短的典型差评列表 A_1, A_2, …, A_n，和一个较长的典型好评列表 B_1, B_2, …, B_m，并且 A_i 的整体评价要高于 B_j 的整体评价。这种用户的存在，使得争议度非常显著地提高，进而使得比例积分成为与其他积分差距最显著的一种。上文规定 n&gt;&#x3D;10 对于比例积分是非常重要的。因为任何两部作品形成的偏序关系，其价值都是统一的（都是1倍权重，而与具体的人数无关），因此，如果 n 很小，就会出现大量「一锤定音」的情况，只要有一个用户认为 B_1, B_2, …, B_m 比 A_1 好，那么 A_1 的争议度就会显著提高而评分下降，这是不合理的。与此同时，如果 n 很大，会导致大量的偏序关系被忽略，这也是不合理的。原算法就使用了 n&#x3D;10，这是一个比较合理的取值。在适用于其他分区（比如说游戏区）的算法中，由于整体评分人数的不足，n 应当相应地调低。 简易积分：A+1, B-1, C+1, D-1。简易积分对人气 (n) 和争议度都不怎么敏感。现在新来了一个用户，无论怎么投票都不会改变 A, B, C, D 获得的分数。但是与此同时，相对票数从+1票变到0票再到-1票对简易积分的影响很大（值直接变化 1。合计积分如此操作，值也会变化 1，但是合计积分的绝对值是很大的，可达七位数；比例积分的值变化则远小于 1）。因此可以考虑用一个更加缓和的函数替代这个 sgn 函数，比如说 tanh 或 sigmoid。 折衷积分：A+8.9, B-8.9, C+2.8, D-2.8。折衷积分是合计积分与比例积分的折衷，对人气和争议度都敏感。在这个例子里，A 和 C 获得的折衷积分相同，但是假定有一个用户，他对 B 的评价高于 A，对 D 的评价高于 C，那么更新后的积分变化为：A+8.85, B-8.85, C+2.11, D-2.11。同样的，这个用户的评价对 C 和 D 的影响更大，因为其基数小，但是比起比例积分，影响的比例显著减小。折衷积分的结果接近于合计积分，但显然也可以通过调参数（分母的 ^0.5）来实现「恰恰好在合计积分和比例积分之间折衷」的效果。（合计积分是唯一一个量纲无意义的积分） 06-02 (Fri)香草主义者照例发点有的没的感想，人称“发癫”。发癫这事儿，我个人认为，是有一定的合理性的，因为我确实有比较轻微的心理障害——毫无疑问，不管填自查问卷的时候怎么掩饰，这个问题都存在，与此同时不管怎么夸张，都称不上到了影响生活的程度。因此，我对于我在个人博客这半公开半私密的地方发表一些不太寻常的言论，有着一定的充分性。 直入正题。「情感」是不是「情绪」加「感受」？ 我之前在玩はみだし的时候，提到过笑声大得扰民，现在看来，我的身体感受确实受到了异常的放大。而在我自己都感到「感受」过激的同时，「情绪」很容易被掩盖，让人难以察觉。这种情况下，很容易被「感受」所左右，而忽略了「情绪」的存在。 是不是因为我丢失了一部分获取「情绪」的能力，转移到了「感受」上？我的「情绪」能力确实比以前更加微弱了。我可以证明，我很容易在生理感受上领会欣愉和痛苦——我对「痛苦」的理解，就直接体现在下意识地拉紧领口、蜷缩到角落这种动作上；而对「欣愉」更加多样化了，包括但不限于走来走去、双手举过头顶。但是，我对「情绪」的理解，却是完全依赖于「感受」的。我对「情绪」的理解，是「感受」的一种延伸，而不是「情绪」本身。我无法明晰感受到，类同于大众的「喜悦」和「悲伤」——应当注意，情绪和感受并非是直接对应的关系，换句话说，尽管我产生的感受，实际上并不是直接通过获取的信息中人物的感受激发的，而是先激发我的情绪，再转化成强烈的感受的，是一种二阶的感受，但是我却无法直接理解情绪，而是要通过反向转化，看看自己如此出格的感受，才能明白自己的情绪。 感情在一定意义上是缺位的。我如果反思自己的生活，还不至于发现什么问题；但是倘若揣度抽象的名词，遗失的概念就开始刺痛我的神经了。一些简单的例子： （Copilot 不知道发什么癫。我希望不是因为我升级到 Copilot Chat 之后变成 GPT-4 了。下文不再特别标注 Copilot 生成的内容） 纪念日打开必应搜一下「人为什么要纪念」，结果没几条在讨论「纪念」本身的，全都是「纪念日」。那也行。 我可不准备开「你们人类真是无聊啊」这种玩笑。我当然是个人，我有社会生活，但是我对于纪念的理解已经完全遗失了。 纪念对我来说没有吸引力，就算哪怕对纪念的内容和目的了然于心，也实在是被「纪念」这个空壳般的形式给拖累了，一种没有说服力的、不自然的、不真实的、不可信的、不可靠的、不可理解的、不可接近的 —— 不是肯定过去，而是否定现在。 那么我为何能断言，纪念本身并没有错，错在其形式呢？能够服人的说理也需要一种强烈的暗示，而这种暗示，就是「情感」。那就非常不幸，我无法如同大众一般控制自己的笑声和眼泪，我无法正常地感受到喜悦和悲伤——正确的、传统的、正常的、合宜的、自然的、真实的、可信的、可理解的「情感」。我曾经在高中时写作文这么诅咒过自己，却没想到这样幼稚且无力的话语竟然成了现实。 我没法感受……吗？我得问问自己是不是嘴硬羞于承认，比如说靠下面这个例子： 无糖可乐是时候说的明白一点了。我已经不止一次在博客中表现过自己的性焦虑了。 这个词是哪儿来的呢？性焦虑：二次元文化的末日钟，先不说这文章是不是在贩卖焦虑——那还用说？——写的好不好，这文章的传播已经远超过了作者的本意，成为值得在四年后再拿出来烂炒一番的社会景观一隅了。 问题在于，我对自己的性焦虑，是从这篇文章中得到的启发，而不是自己的思考。 「肯定」包含着不同程度的「认同」，包括但不限于：知行合一、接受、理解、认可、默许、不反对。不反对到底算不算认同还不知，总之至少是维护了说话的权利。 但是容易产生问题的就是高一级的「默许」，默许是一种暗示的认同，约等于别人不管你说啥都回わかるわかる，接受他人的相关言行，但无进一步表态——不反对是有表态的，比如说靠沉默——默许很容易被误解为「理解」，因为你不是都说了わかる了么？但是默许并不是理解，别人默许你，是因为你观点中的情感不够充分，暗示不够强烈，如果暗示够强，那就能激发二阶的情感，而不是停留在纸面上的叙述。而这种暗示的失败恰巧导致它落入这么尴尬的一个位置：既不是「理解」，也不是「不理解」，而是「懒得理解，又懒得反对」。 别人说什么你当然不能照单全收——但是许多人和我一样都容易落入这个默许的陷阱，因为这个陷阱的存在，让人们不得不去思考「默许」的意义，而不是直接去思考「理解」的意义。这种情况下，默许就成了一种「不得不」，而不是「自然而然」，反而成了和解路上的障碍。 以本节小标题讲一个隐喻，为什么在食堂里的套餐选「无糖可乐」？我默许了可乐的存在，结果而言我就「不得不」喝可乐。可乐并不是别人赠予我的，是我自己买的，但其实我没有选择，因为可乐名义上是赠品，实际上花的还是我自己的钱。哪怕我拒绝这个赠品，我也不会得到任何实质上的好处，因为我已经花了钱，而且我也不会因为拒绝这个赠品而得到退款。 而无糖可乐就是陷阱的进一步应用。觉得可乐不健康？没事，我们有热汤热茶热奶，加钱吧。——你竟然要对这个赠品加钱，虽然是一块钱看似不多，一块钱按照天累积起来也不是一笔小数目。然后目的就达到了，无糖可乐、没人要的垃圾就这样成了热销品。 收废品小时候我就热衷收集废品，并不是垃圾，而是缺乏使用价值的物品或其存在证明（比如说旅游时领的小册子、麦当劳送的餐巾纸）。而时至今日也是一样，除了麦当劳餐巾纸我照样收集但是有用武之地了，其他很多废品都存在于服务器与硬盘中，成为电子垃圾。 否定这些玩意只需要一句话：用不上。肯定之也只需要一句话：说不定哪天就用上了。 收集到底是个图个啥？肯定并不是物品本身，那就只能是物品承载的记忆，以及更加抽象的，这些记忆引发的感情。问题在于，我收集电子垃圾之后发现，我没法复刻这种感情，看着这张图我也没法具体地想象出当时的情景，只能是一种抽象的、模糊的、不真实的、不可信的、不可靠的、不可理解的对现实的再次虚构。 拍照或者截屏，绝大多数照片也并不存在保留的意义，它们也算是电子垃圾。它们不占什么空间，这很好，这也是或许我懒得删掉它们的直接原因；但是与此同时，我的肌肉记忆让我天天点开相册，清理回收站，然后看着这些电子垃圾想着什么时候删掉它们。它们占据了我的心智，却没有任何意义。 但是，与此同时，删掉它们，又能让我的心里多出些什么有价值的感情来么？感情的无价值即证明记忆的无价值，我一路走一路丢，也丢不掉什么东西。我这个人的价值，已经被外部定义了，丢掉的和没丢掉的内部记忆全都是无价值的，我只能在外部的价值中寻找自己的价值——其实并不是，有外部力量给了我价值。但是这还不够。我不满于「接受」的价值，我想要另外「追求」价值，但实际上我自己能追求道德价值甚至比不上被动接受的那一份；我想望得更高更远，却发现我自己的能力不足以达到那个高度；我只能在地上走，我的道路越来越高，但是仍然在地上，与此同时，我既不满足与地上为伙，又羡慕着、渴求着、抱怨着飞上天的鸟儿。 那么，聪明的，你告诉我，这些废品真的构成问题吗？究竟是它们把我束缚在地上，还是我自己的能力不足以飞上天？我自己的能力不足以飞上天，那么我为什么不去提升自己的能力？我倘若删除它们，脑海中这些记忆就会逐渐褪色成「这些记忆存在过的记忆」，成为不可回收垃圾，那到时候就只能继续怨天由人地说，是它长脑子导致这样的，人类天生的劣根性，让他能够将此作为辩护的借口，却殊不知，就算是他这个本体的、无关环境的、无关目的的、无关方法的原生问题，那也是他被定义而成就的，他的价值、能力、思维、情感、记忆、行为都是这样的，原罪的、不可改变的、不可逃避的、不可否认的、不可忽视的问题。 那确乎是完美的、持续的、始终的、永恒的、无法否定的否定。 符号容器容器，我们早在永恒的终结前夜就简单谈过。 门不是一个容器——真正装东西的房间才是，门是容器口，但是承认这种事实并不会妨碍对门的浪漫化。 而显然前面的逻辑并没有后面的转折重要。 对于容器来说也是一样的。容器从物质层面来说有三个关键要素：容器本身、容器口或者容器与外界的交换、内容物。而映射到符号层面，容器本身就是符号(本体)，容器口就是符号的使用方式(方法)，内容物就是符号的意义(目的)。 容器口是具有吸引力的，因为它承载了这么一个事实：它里面有内容物。可以通过容器口打开，打开就能接触到内容物！什么，这还不够吸睛？容器承载着内容物，意味着内容物既可以被包裹，也可以被取出——一般意义上如此，我们既然收到这个容器，一般意义上也是要打开之，取出内容物。容器本身可以有附加意义也可以没有，但是如果我断言，哪怕容器和内容物都没有附加意义，容器的全部意义都在于「打开容器」这个过程或者「容器口」这个符号，打开之后内容物也可以一起扔了，那也是能够解释的——有的人就是要的这个方法&#x2F;过程，而不是符号从哪里来或者到哪里去。 有一些种特殊的容器，容器本身不是完整的包裹者，内容物也不是完整独立的实体。因此，容器的意义从包裹物体变成了「形成一个包裹物体的符号」，就是让你知道这物体包起来了，但是并没有事实意义上地成立。容器，在这种情况下往往对于不独立的存在有着附加的意义，但是受制于容器本身是半开的，意义总是很容易地被破坏。容器口——已经没有独立讨论的意义，在此其价值被「容器潜藏着内容物」这一亦真亦假的事实所取代。——而这一点即使在两侧实体都被高度抽象的情况下仍然成立且效力非常强大，为人为破坏容器——实际上只是破坏了潜藏的假象，和容器的意义也无关了——这个行为提供了合理性。 这也就是为什么我们从实用主义的角度出发，即使价值完全在内容物上，也要把容器口的价值放在第一位的原因。容器口几乎是容器本身的全部意义，而有了容器才存在容器口，哪怕是第二类容器，容器的价值仍然要通过这一符号来维系。 柠檬醋可乐 当你接触社会现实的时候，反而会因为知行不一陷入更大的痛苦，所以你要说不支持，可能不会有什么用，只有行动和实践去改变这种无意识的认同，……，会好受一点。 醋是酸的没错，当然也是甜的。酸甜这两个字应该是绑定的，尽管它们并不是靠同一种路径刺激神经，但是它们的关系是不可分割的。它们并不互斥，也不互补，在很多意义上统一而不同一，毕竟说到底了，操纵有机酸和糖的比例就能够调整酸甜的程度，但是酸甜还是那个酸甜，不会变成苦辣。 除了醋，还有很多东西，被习惯性地打上酸的标签，比如说柠檬、酸奶、酸菜、酸黄瓜、酸辣土豆丝。（辣味是什么暂且不提，酸奶要是酸的离谱那就是坏了，哪里轮得到甜啊。）当然，这些东西毫无疑问同时也是甜的；柠檬作为酸甜的典型之一，往往只作为酸的意象呈现，大家好像都忘了柠檬真的是甜的（虽然比起甜的水果不够甜，但是碳水化合物总归不是盖的），就没人尝试过把柠檬的酸甜双相融入到同一个比喻中去。 那么这节标题为什么不是柠檬味可乐呢？当然是为了这点醋包的饺子啊。 在永恒的终结后日谈我们也讨论过创作者携带意图，与读者感受到的创作意图的区别。 创作者的意图体现在创作的方法上，而读者从创作结果感受意图；如果读者遇到了好的作品，就会期待更好的作品；但是如果创作的结果超过创作者个人能力，反而会引发恶性循环。 不管创作者的意图为何，他如此创作，他（或名字背后的集体）想着「要如此创作」那一定是既定事实。如此创作了，一定是因为呈现于过去的思维中了。创作者可以创作自己不喜欢的作品、可以创作不喜欢自己的作品，但是唯独不能创作自己不知道的作品。 创作带有定势。无定势的创作，一定是麻木的、潦草的、破败的、无目的的、不予公开的、先道崩殂的、心存幻想的失败。定势带来的是「应用行为分析」(Applied Behaviour Analysis)，对戏里戏外都是一致的，对创作者和读者都是一致的，对创作者和读者的关系也是一致的，一致地带有实用主义色彩，一致地可以被解构为「方法」、「目的」、「结果」。 在这一语境下，创作者必须且必然对自己的作品负责，如果恶心到读者，那就是因为先能成功地恶心到自己。不过，读者并不是一个一致的群体，所以尚且还存在这种不一致性： 原教旨之死读者因为想要满足某种需求来找寻作品，无论是「享受生活」「接受教育」还是「被恶心」，都是一种需求，通过创作者的描绘，先是映射成情感，再衍生出二阶的快感——无论何者，都是统一的快感与满足感，而一阶的情感本身就被标签化地丢进垃圾桶，与他者存在的相似性就此被掩盖，只剩下了自己的快感与满足感。这种情况下，读者的需求是读者自行选择、自行实现的，确实存在与创作者的意图不一致的可能性，尽管在市场划分正常的领域不会出现此等异端，但是边缘世界里确实有——至少没做过调查不能说没有——读者选择「替代」而不是「补充」，这种情况下，创作者的意图与读者的感受就会出现不一致。 在正常的市场中，只要创作者明确自己的读者群体，读者也明确自己的意图，那就不可能出现异教徒。作者自然非常清楚实用主义，为了实用主义而全方位努力，而读者也承认这种实用主义能够有效地促发二级快感，并且能接受这种模式下的反复刺激（由于一致性，作者本人也能接受之），作者能力不足，刺激就不足，但是如果类似于异端的读者，也存在异端的作者，那么就会出现这种情况： 常说「风格」是作者自行决定的，是作者自己的作品体现的，但是实际上应该被称为「类型」，而真正的风格是无法用一小串简短且独立的词汇来界定的，只能用限制性的长句来概括。作者跳出舒适圈来创作别的作品，有两种可能；一是跳出类型，那就完全是开辟不同的市场了；二是跳出风格，那应该是作者生涯发展中非常正常的演化，作者的风格会随着时间的推移而变化，而读者需求的风格却不会变化。 读者嗜好的是风格没错——也正因此才会出现喜欢的作者这个概念，但与此同时也把自己界定在了类型之内——这种风格只在这个类型中存在，过了这个村就没这个店了。 如果作者跳出类型，那么读者就会感到不适，因为他们的需求没有得到满足，而作者也会感到不适，因为他们的风格没有得到满足这种情况下，作者和读者的关系就会出现不一致。最终演化的结果是，作者事实性地获得了一批全新的受众，原先的只有一小撮杂食主义者留了下来，而原先的读者群体也会因为作者的演化而分化，一部分人会跟着作者一起演化，一部分人会选择离开，一部分人会选择留下来，但是不会再有人选择跟着作者的旧作品走下去。 这种情况下，作者的意图与读者的感受就会出现不一致。但是创作方法实际上是保持一致的，只不过是因为类型完全变了，风格不得不跟着变，实际上用的是同一个「采样方法」，对作者来说意图的体现并不会变；读者感受到的创作结果却和之前是云泥之别，就会错误地总结，作者的意图发生了变化。 06-03 (Sat)合礼窥伺窥伺他人生活确乎是一件很有意思的事情。当然，这并不是说想要侵犯他人隐私，而是指欣赏他人在网络上公开了有一段时间的生活。这个限制条件，不只是时间上的久远，还是时间跨度上的。 比如说，之前在看《纸魔》译者内部交流用的邮件时，就深感趣味，因为发信者在写邮件的时候并没有想到邮件会被公开这一打算——以致后来编者整理这写邮件时，提到很多邮件发送时间点对应的工作进度和邮件中情绪对应的生活事件，都已经无法追溯了。 不过读者却看到了这些情绪，这些戏剧性的文字——字面意义上的戏剧性，因为只保留了工作生活的一部分，所以显得像戏剧一样精彩、高潮迭起，但与此同时又是过分真实、无法虚构的，你才知道你看的是私人邮件。同时感谢这朴素而未加工的文字让我们又看到了一群老猎批。 一人行者重逢故知，偶遇新知。 今天我翻到了一个作者，在知乎上的名字是「Bokuga」，在其他网站上的曾用名是「几欲夷」。用老一代文青的话来讲，这是个有趣的灵魂。 出于对这个灵魂的兴趣，我简单整理了一下信息： 中V、尤其是 ilem 的老粉丝，尤其喜欢「泥汤」「我没有歌能给你听」日语歌中非常喜欢 RADWIMPS「スパークル」、YOASOBI「幽霊東京」；喜欢K歌真名：尚戈京；生日：2001年1月18日（这两项没有刻意隐藏，但是对中学名字打码了）2019年6月参加高考（2023年6月本科毕业）、同年10月与女友分手，2021年7月考取驾照有一女性网友，网名「白」，真名「马欣然」，关系是最最好的朋友，早在2020年5月以前结识 当然这样一位幽默的天才，这样几行字是无法总结其丰富的人生经历的，全篇看下来，最让我触动的是下面这张照片： https://zhuanlan.zhihu.com/p/389444583 他是一个孤独的人，但是热爱生活、热爱记录生活（包括摄影）、热爱分享生活。虽然他说， 不知道你还看不看得到这个视频。 视频里算是讲了一些我心中的想法和感受，跟陌生人聊天好处就是，不用顾忌什么。 我跟你说过，知乎这里，是我自己最后的净土了，我在这上面发的东西，并不想让多少人看到，特别是认识的人。 所以请不要再偷窥我了，偷窥并不能拉进距离，也改变不了什么，只会让我难过。 世间并没有那么多美好的结局，ilem和张老师也是一样，他们最终回到了同学朋友的关系，我不知道我们。 我还是一人行者。 但是祝福你，我的朋友。 —— 夜短苦昼烧。 尽管结合这篇关于「梦良衣」的文章来看，他所指的「你」是显然的。 不过姑且是在一个百无聊赖的晚上慰藉了另一个不认识的「一人行者」。 不管你是不是真正和我走在一条漫漫人生路上， 我还是祝福你，你，以及你——我的朋友。 题外话：这可能是我博客里面少有的极端正能量了。 另外，我也想试着多拍点照，分享一下生活： 天空划出伤口挖掘机将农村的天空划出伤口 我不知道为啥前前后后拍了三张挖掘机的照片。总之，我觉得这和即弃的记忆还是有点不同，我并不觉得这景色美丽，也不显得有如怪物般丑恶。就单纯觉得，还是值得记录一下的。 涂白书信开头这封书信只剩开头被保留了下来，其中收信人的姓名被涂白了。开头是这样的： 近况可好？ 我最近找到了工作，内容实在是有些乏味，不过工资还算体面，也能学到一些东西。 今日在西湖边骑车闲逛，在杨公堤上走了龙井支路，因此没有完整绕糊一周。不过即使是骑车绕湖，也离湖很远，恐怕唯有从起伏不定的路与桥上飞驰而下的风才能感受到湖水的气息。 另外，关于「2038年1月19日」那个短篇的想法，我已经想好怎么用叙述性诡计了。 就这样：从2025年1月19日（星期日）开始写。但是章节名字不再保留年份，而是只在某些章节中强调年份。章节名字去掉年份后变成这样：1月19日（星期日）、（星期一）、……、（星期六）。把不同年份同一个星期的1月19日按照一定的逻辑顺序串连在同一章中，来让读者忽略年份，误以为这些事情是接连发生的。 当然，要等到2041年1月19日（星期六），初步的真相才会揭晓。这时候男主的微博名字已经变成了@老婆孩子在天堂（这个笑话我可能在25年前就听过了，实在是有点地狱！） 而哪怕对时间敏感的读者，也很容易忽视这一点：尽管对星期重新编排，相邻两年的1月19日，星期可能相差一，也可能相差二；但是实际上，故事中的年份从来都不是相邻的，而是至少间隔一年。所有年份都是奇数年，把世界观拓展到20和22世纪的时候也沿用这个规则。 这些只能等待他们在二周目的时候自行发掘了。 说来也奇怪，你我两个不擅长纪念的人，却非要把所有的故事都放在「一周年」这个节点上。所有重要事件都发生在偶数年，但是那一天他就像人间蒸发了一样连个「今日无事」都不写（也许是太忙了呢），整整一年之后再在取景框里装裱的半张纸上拼凑断章。这是否也算是一种纪念呢？ …… 后面的部分，已经模糊不可辨认了。我也不知道这封信是什么时候写的，也不知道收信人是谁，也不知道这封信是不是真的发出去了。但是我知道，这封信的作者，是我。","categories":["Journal"]},{"title":"技术：解决 Stable Diffusion WebUI 安装 xformers 出现 Torch 无法使用 GPU 的问题","path":"/2023/202305C/","content":"2023 年 5 月精选集5&#x2F;1 - 5&#x2F;6非常好废萌Bangumi 动画评分统计Bangumi 用户悬浮面板用户悬浮面板幕后5&#x2F;7 - 5&#x2F;8Kirikiri2 乱码问题还是送我得了5&#x2F;11 - 5&#x2F;22归异乡记Python 爬虫&#x2F;数据分析简易教程Windows 更新禁用导致 MS Store 无法安装5&#x2F;25 - 5&#x2F;30（本文）SD WebUI xformers 和 torch 依赖问题归新乡记 2023 年 5 月 25 日，星期四我不知道为啥这个月写了五篇技术博客，但是因为放假赋闲在家，每天都在捣鼓新玩意，能碰到这么多破事也不奇怪。好在，最后都是有惊无险地解决了。 但是这次是比较重量级的依赖地狱。 问题描述在 Stable Diffusion WebUI 中，欲安装 xformers，使用如下命令： 1python launch.py --medvram --opt-split-attention --xformers （或用 pip install -U xformers 单独安装） 出现如下信息和错误： 123456789101112Installing collected packages: mypy-extensions, typing-inspect, torch, pyre-extensions, xformers Attempting uninstall: torch Found existing installation: torch 1.12.1+cu113 Uninstalling torch-1.12.1+cu113: Successfully uninstalled torch-1.12.1+cu113 Attempting uninstall: xformers Found existing installation: xformers 0.0.17 Uninstalling xformers-0.0.17: Successfully uninstalled xformers-0.0.17ERROR: pip&#x27;s dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.torchvision 0.13.1+cu113 requires torch==1.12.1, but you have torch 2.0.1 which is incompatible.Successfully installed mypy-extensions-1.0.0 pyre-extensions-0.0.29 torch-2.0.1 typing-inspect-0.9.0 xformers-0.0.20 意为：torchvision 0.13.1+cu113 需要 torch==1.12.1，但是你安装的是 torch 2.0.1，这是不兼容的。 再次尝试启动 WebUI，出现如下错误： 12345Error code: 1stdout: &lt;empty&gt;stderr: Traceback (most recent call last): File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt;Torch is not able to use GPU; add --skip-torch-cuda-test to COMMANDLINE_ARGS variable to disable this check 意为：Torch 无法使用 GPU；命令行使用 --skip-torch-cuda-test 可以跳过这个检查。 无法使用 GPU，这可麻烦大了！ 但是在急着往 QQ 群里发截图求助之前，动动脑子，上网查查，还是能找到解决方案的。 初步探索此时，torchvision 和 torch 的版本不兼容，当然是跑不起来的。这和新来的 xformers 无关，也就是说，命令行去掉 --xformers 也无法启动。 由于 torchvision 依赖 torch，先考虑重装 torch。 1pip install torch==1.12.1 出现如下信息和错误： 12345678Installing collected packages: torch Attempting uninstall: torch Found existing installation: torch 2.0.1 Uninstalling torch-2.0.1: Successfully uninstalled torch-2.0.1ERROR: pip&#x27;s dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.xformers 0.0.20 requires torch==2.0.1, but you have torch 1.12.1 which is incompatible.Successfully installed torch-1.12.1 又遇到了版本不兼容问题，但这次是 xformers 和 torch。先考虑把 xformers 卸载： 1pip uninstall xformers 很不幸地，并没有解决问题，WebUI 依然无法启动。（注：此时如果不用命令行参数 --medvram 和 --opt-split-attention，WebUI 可以启动，但是仍然无法工作。） 解决方案参考文献：pytorch_gpu不可用_原因核查 第一步，检查 CUDA 版本： 1nvidia-smi 部分输出如下： 1NVIDIA-SMI 526.98 Driver Version: 526.98 CUDA Version: 12.0 此时可以把问题锁定到 Pytorch 和 CUDA 版本不兼容上。 第二步，用 torch 库检查 CUDA 版本： 1234import torchprint(torch.version.cuda) # CUDA 版本print(torch.__version__) # Pytorch 版本print(torch.cuda.is_available()) # GPU 是否可用 第一个输出为 None，表示 pytorch 对应版本的 CUDA 未安装。 第二个输出，很有意思，因为我确实没想到之前 pip install torch==1.12.1 的时候给我自己挖坑了： 输出是 1.12.1+cpu，是 1.12.1 没错，但是是 CPU 版本！ 那就好办了———安装正确的 Pytorch 版本： 去Pytorch 官网，找到需要的版本。 重新安装 1.12.1（不建议）找到对应 1.12.1 的命令行：12345678# CUDA 11.6pip install torch==1.12.1+cu116 torchvision==0.13.1+cu116 torchaudio==0.12.1 --extra-index-url https://download.pytorch.org/whl/cu116# CUDA 11.3pip install torch==1.12.1+cu113 torchvision==0.13.1+cu113 torchaudio==0.12.1 --extra-index-url https://download.pytorch.org/whl/cu113# CUDA 10.2pip install torch==1.12.1+cu102 torchvision==0.13.1+cu102 torchaudio==0.12.1 --extra-index-url https://download.pytorch.org/whl/cu102# CPU onlypip install torch==1.12.1+cpu torchvision==0.13.1+cpu torchaudio==0.12.1 --extra-index-url https://download.pytorch.org/whl/cpu由于我的 CUDA 版本是 12.0，而且高版本 CUDA 也是兼容低版本的，此处选择 11.6 或者 11.3 应该都可以。（之前装的是 1.12.1+cu113，现在重装了 11.6，总之是可以用了。）重装完毕，再次运行 WebUI，成功启动！版本不是越新越好，要看清楚自己的环境，选择合适的版本。 建议直接升级到 2.0.1 并安装 xformers。（这可能导致一些其他不支持 pytorch 2 的项目无法运行） 123webui-user.bat --reinstall-torchpip3 install torch==2.0.1+cu117 torchvision==0.15.2+cu117 torchaudio==2.0.2+cu117 --index-url https://download.pytorch.org/whl/cu117python launch.py --xformers # 这一步不能使用 webui-user.bat --xformers 第二步安装完成后，应该使用上面的 Python 代码检查 Pytorch 配置是否正确。以笔者的环境为例，输出如下： 12311.72.0.1+cu117True 应该注意：如果此处用 pip install -U xformers==0.0.20 手动安装 xformers，会自动安装 cpu 版本的 torch，这样就重蹈覆辙了。 这以后就可以使用以下参数启动 WebUI 了： 1python launch.py --medvram --opt-split-attention --xformers 速度从 2s&#x2F;it 提升到了 2it&#x2F;s，享受提升 300% 的速度吧！ 2023 年 5 月 30 日，星期二归新乡记前情提要：归异乡记 上次归异乡三天之后我便回了新乡，自此便是忙碌又清闲的日子。 这次是从故乡归新乡。 「故乡」指「老家」，因此可以将「家」诗意化为「新乡」。这两个「乡」恐怕并不是对等的——一个是地理概念，一个是心理概念。不过，家总归只有一个，回家总归是一件确定的事情。 顺便一提，我真当不是铁道迷巴士迷啥的。一般意义上的游记指的是游玩的经历，而我的游记真的只是一路上的经历，不去观察记录交通工具那就什么内容都没有了。 14:24，「故乡」长途汽车站此处略去了地名。坐上 8 元的长途汽车——实际上是市内——至少从行政区划上来说没有出市，只不过和市区十万八千里远。尽管根据搜索引擎，这班车有个三位数的编号，但是无论公交站台、公交车还是高德地图都似乎对此毫不知情。看着右上悬挂的经典红色 LED 显示屏，在隧道里观察着它在时间、车内温度与车外温度之间的切换，感觉坐上国内的公交车真是怀念啊。自打我高中以来，由于无论是学校还是培训机构都离家不远，一般都是步行或者汽车接送——这里的「家」其实不是今天的「新乡」，而是在学校附近租的房子——而原来离家很近的牙医却变成了坐地铁一小时的距离。不管怎么说，也轮不到公交车。回头看，我在初中也不怎么需要坐公交车，当时靠自行车与地铁就能解决一切问题。所以我对公交车的记忆其实停留在了初中的春游和秋游——我不记得到活动地点逛了点啥买了点啥，也已经忘记车上谁唱的歌数量最多，但是可以确定的是，当时的公交车右上角也有同样的红色视线在闪烁。往前看，我在香港也不怎么坐巴士，主要靠步行和地铁——地铁太过便利，让人忘了香港其实还有别的公共交通工具。香港的双层巴士虽然看上去很酷，但是只仅如此远远不及我从机场坐 E22 路不小心坐成了 E22A，一路上在极为狭窄的面对面座位上让自己蜷缩到窗边举起手机遮住脸然后看本子、过早地准备下车导致行李摔了然后又没有及时按下车铃最后狼狈地滚下车这种种奇闻在一个半小时之内展开的经历来得酷。——顺便一提，我不是へんたい，我对公交车及其作为文化符号的各种想象一点兴趣都没有。在经历了半小时的昏睡——就像是我小学时某次春游不小心把头靠到别人肩上一样——之后，乘客们非常整齐地准备在下一站下车，不太整齐地解开安全带，警报也杂乱无章地响了起来。临安公交西站，到了——脑海中回荡着虚构的声音。15:14，九州街站杭州地铁 16 号线，或称杭临城际铁路。一进站我就看到了非常新鲜的景象——16 号线是四车厢，站台短到从一端可以轻松看清另一端。望向墙上的线路图，我要从起点站九州街站坐到终点站绿汀路站，绿汀路是唯一的换乘站，可换乘 3、5 号线。比起深圳的双拥街站还是荒凉太多了。双拥街虽然也称得上是市郊，但 10 号线至少中间段就有换乘站了，而且客流量总归有接近满座的时候。这儿呢——那就只能用农村概括了。发车间隔 9 分钟，其中停车等候 5 分钟，这个频次倒是算不上很低。15:26，在青山湖到八百里站路段进入地上段。15:40，在南湖到中泰站路段进入地下段。16 号线唯一一个右侧开门的站是绿汀路站，而我一直坐在噪音更高的左侧，好处是能更好地观察到站台上的人流。而到绿汀路站，我总算是看到了报站屏幕上的车厢、扶梯和出入口信息。这时我才意识到，这和深圳地铁的报站何其相似（尽管 16 号线对侧开门的时候不显示），恐怕和港铁（杭港地铁）脱不开关系。——顺便，在绿汀路站，右侧车门姑且算是有存在的意义了。15:54，绿汀路站上文提到，绿汀路站是三线换乘站，B3 层是 3 号线（往吴山前村）- 16 号线（往九州街）与 16 号线（下客站台）- 3 号线（往星桥）两队岛式站台同台换乘，B2 层是 5 号线（往金星）- 5 号线（往姑娘桥）的岛式站台。由于 B3 层的站台从左往右分别是 3-16-16-3，B2 层 5 号线的两个站台分别在 3 号站台的上方，因此来到 B2 层会感觉特别空旷——中间还多了一对站台的空间。虽说如此，不太有扩展的可能性了。由于 3 号线是常规的八车厢，站台长度也比起 16 号线的列车长了一倍。16 号线列车停在正中间（3-6 车厢），左右闲置的空间，咋看又是什么战未来的设计，实际上 16 号线其他车站都是四车厢，想延长也难。另外，看这个客流量，应该不太有必要。再仔细看 1、2、7、8 车厢的门，发现根本没有屏蔽门，仅只是用玻璃隔开了。杭州地铁 5 号线，姑娘桥方向。虽说不是始发站，停车等候的时间却相当长。发车间隔约 4 至 5 分钟。5 号线是相当朴实无华且枯燥的，最大的特色是长，很长，非常长，从城市西北角蜿蜒到东南角。仔细品鉴车上的线路图，未曾料想杭州地铁的密度也如此高了，市中心是五颜六色——恐怕有七八种颜色——织成的蜘蛛网。既然都成网了，自然没必要再去研究环线的必要了。青蓝色的 5 号线和海浪青的 19 号线交织在一起，虽然符合杭州地铁早期设计的配色方案，但是难免让人傻傻分不清楚。报站屏以硕大无朋的黑体陈列 39 个站名，外加同样硕大的「X号线」换乘标志，这狭小的一方空间实在是让人眼花缭乱。我觉得可以充分利用色彩，让换乘站的站名染上对应的颜色，然后下放悬挂一个数字表示换乘线号，多线换乘也可以用渐变色来表示。当然只是我觉得而已。16:17，「新乡」站回到家等于回到电脑等于在互联网上复活。——对我来说手机并不算互联网，我虽然安装了 QQ，却只用来电脑登录验证；安装了微信，却没什么理由称为通讯工具；安装了微博，却只在需要绕过网页版限制的时候播放摇一摇开屏广告。项目、笔记、写作，全都要倚仗电脑。手机，没有社交用途，没有生产力，只是消费工具。 河北南京汉化嵌字看了都得沉默 实际上并不是 Stellar 的 bug，是我自己傻了。 时间线中的结点标题格式为 &lt;!-- node xxx --&gt;，而我不小心漏了 node，导致结点标题被解释成 HTML 注释，而正文被解释成标题，由于标题挤不下，又必须显示在同一行内，因此就会出现段落与段落看似竖向排列（把它们都假设成单个字那就是正常的标题排版），而段落内文字横向排列的奇异现象。 QQ 群各路专家立即开展了教育意义丰厚的学术讨论，最终达成以下共识： 河 北南 京 顺便一提，今天给每篇日志的开头加上了「当月精选集」，这样方便跳转到其他日志，也可以让读者少看点废话和低质量内容——如果有人真的会看的话。","categories":["Tech"]},{"title":"笔记：Python 爬虫/数据分析简易教程","path":"/2023/Python/","content":"2023 年 5 月精选集5&#x2F;1 - 5&#x2F;6非常好废萌Bangumi 动画评分统计Bangumi 用户悬浮面板用户悬浮面板幕后5&#x2F;7 - 5&#x2F;8Kirikiri2 乱码问题还是送我得了5&#x2F;11 - 5&#x2F;22归异乡记Python 爬虫&#x2F;数据分析简易教程（本文）Windows 更新禁用导致 MS Store 无法安装5&#x2F;25 - 5&#x2F;30SD WebUI xformers 和 torch 依赖问题归新乡记 楔子我相信点进这篇文章的你肯定听说过爬虫及其原理，简单来说，就是模拟浏览器，向网站发送请求，然后，解析网站返回的数据，从中提取需要的信息。 爬虫还有更加丰富的功能与技巧，我们今天不讲。就讲最基础的：读取 HTML 和 JSON，然后，提取信息。这个功能，足以应付大部分的爬虫需求。 既然选择 Python，那么我们也可以非常轻松地把爬虫和数据分析结合起来。例如，爬取某个网站的排行榜，把统计数据输出到 CSV 文件，同时用 matplotlib 绘制图表。 本文中的代码全部来自我的项目 mojimoon&#x2F;bangumi-anime-ranking，顺便给我点个 star 吧。 希望对你有所帮助。 工具包括后续分析数据的步骤在内，你很有可能需要用到下表中的第三方库： 库名 用途 requests 发送 HTTP 请求 beautifulsoup4 解析 HTML regex 正则表达式 numpy 处理数值 pandas 处理表格 matplotlib 绘制图表 scipy 拟合曲线 fake-useragent 生成随机 UA 还有可能用到的内置库： json：解析 JSON csv：解析和生成 CSV time：计时或者等待 你不知道有没有安装这些库，也不成问题。我们可以一行命令安装所有需要的库： 1pip install requests beautifulsoup4 regex numpy pandas matplotlib scipy 分析网页有必要说明，解析 HTML 和解析 JSON 是两个完全不同的工作，但是，本质都是一样的：一般，先手动获取一个文件，分析文件结构，找到需要的信息在文件中的位置，然后，写代码，把这个位置的信息提取出来。 作为例子，我们今天的项目是爬取 Bangumi 的动画排行榜，然后获取每部动画的详细数据，后续进行分析。爬取排行榜需要解析 HTML，获取详细数据用的是官方 API，所以需要解析 JSON。 解析 HTML首先，我们手动获取排行榜第一页的 HTML： 1wget https://bgm.tv/anime/browser?sort=rank -O rank.html 我们想要知道如何获得排行榜上每个条目的 ID，可以考虑通过某些 id 或者 href 属性来定位这些条目。先把注意力集中在排行榜主体： 12345678910111213141516&lt;ul id=&quot;browserItemList&quot; class=&quot;browserFull&quot;&gt; &lt;li id=&quot;item_326&quot; class=&quot;item odd clearit&quot;&gt; &lt;a href=&quot;/subject/326&quot; class=&quot;subjectCover cover ll&quot;&gt; &lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;//lain.bgm.tv/pic/cover/c/a6/66/326_D8wjw.jpg&quot; class=&quot;cover&quot; /&gt;&lt;/span&gt; &lt;span class=&quot;overlay&quot;&gt;&lt;/span&gt; &lt;/a&gt; &lt;div class=&quot;inner&quot;&gt; &lt;h3&gt;&lt;a href=&quot;/subject/326&quot; class=&quot;l&quot;&gt;攻壳机动队 S.A.C. 2nd GIG&lt;/a&gt; &lt;small class=&quot;grey&quot;&gt;攻殻機動隊 S.A.C. 2nd GIG&lt;/small&gt;&lt;/h3&gt; &lt;span class=&quot;rank&quot;&gt;&lt;small&gt;Rank &lt;/small&gt;1&lt;/span&gt; &lt;p class=&quot;info tip&quot;&gt;26话 / 2004年1月1日 / 神山健治 / 士郎正宗 &lt;/p&gt;&lt;p class=&quot;rateInfo&quot;&gt; &lt;span class=&quot;starstop-s&quot;&gt;&lt;span class=&quot;starlight stars9&quot;&gt;&lt;/span&gt;&lt;/span&gt; &lt;small class=&quot;fade&quot;&gt;9.2&lt;/small&gt; &lt;span class=&quot;tip_j&quot;&gt;(6342人评分)&lt;/span&gt; &lt;/p&gt; &lt;/div&gt; &lt;/li&gt;&lt;!-- 首页有 24 个条目，篇幅所限只保留了 1 个 --&gt;&lt;/ul&gt; 因为网页源代码是动态生成的，格式上很混乱是正常现象。（此处的 HTML 代码是我整理过的，实际的源代码，每个标签都是一行，没有缩进。） 仍然不难发现，我们要找的信息在 #browserItemList 下的 li 中，li 的 id 属性是 item_ 加上条目的 ID。 尽量使用id来定位元素，因为id是唯一的。要检查你的选择器是否正确，请用浏览器的开发者工具。 我们使用 BeautifulSoup 来解析 HTML： 12for li in soup.select(&#x27;#browserItemList &gt; li&#x27;): sid = li[&#x27;id&#x27;][5:] ——不会用 BeautifulSoup？没关系，下文会介绍用法。这里只需要了解怎么解析 HTML。 解析 JSON查阅 Bangumi 官方 API 文档，得知 API 服务器的地址是 https://api.bgm.tv/ 获取条目信息的 API 是 v0/subjects/&#123;id&#125;，其中 &#123;id&#125; 是条目的 ID 因此，我们再次手动爬取第一个条目的数据： 1wget https://api.bgm.tv/v0/subjects/326 -O subject.json 结果是一个 JSON 文件，关键信息如下： 12345678910111213141516171819&#123; &quot;collection&quot;: &#123; &quot;collect&quot;: 8810, &quot;doing&quot;: 699, &quot;dropped&quot;: 95, &quot;on_hold&quot;: 378, &quot;wish&quot;: 4011 &#125;, &quot;date&quot;: &quot;2004-01-01&quot;, &quot;eps&quot;: 26, &quot;id&quot;: 326, &quot;name&quot;: &quot;攻殻機動隊 S.A.C. 2nd GIG&quot;, &quot;name_cn&quot;: &quot;攻壳机动队 S.A.C. 2nd GIG&quot;, &quot;rating&quot;: &#123; &quot;count&quot;: &#123; &quot;1&quot;: 31, &quot;10&quot;: 2949, &quot;2&quot;: 8, &quot;3&quot;: 8, &quot;4&quot;: 7, &quot;5&quot;: 16, &quot;6&quot;: 61, &quot;7&quot;: 200, &quot;8&quot;: 927, &quot;9&quot;: 2135 &#125;, &quot;rank&quot;: 1, &quot;score&quot;: 9.2, &quot;total&quot;: 6342 &#125;&#125; 此处的 JSON 代码也是我整理过的，实际的源代码只有一行。 因此，我们可以通过 json 库来解析 JSON： 12345678# 此处我预先下载了 JSON 在 data/sub/&#123;id&#125;.jsonjfile = open(&#x27;data\\\\sub\\\\%d.json&#x27; % sid, &#x27;r&#x27;, encoding=&#x27;utf-8&#x27;)j = json.load(jfile)jfile.close()title = j[&#x27;name_cn&#x27;] if j[&#x27;name_cn&#x27;] else j[&#x27;name&#x27;]s = [0] * 10for i in range(10): s[i] = j[&#x27;rating&#x27;][&#x27;count&#x27;][str(i + 1)] 获取这些信息后，我们可以用 pandas 进行整合，保存到 CSV 文件，再进行后续处理。 我们初步了解怎么爬取数据，那么接下来讲解具体的实现。 用法快速入门虽然文档非常全面详尽，但也不是每个人都有耐性看完的。我个人认为，入门级别的爬虫，只需要知道一些基本用法即可： import requests1234from fake_useragent import UserAgentr = requests.get(url, headers=&#123;&#x27;User-Agent&#x27;: UserAgent().chrome&#125;) # 随机UAr.raise_for_status()r.encoding = r.apparent_encoding 发送 HTTP 请求，url(str) 是请求的网址，headers(dict) 是请求头，User-Agent 是浏览器标识，有些网站会根据这个标识来判断你是不是爬虫，如果是爬虫，就不给你数据了。 from bs4 import BeautifulSoup1soup = BeautifulSoup(r.text, &#x27;html.parser&#x27;) 解析 HTML。r.text(str) 是 HTTP 响应的正文，html.parser 是解析器，这里使用的是 Python 内置的解析器。 1for li in soup.select(&#x27;#browserItemList &gt; li&#x27;): 使用 CSS 选择器，选中 HTML 中的元素。然后，可以把这个元素当作字典来使用，例如，li[&#39;id&#39;] 是这个元素的 id 属性，li.select(&#39;a&#39;)[0][&#39;href&#39;] 是这个元素的第一个 a 子元素的 href 属性。 import json12j = json.load(jfile)jfile.close() 解析 JSON，jfile(file) 是一个文件对象，这一步后就可以关闭文件了。然后，可以把这个 JSON 当作字典来使用，例如，j[&#39;data&#39;][&#39;list&#39;][0][&#39;name&#39;] 是这个 JSON 的 data 字段的 list 字段的第一个元素的 name 字段。 import csv123writer = csv.writer(ofile)writer.writerow([&#x27;sid&#x27;, &#x27;title&#x27;, &#x27;s1&#x27;, &#x27;s2&#x27;, &#x27;s3&#x27;, &#x27;s4&#x27;, &#x27;s5&#x27;, &#x27;s6&#x27;, &#x27;s7&#x27;, &#x27;s8&#x27;, &#x27;s9&#x27;, &#x27;s10&#x27;, &#x27;rank&#x27;, &#x27;vote&#x27;, &#x27;avg&#x27;, &#x27;std&#x27;, &#x27;user&#x27;]) 生成 CSV，ofile(file) 是一个文件对象；然后 writer.writerow() 写入一行数据，参数是一个列表。 csv 本身的功能完全可以用 pandas 来代替。 import re1id = re.search(r&#x27;item_(\\d+)&#x27;, li[&#x27;id&#x27;]).group(1) 这里给出一个很浅显的例子：在 li[&#39;id&#39;] 中匹配 item_ 后面的数字，然后，把这个数字提取出来。re.search() 返回一个 Match 对象，group(1) 是这个对象的第一个分组，也就是第一个括号（即 (\\d+)）匹配到的内容。 正则表达式太复杂了，而且很容易出错，我这儿推荐一个网站：regex101。这个网站可以帮助你调试正则表达式，外加很有用的『翻译成人话』功能。例如，&lt;a href=&quot;(.+?)&quot;&gt;(.+?)&lt;/a&gt; 这个正则表达式，可以翻译成人话：『匹配 &lt;a href=&quot;，然后，匹配任意字符，直到遇到第一个 &quot;，然后，匹配 &quot;&gt;，然后，匹配任意字符，直到遇到第一个 &lt;/a&gt;』。 regex101 的界面 import numpy as np123mean, std, hi, uq, med, lq, lo= \\ np.mean(s), np.std(s), np.max(s), np.percentile(s, 75), \\ np.median(s), np.percentile(s, 25), np.min(s) 应该是非常常用的一些统计量了，其中 s(list) 是一组数值。 numpy 非常神通广大，由于这几个库经常一起用，所以我不单独列出，下文会展示更多 numpy 的用法。 import matplotlib.pyplot as plt123456789101112131415plt.hist(s, bins=250, density=True, alpha=.75, color=&#x27;g&#x27;) # 绘制频率密度直方图，数据分为 250 组x = np.linspace(lo, hi, 1000)plt.plot(x, norm.pdf(x, mean, std), color=&#x27;r&#x27;, linewidth=.5) # 用 1000 个点绘制正态分布密度曲线plt.axvline(med, color=&#x27;r&#x27;, linestyle=&#x27;dashed&#x27;, linewidth=1) # 在中位数处画一条虚线x_diff = (hi - lo) / 500 # 用于调整中位数标签的位置，水平方向上向右平移全图宽度的 1/500mid_y = plt.ylim()[1] / 2 # 用于调整中位数标签的位置， 垂直方向上向上平移半个全图高度plt.text(med + x_diff, mid_y, f&quot;&#123;med:.3f&#125;&quot;, rotation=90, va=&#x27;center&#x27;, color=&#x27;r&#x27;) # 在中位数处添加标签，向右旋转 90 度（即竖着向上），垂直方向居中plt.legend([&#x27;Normal Dist&#x27;, &#x27;Median&#x27;], loc=&#x27;upper left&#x27;) # 图例plt.title(&quot;Distribution of %s&quot; % name) # 图题plt.xlabel(name) # 横坐标标签plt.ylabel(&quot;Density&quot;) # 纵坐标标签plt.xticks(range(1, 11)) # 横坐标刻度，显示为 1 到 10 的 10 个整数plt.yscale(&#x27;log&#x27;) # 纵坐标使用对数刻度plt.savefig(pre + fname) # 保存图片plt.clf() # 清空画布 这里给出一个绘制频率密度直方图的例子，s(list) 是一组数值，name(str) 是这组数值的名称，pre(str) 是图片的路径，fname(str) 是图片的文件名。为了绘制出更好看的图，plt 提供了非常多的参数，如有必要还是得查文档。标签的水平和垂直方向的位置调整，我觉得是比较不错的技巧。 1plt.bar(range(1, 11), s / n, width=.8, color=&#x27;g&#x27;, alpha=.75) 绘制条形图。和直方图不同，直方图给出的是不同的 x，而条形图给出的是不同的 y。因此我们将 range(1, 11) 作为 x，将 s / n 作为 y（其中，s 是一个 numpy 数组；这样写是因为条形图不支持自动转换为频率密度）。 from scipy.stats import norm, pearsonr1234567r, p = pearsonr(x, y)ofile.write(&quot;Correlation between %s and %s,%.6f, &quot; % (xname, yname, r))plt.scatter(x, y, s=1, alpha=.5, color=&#x27;g&#x27;) # 绘制散点图m, b = np.polyfit(x, y, 1) # 用一次多项式拟合，相当于线性回归ofile.write(&quot;%s = a * %s + b,%.6f,%.6f &quot; % (yname, xname, m, b))plt.plot(x, m*np.float64(x) + b, color=&#x27;b&#x27;, linewidth=.5) # 由于此处的 x 是 pandas 的 Series，需要转换为 numpy 数组plt.legend([&quot;Data&quot;, &quot;Linear Regression&quot;]) # 注意散点图需要手动添加图例，直方图/条形图不需要 scipy.stats 中有很多种分布和拟合工具。 正态分布，上文已提到用 plt.plot(x, norm.pdf(x, mean, std), color=&#39;r&#39;, linewidth=.5) 绘制正态分布密度曲线，这相当于是传入一个 numpy 数组 x，直接计算对应的正态分布密度。另外的例子：_P3S = norm.cdf(3) * 100，这相当于是计算正态分布的累积分布函数，即 P(X &lt;= 3) 的百分数。 pearsonr 是计算皮尔逊相关系数的方法。 import pandas as pd12345df.loc[:,&#x27;bayes&#x27;] = (VOT_MIN * AVG_AVG + df[&#x27;vote&#x27;] * df[&#x27;avg&#x27;]) / (VOT_MIN + df[&#x27;vote&#x27;]) # 计算贝叶斯平均df = df.sort_values(by=[&#x27;bayes&#x27;], ascending=False) # 按照贝叶斯平均降序排列df.loc[:,&#x27;b_rank&#x27;] = np.arange(1,ENT+1) # 添加贝叶斯排名_df = df.sort_values(by=[&#x27;rank&#x27;]).drop([&#x27;s1&#x27;,&#x27;s2&#x27;,&#x27;s3&#x27;,&#x27;s4&#x27;,&#x27;s5&#x27;,&#x27;s6&#x27;,&#x27;s7&#x27;,&#x27;s8&#x27;,&#x27;s9&#x27;,&#x27;s10&#x27;], axis=1) # 删除不需要的列_df.to_csv(&#x27;data/rank/rank.csv&#x27;, index=False, float_format=&#x27;%.4f&#x27;) # 保存为 csv 文件 pandas 的最强大之处就是可以把『数组当作数处理』，尽管 df 这个 Dataframe 有很多行，但是 df[&#39;vote&#39;] 之类的数组都可以像数字一样参与运算，会对每一行都进行相同的操作。 顺便一提，df.loc[:,&#39;bayes&#39;] 会返回一个 Series，而 df[&#39;bayes&#39;] 会返回一个 numpy 数组。这两者的区别在于，Series 会保留原来的索引，而 numpy 数组不会。这里我们需要保留原来的索引，因为我们要把贝叶斯平均和原来的数据一起保存到 csv 文件中。 实例为供读者参考，这里给出这个项目的实例。受篇幅所限，省略了部分功能的实现与文件操作，但是保留了核心代码。 爬取排行榜12345678910111213141516171819202122232425262728293031323334353637def get_html(page, ofile): url = pre + str(page) try: r = requests.get(url, headers=&#123;&#x27;User-Agent&#x27;: UserAgent().chrome&#125;) r.raise_for_status() r.encoding = r.apparent_encoding soup = BeautifulSoup(r.text, &#x27;html.parser&#x27;) entries = 0 for li in soup.select(&#x27;#browserItemList &gt; li&#x27;): id = re.search(r&#x27;item_(\\d+)&#x27;, li[&#x27;id&#x27;]).group(1) ofile.write(id + &#x27; &#x27;) entries += 1 return entries except: print(&#x27;error on page %d&#x27; % page) return -1pages_block = 10 # 每次爬取 10 页per_page = 24 # 每页 24 个条目for i in range(1, 10000, pages_block): ofile = open(&#x27;data\\\\id\\\\%d.txt&#x27; % i, &#x27;w&#x27;) entries = 0 flag = False for j in range(pages_block): res = get_html(i + j, ofile) if res == -1: res = 0 elif res == 0: flag = True break entries += res ofile.close() print(&#x27;block %d done, %d entries&#x27; % (i, entries)) # 检测到空白页，或者某页的条目数量没有达到上限（意味着没有下一页了），则停止爬取 if flag or ((pages_block - 1) * per_page &lt; entries &lt; pages_block * per_page): break 获取条目信息12345678910111213141516171819202122232425262728293031323334353637def get_json(sid): url = pre + str(sid) try: r = requests.get(url, headers=&#123;&#x27;User-Agent&#x27;: UserAgent().chrome&#125;) r.raise_for_status() r.encoding = r.apparent_encoding ofile = open(&#x27;data\\\\sub\\\\%d.json&#x27; % sid, &#x27;w&#x27;, encoding=&#x27;utf-8&#x27;) ofile.write(r.text) ofile.close() return True except: return Falsedef api_main(): # 通过读取 data/id/&#123;page&#125;.txt 文件，获取每个条目的 id。实现与上文类似，略def csv_main(): writer = csv.writer(ofile) writer.writerow([&#x27;sid&#x27;, &#x27;title&#x27;, &#x27;s1&#x27;, &#x27;s2&#x27;, &#x27;s3&#x27;, &#x27;s4&#x27;, &#x27;s5&#x27;, &#x27;s6&#x27;, &#x27;s7&#x27;, &#x27;s8&#x27;, &#x27;s9&#x27;, &#x27;s10&#x27;, &#x27;rank&#x27;, &#x27;vote&#x27;, &#x27;avg&#x27;, &#x27;std&#x27;, &#x27;user&#x27;]) for line in ifile: sid = int(line) jfile = open(&#x27;data\\\\sub\\\\%d.json&#x27; % sid, &#x27;r&#x27;, encoding=&#x27;utf-8&#x27;) j = json.load(jfile) jfile.close() title = j[&#x27;name_cn&#x27;] if j[&#x27;name_cn&#x27;] else j[&#x27;name&#x27;] s = [0] * 10 for i in range(10): s[i] = j[&#x27;rating&#x27;][&#x27;count&#x27;][str(i + 1)] rank = j[&#x27;rank&#x27;] vote = sum(s) avg = sum([(i + 1) * s[i] for i in range(10)]) / vote std = (sum([(i + 1 - avg) ** 2 * s[i] for i in range(10)]) / vote) ** 0.5 user = j[&#x27;collection&#x27;][&#x27;collect&#x27;] + j[&#x27;collection&#x27;][&#x27;doing&#x27;] + \\ j[&#x27;collection&#x27;][&#x27;on_hold&#x27;] + j[&#x27;collection&#x27;][&#x27;dropped&#x27;] writer.writerow([sid, title] + s + [rank, vote, avg, std, user]) 进行数据分析上文 matplotlib 部分已经相当详细地介绍了如何绘制图表。至于输出统计数据到 CSV，只需要会用 writer.writerow 方法就可以了。上文 pandas 部分也已经介绍了如何使用贝叶斯平均进行排序。此处不再赘述，若有需要可以参考仓库中的代码。 结语最后一提，不要硬编码。这是一个非常严肃的问题，硬编码让你这次写起来方便，以后要改就麻烦了。Python 提供了非常强大的 try...except... 语法，提高代码的鲁棒性。另外，在判断异常的时候，也不能只考虑数据在多少页结束这个问题，还要纳入网络不稳定等因素，例如，requests 库提供了 r.raise_for_status() 方法，可以在请求失败的时候抛出异常。 好吧，这期简易教程就写到这里。 mojimoon&#x2F;bangumi-anime-ranking 这个项目的统计结果可以在项目的 README.md 中找到，点进去看看吧。 都看到这里了就麻烦点个 Star 吧！","categories":["Tech"]},{"title":"技术：解决 Windows 更新禁用导致微软商店无法安装的问题 (0x80070422)","path":"/2023/202305B/","content":"2023 年 5 月精选集5&#x2F;1 - 5&#x2F;6非常好废萌Bangumi 动画评分统计Bangumi 用户悬浮面板用户悬浮面板幕后5&#x2F;7 - 5&#x2F;8Kirikiri2 乱码问题还是送我得了5&#x2F;11 - 5&#x2F;22（本文）归异乡记Python 爬虫&#x2F;数据分析简易教程Windows 更新禁用导致 MS Store 无法安装5&#x2F;25 - 5&#x2F;30SD WebUI xformers 和 torch 依赖问题归新乡记 面对重启解决不了的问题，有时候该反思一下是不是自己给自己挖坑了——比如说，WinaeroTweaker 禁用了 Windows 更新服务。 本文标题见这一节。 顺便推荐一个网页工具：中日汉字转换。 原文译文Life is PIANOJunk草の戸も 住み替はる代ぞ　雛の家荒海や 佐渡によこたふ　天の河野を横に 馬牽むけよ ほととぎす閑さや 岩にしみ入る 蝉の聲語られぬ 湯殿に濡らす 袂かな涼しさを 我宿にして ねまる也雲の峰 いくつ崩れて 月の山這出よ かひやが下の ひきの声今日よりや　書付消さん 笠の露行行て たふれ伏とも 萩の原卯の花に 兼房見ゆる 白毛かな終宵 秋風聞や うらの山蛤の ふたみにわかれ　行秋ぞ旅に病で 夢は枯野を かけ廻る松尾芭蕉Life is PIANOJunk草庐易新主　适值三月列人偶　荒凉变丽都瀚海涌怒涛　银河一道横空耀　直贯佐渡岛骑行旷野中　侧闻子规啼长空　快引转马颈寂静一何极　漫山蝉鸣急如雨　声沁岑岩里汤殿山规严　神秘不可对人传　感人泪沾衫阔室风清爽　如居自家情憩畅　任吾坐或躺云峰起高天　一座崩散一座现　夜来化月山蚕房悄无声　床下蟾蜍咕呱鸣　且请现尊容分道忽扬镳　笠上同行二人字　将为冷露消蹒跚复蹒跚　纵伴萩花葬荒原　男儿亦无憾水晶花开白　犹见兼房乱发摆　催人心生哀病身宿寺院　耳听秋风掠后山　终宵不能眠蛤壳与肉离　吾与诸友别情依　秋尽景更凄羁旅患病疾　徘徊枯野逐荒草　魂牵梦萦中松尾芭蕉 2023 年 5 月 11 日，星期四归异乡记今天要做的事只有一件。 整理好东西，回家。 嗯，回的不是家，是另一个异乡。 14:15，陈瑞球堂宿舍内的一切都已整理好，或者说，清理好。实在闲来无事，拿扫帚清理一下床底，迎接我的是两条像飞龙一样的灰尘。我的个人物品实在是有点太多了，但比起同学又实在不算是多。前一天晚上，我用衣柜里的一切铺满床单，于是它被称为天平，一边是不够紧实的压缩袋，一边是过多的衣物。我一直不敢想象，我有这么多衣物。但确实如此，有一些恐怕是一年到头都没有找到属于自己的季节，比如说放秋天和冬天都没人乐意的八分裤，比如说被正式场合定义的西服。15:03，陈瑞球堂完成退房手续。宿舍工作人员非常简单地检查了一下房间，然后就让我走了。这两分钟掐断了伴随着潮湿与肮脏的一年。至于卫生间，根本没看一眼。那些洗发水沐浴露也自然成为下一位住客的礼物了——虽然说，他们会比我们更惊讶，因为是全新的、未拆塑封的礼物。15:26，九龙塘站登上罗湖方向的东铁线。老实说，我都不知道罗湖口岸开放了。我上一次往返深圳还是在 1 月，那时候还要 48 小时核酸报告外加预约。2 月 6 日开始这些都成为了过去式，但说来也巧，正是这个花了我 120 港币的核酸让我有幸结识了荔枝角公园。这儿 Copilot 的建议是『让我有幸结识了「我的女朋友」』，看来是深谙喜剧的本质。东铁线各站的里程一长一短，开门方向一左一右。上车时把箱子甩上车厢的我自然是没有找到座位，于是我为了避免在启动时摔倒，绕着沁凉的铁柱不断自发地转圈。15:56，上水站为了省点儿小钱，在上水站下车出站，然后再进站登上落马洲方向的列车。这里提一嘴，我相信各位同学都知道，而不知道的估计也用不上。上水-罗湖段或者上水-落马洲段是不存在优惠票价的。并且，如果旅程中包含这一段，那么整段旅程都不享受优惠票价。而在上水站下车，就能在上水之前的部分享受优惠。——显然，对刷成人八达通或是二维码进站的游客来说，这麻烦且要等四五分钟的操作完全不起作用。这时候我才知道，罗湖口岸比落马洲规模更大，以罗湖和落马洲为终点站的列车比例大概是 2 比 1。尽管落马洲站有一对岛式站台，实际上只有 2 号站台在使用，列车停留约 8 分钟即往金钟方向返回，两辆列车的间隔约 12 分钟。至于 1 号站台？根据香港铁路大典的记载，繁忙时段会交替使用两个站台。而同样在非繁忙时段，金钟-上水段的发车间隔固定为 4 分钟。因此，在上水站，从一辆落马洲方向开出开始计时，4 分钟后一辆罗湖方向开出，8 分钟后第二辆罗湖方向开出，12 分钟后第二辆落马洲方向开出。结果而言，上水-罗湖段的列车间隔为 4 分钟和 8 分钟交替，而上水-落马洲段的列车间隔固定为 12 分钟。也不知道罗湖站的四站台要热闹上多少倍。16:19，落马洲口岸到达落马洲站，因为行李太胖卡在扶梯入口，找电梯花了四分钟；经过香港海关，隔壁太嘈杂导致我一开始连海关问名字也没听到；踱步入境长廊，墙上的标语要么只有简中，要么只有繁中，好像不太待见国际通用语言，不过由于不查核酸，曾经最漫长的一个步骤变成一路顺风；经过中国海关，来到边检。这儿随时有可能发生踩踏事故级别的人流催促着我再一次把行李扔上另一个高度——不过这次是X光机。好在，入境程序到此为止，楼下就是深圳地铁福田口岸站；坏在，只有 4 号线。要想坐 10 号线，还得冒着被电动车撞的风险穿过马路；但又好在，这地上的景观已经是大不同了，不再是香港的繁华，而是深圳的繁华。16:41，福田口岸站我的支付宝一时半会连不上数据流量，于是我就成了一个不折不扣的废人。我手上可没有人民币，想买一次性车票也不成。于是我只好在地铁站里转圈，直到那句老话又一次被验证：『重启解决 90% 的问题』。从起点站福田口岸坐上双拥街方向的 10 号线。目的地华南城在整整 20 站开外，而 10 号线这个反人体工程学的座椅，我是坐一次难受一次，那几个凹槽就像是专门为了让我腰疼而设计的。更不幸的是，为了方便地铁安检，我把水倒掉了。不久后我作为地铁迷从未有过的最大不幸降临：一位爷爷和他的孙女在我旁边坐下——虽如此说，那小女孩则是一点没有要坐的意思，在车厢里爬来爬去，在对面椅子上躺着占了三个位置，外加一点点哭闹。17:33，华南城站第二十一站，华南城。我倒是要数一数，从出校门来，我这肥大的行李让我坐了多少次电梯——九龙塘站三次，落马洲站一次，落马洲-福田口岸一次，福田口岸站一次，华南城站两次。在深圳的这房子再一次瞬移了，从 1 月的 16 楼变成了 20 楼。要说这个永远不会有人欢迎我回家的异乡有什么问题的话，每次出电梯的时候，我总是肌肉记忆般地走错方向，然后开始感叹，这个电梯的高低层（高层：-1,1,12-23，低层：-1,1-11）分配太不合理了。这样会导致高层电梯永远要花更多时间在 1 层和高层之间往返，而如果改成奇偶层，两套电梯按楼层计的负载就会平均很多。18:25，「异乡」吃完外卖披萨，我开始百无聊赖地刷着 B 站。在对着丰富的水果盘（西瓜、哈密瓜、芒果、菠萝、荔枝、火龙果）做出选择之后，我决定下楼看看明儿个哪里能吃到早点。20:29，华南城华南城虽名号贵为商业城，却实在是掩盖不了附近穷乡僻壤的气息。在本应是最热闹的晚间，一整层楼却难找几个顾客，只有不同店家不同色温的灯敷衍地相互照耀着，把孤独和哀怨投射进隐秘、黑暗的角落。东边有一处黑灯瞎火的平台，两场广场舞在相隔数十米的距离上同时开演，不知为何路过的我成为他们唯一的交集。没找到早餐店，但也是时候回去了。哦，从天桥上下来的时候要小心。地铁站前后，非机动车道被流动小吃摊完全占据，他们重峦叠嶂的烟熏会阻碍你的视线，阻碍你扫视标牌寻找不存在的标价。22:08，「异乡」群友讨论王国之泪还有一小时正式解禁的时候，我也只能笑笑。也巧，我的 NS 在前一天被 lock down 了，是物理意义上的。我也只能笑笑，这异彩纷呈的一天即将结束，我不想再拿东七区的生物钟天天熬夜了。可能是我人生中最漫长的一个暑假即将开始——是的，比高考后暑假还要长一个月，但是没有人能够预知我到底会做出什么事情来。我也只能笑笑，在此之前，有必要完成一个旧时代的插曲，打开 Steam，一行红字出现在账户余额旁边。目的已经达到了。 2023 年 5 月 12 日，星期五不存在的彼岸记录一些近期有关于游戏设计的想法。这几个想法虽是毫无关联的，但我并不否定把它们缝到一起的可能性。 男女主牵着手过马路，但是直到看到眩目的白光从右侧闪过，他们才发现自己被包夹在准备左转弯的卡车、卡车盲区的三轮车和靠左逆行的电动车包围了。这个时候，“我的身体下意识地”——屏幕上赫然出现十五个选择支，由男主的移动方向、男主推动女主的方向和力度构成。这玩意很有意思，一是女主也可以有所动作，能保证所有选择支的结果均不相同；二是不同情况下事故的责任认定可以很不相同，但为了保证可玩性，需要在选择支后立即展示警方通报。 玩家以为游戏中的主角只有男主和六个女主，但实际上，在设置里打开“叙述者称呼加粗”无障碍功能之后发现，六个女主分别对应六个不同的叙述者，即六个男主。至于玩家呢？你要不要数一数，自己是第几个主角？ 主角们是一种被称为 Metabit 的特殊信息，每个人只对应一个储存状态的二进制数中的一位 (bit)。整个游戏从加法器、ALU长度、超频等名词装点门面的套皮反物质维度开始，逐渐演化成一个写汇编的教学软件，外加，主线剧情可以概括为，三维生物发现右移 16 位对这些「一位生物」是一个地狱笑话。 这个游戏有十六个结局，代表着二元真值表中的十六种可能的运算结果。但是，实际上，可以把格局打开，因为这个二元运算符的左输入、右输入和输出都只知道是「T&#x2F;F」，不知道代表什么意思。因此，相同的选项可以触发四种不同的结局，每一种运算中的输入输出都有明确的定义，每一个结局对应真值表中的一个结果，而不是一种运算，因此，这个游戏有 64 个结局。但是，其实最终还是只有一个结局，因为这个游戏的最后一关是一个二元运算符，它的左输入是「T&#x2F;F」，右输入是「T&#x2F;F」，输出是「T&#x2F;F」，而这个运算符的运算结果就是这个游戏的最后一个结局。——这个运算符的名字，叫做「rand」。 游戏里有个虚拟主播每天念戒社小作文，在游戏刚上线的时候，每天只有三篇稿子，一篇是玩其他游戏的梗，一篇是根据现实中的小作文改编的，一篇是和主线剧情紧密关联的。玩梗有什么要注意的呢——不玩网络新词，因为很容易过气；只要第一人称，哪怕是亲属视角也可以，实际上是写其他游戏的同人。但是更精彩的还在后面——游戏上线一段时间，我们征集到了丰富的同人文，外加不限主题的发病文，因此可以把这些混进去，迷惑读者，到底哪篇才是主线。怎么感觉你这个性转的版本讲的是同一件事情，怎么感觉那个出生是真的在戒社直播里看到的也不对啊杀人放火这厮还没被抓？ 以上。我的恶趣味实在是有些密集了，因为我根本没准备把这些做出来。不过，觉得有意思的几个点，以后准备稍微多写一点。 21 天爬虫从零到 100 ZB已转移至技术：Python爬虫&#x2F;数据分析简易教程 内容更丰富（源代码行数都翻三倍了）！ 2023 年 5 月 20 日，星期六0x80070422问题描述本教程应当适用于所有版本的 Windows 10 和 Windows 11。 在 Windows 11 (版本 21H2) 上，尝试在 Microsoft Store 中安装应用时，出现错误代码 0x80070422，文本如下图： 转到 Windows 设置的「Windows 更新」页面，只显示一行字： 出现错误。请尝试稍后重新打开设置。 解决方案问题确实是出在「Windows 更新被禁用」上。 首先根据网上的教程，Win + R 运行 services.msc，找到「Windows Update」服务，发现其启动类型为「禁用」。右键 -&gt; 属性，修改「启动类型」。 如果改成「自动」，保存成功，那么重启应该就能解决问题了。 但是，如果改成任意选项（包括「禁用」）都显示「拒绝访问」，那说明有第三方软件修改了注册表，导致「Windows 更新」服务无法启动。 首先，检查是否有 WinaeroTweaker、O&amp;O ShutUp10、Windows 10 Update Switch、Windows Update Blocker 等第三方软件，如果有，停用「禁用更新」的选项。 重启，然后再次尝试修改「Windows 更新」服务的启动类型。如果成功，再次重启，然后尝试在 Microsoft Store 中安装应用。（一开始可能仍然出现错误，尝试关闭再打开 Microsoft Store。） 这之后，如果想再次禁用更新，也需要重启（即，软件和手动修改 Windows Update 服务的启动类型都需要重启）。 如果没有解决问题，Win + R 运行 msconfig，在「常规」选项卡取消选中「加载启动项」，如下图： 然后，在「服务」选项卡选中「隐藏所有 Microsoft 服务」，然后「全部禁用」服务，如下图： 保存后重启，再次尝试修改「Windows 更新」服务的启动类型。如果成功，再次重启，然后尝试在 Microsoft Store 中安装应用。 此时一些第三方服务可能无法正常启动。如有必要，可以再次打开 msconfig，在「服务」选项卡选中「隐藏所有 Microsoft 服务」，然后逐个启用服务，重启，直到找到问题所在。（重启后「加载启动项」会自动选中，无需再设置。） 2023 年 5 月 22 日，星期一断网惊魂先简单介绍一下我们家里的网络布局：一个 ASUS RT-AC86U 路由器，2.4G 频段（Wi-Fi 4, 802.11n）和 5G 频段 (Wi-Fi 5, 802.11ac) 各有自己的 SSID，然后用的是中国电信的 200M 光纤。 昨天晚上，5G 频段突然连接不上，虽说我的房间离路由器有两墙外加一面柜子之隔，信号不好时有发生，但是正常情况下也是能跑满 200Mbps 的。但是，昨天晚上就没能重新连上 5G 频段，只能连上 2.4G 频段。 当时在想，如果网卡坏了，家里还好说，外面连不上 5G 频段的 Wi-Fi，那就惨了。2.4G 频段在房间下载速度约 30Mbps，在路由器旁约 110Mbps，这个速度倒是还能看，但是笔记本电脑、散热架和充电器这么大阵仗可不便搬到餐桌上去。 我的笔记本网卡是 Intel AX201 160MHz，理论速度可达 300Mbps。在检查网卡的时候，发现任务管理器中不显示 WLAN，而是只有以太网（名称：VirtualBox Host-Only Network）。（任务管理器不显示，那就只能用设备管理器等工具查看型号了。） 打开控制面板 -&gt; 网络和 Internet -&gt; 网络和共享中心，仅当连接上 2.4G 时，同时显示 WLAN 和以太网；未连接时，只显示以太网。 秉持控制变量的原则，我 重启了笔记本 重装了网卡驱动 卸载了 VirtualBox 重启了路由器 重启了光猫 但是，这些都没有解决问题。根据网上的教程，我还试着更改网卡设置（网络和共享中心 -&gt; 更改适配器设置 -&gt; 右键 WLAN -&gt; 属性 -&gt; 配置 -&gt; 高级），多次重启，也无济于事。 时间已过午夜，我焦急到打开手机热点求助。这时有两个关键发现： 手机连接的也是 2.4G，多次尝试连接 5G 均失败 手机热点可以设置 2.4G 或 5G ——于是我的笔记本成功连接上了手机的 5G 热点，这足以证明问题出在网络上，而不是笔记本上。 至于后来是怎么解决的，就不得而知了。睡前我把路由器关掉了，今天早上起来，5G 又能用了。 恐怕给全年无休的路由器放个假，也是有必要的。","categories":["Tech"]},{"title":"技术：解决 Kirkiri2 引擎的乱码问题","path":"/2023/202305A/","content":"2023 年 5 月精选集5&#x2F;1 - 5&#x2F;6非常好废萌Bangumi 动画评分统计Bangumi 用户悬浮面板用户悬浮面板幕后5&#x2F;7 - 5&#x2F;8（本文）Kirikiri2 乱码问题还是送我得了5&#x2F;11 - 5&#x2F;22归异乡记Python 爬虫&#x2F;数据分析简易教程Windows 更新禁用导致 MS Store 无法安装5&#x2F;25 - 5&#x2F;30SD WebUI xformers 和 torch 依赖问题归新乡记 除了转日区运行和使用日文虚拟机以外，还有一个可能更简单的解决方案，理论上，你甚至可以在浏览器中运行。哦对了，记得检查游戏文件的完整性。 本文标题见这一节。 ¡û ¥¨¥é©`¤Î°kÉú¤·¤¿Ç°áá¤Î¥¿¥°¤òÊ¾¤·¤Æ¤¤¤ëˆöºÏ¤â¤¢¤ê¤Þ¤¹ 2023 年 5 月 7 日，星期日真っ黒に染まるよウェディング酱油是一种黏且甜的液体，黏是触觉，甜是嗅觉。 自从发现食堂还有自助调味站这种风水宝地之后，我的口味就变得越来越重，天天往饭菜上倾倒酱油和番茄酱。但是这个瓶子不太听话，不仅黏糊糊的，还是挤压酱料瓶，这意味着很容易洒出来。虽说清理餐盘和餐具的工作与我无关。但是联想起我每个月都得处理一次宿舍牛奶倾倒案，这种擦不干的液体还是不要惹的好。 其实说起来，除了酱油和番茄酱，我的正餐一向来相当固定，包括饭、鸡蛋、猪肉精制品与蔬菜。这说不上有多健康，但是有蔬菜吃肯定是比麦当劳的便宜套餐——猪肉柳蛋汉堡配薯条可乐——好多了。 鸡蛋，有煎蛋和炒蛋可选。我到学期过半了才发现煎蛋能省一块钱，之前一直点的炒蛋，相当于亏了百来块！炒蛋味道确实更好，但是我还是选择用番茄酱来补。 猪肉精制品，有午餐肉、火腿、香肠等等，其实腊肉也可以放进来，但并不是并列的菜式，而且应该也不算精制品。显然的，没有人能拒绝午餐肉，但是我还是选择火腿！ 蔬菜，这个就得看每日运势了，没啥好说的，反正都是能下肚的。有青菜、白菜、生菜、油菜、菠菜，哎，怎么全是一家子蔬菜啊。我个人最喜欢的是菠菜，过量酱油浸润的菠菜口感有如寿司；不过只要师傅手不抖量给的够，就都是好菜。 确实太少，连韭菜都没。 顺便一提，我更喜欢这个组合盖饭而不是两送套餐，是因为套餐含饮料。饮料选择包括奶茶一类的热饮与可乐之流的冷饮，但是如果想奶茶转冻奶茶，就要额外加钱，这实在是有点不科学了！无糖、热奶茶、冻奶茶，不管哪个，天天喝还不如让我别受这种苦了。这算是套餐的原罪吗？ ずっと真夜中でいいのに昨天下午下载了紙の上の魔法使い（纸上的魔法使）。 然后晚上去公园逛街了，第二次来公园，才意识到占地面积并不大，我走着走着就误入旁边的居民区了。隐蔽的楼梯爬上错综复杂的地势，引导着人们在黑暗之中下降，在恍惚之中摔断腿。而在阴暗的小区与光亮的都市的之间的罅隙，我拍到了这么一幅超现实主义的景象： ——手机相机曝光处理并不是太好，而我之于摄影，连个门外汉也算不上。但是比起之前放假和家人游历景点拍了一大堆不知道美在哪里的景观，这一次，我觉得确实有必要记录点啥。 然后在公园及居民区乱走、乱跑、乱想，直到口渴，两个小时才坐地铁回去。——这公园周围确实挺不错，有体育馆、图书馆、荒诞的山路、残朽的大楼，还有接连不断的寂静的小区，比起常见在市中心地铁站门口的闹市带来的声光污染，实在是让人心旷神怡。不过，距离学校实在有点远，不得不坐地铁，这也决定了不能常来。——要是租房住附近该有多好；但是，通勤费用也会急遽增加。 想，想点什么呢？想自己的人生、观念、经历。期末考试毕了，短期之内没什么目标，但是我还是希望暑假不要荒废。 如果有人要强迫我去参加社交活动、做个外向的人，我会有什么变化？我仍在本能地逃避内心的答案。 这个学期干了许多有趣与无聊的事情，嗯，最有趣和最无聊的都是玩游戏。幸或者不幸，下面这事儿可算是有点重量： 我的恋爱观受到了不小的冲击。我不再认同像无法如愿的分身一样被动地等待成为魔法师，而是觉得改变自己的处境确实是可能的。不过，我仍然缺乏契机和动力。动力倒是比较好说，契机这玩意，就是，我见都见不到的东西，怎么有机会呢？ ——以后还可以漫谈，下面有请特邀嘉宾入场。 データが破損している可能性もある时间继续流动。回到宿舍，解压游戏，反复报错，难以置信，终于绝望： ANSI 文字列を UNICODE 文字列に変換できません。現在のコードページで解釈できない文字が含まれてます。正しいデータが指定されているかを確認してください。データが破損している可能性もあります 意为：无法将 ANSI 字符串转换为 UNICODE 字符串。包含了当前代码页无法解释的字符。请确认数据是否正确。数据可能已损坏。 嗯，这确实是我第一次接触 Kirikiri2 引擎，也是我第一次遇到区域问题。从小到大没受过这么大委屈。 于是今天一整天，我在考虑怎么补救。我继续找网站，下载了五六个版本，结果无一例外都出现编码问题。用 Locale Switcher 和 Locale Emulator 仍然一无所获。 这时候我在想，因为我的笔记本是 Windows 11 家庭中文版，无法改变语言（其实能的话也不能这么冒险啊），只能用虚拟机了。原游戏发布于 2014 年，时间上对应 Windows 7&#x2F;8&#x2F;8.1。很可惜，下个 Windows 7 Professional Japanese SP1 x64 得接近一个小时，这段时间我可没法干等着。 但是人类的思维能力姑且是可以冲破囚笼的，我忽然想到机房的远程桌面（默认语言英文，应用语言设置为日文），把游戏传到了上面。嗯这样说其实不准确，实际的网络结构是，我通过笔记本连接到 RDP，RDP 又挂载了远程硬盘，我要把游戏通过两步传输送到服务器上。 不错，经历了十分钟的缓慢传输，游戏在 RDP 里跑起来了，虽然标题还是乱码，至少能见到主界面。我立刻被桐叶的画风深刻地震撼到了，虽然理论上这算是早期作品。 当然剧作家不会就此收笔。——能见到主界面，但也只能见到主界面。点击开始游戏按钮，游戏出现弹窗，然后所有主界面按钮消失。因为之前研究过日志文件，我知道这些按钮都是实时创建渲染的，不过这并不助于解决问题。报错信息如下： ¥¨¥é©`¤¬°kÉú¤·¤Þ¤·¤¿¥Õ¥¡¥¤¥ë : scenario_1_1.ks ÐÐ : 34¥¿¥° : image ( ¡û ¥¨¥é©`¤Î°kÉú¤·¤¿Ç°áá¤Î¥¿¥°¤òÊ¾¤·¤Æ¤¤¤ëˆöºÏ¤â¤¢¤ê¤Þ¤¹ )file:&#x2F;&#x2F;.&#x2F;c&#x2F;users&#x2F;xxxxxxxx&#x2F;documents&#x2F;xxxxxxxx&#x2F;data.xp3&gt;°µÜž について適切な拡張子を持ったファイルを見つけられませんでした 最后一段日文意为，找不到合适的扩展名为 .xp3 的文件。（实际上，有文件存在于正确的位置，但是无法识别） Google 一下，在 Type-moon 工单版 找到了相同的报错信息。很不幸的是，官方给出的回复是，文件可能已经受损，建议检查、卸载重装。这当然不适用于我，而且幸或不幸，我把页面顶端红字的「魔法使いの夜」看成这个游戏的名字了…… 我继续尝试多个下载版，自然还是全军覆没。这时候虚拟机需要的系统镜像也下载好了，用 VirtualBox 配置一下，内存 4096 MB，CPU 8 个（实际上，是线程数&#x2F;逻辑处理器数而不是内核数！），VRAM 128 MB，存储 16 GB，显卡 3D 加速，网络桥接，然后启动。VBox 执行自动安装，毕了，16 GB 存储已经用掉了 10 GB，此时安装的甚至是 Home Basic 而非 Professional！ 把游戏复制进去，C 盘自然是红了。游戏能跑，没有编码问题，但是一样报错。 当时的我调试了半个小时也没辙，为了拯救本地本来就接近爆炸的 SSD，先把虚拟机释放了。虽然说，博客写到这里，Copilot 就在想，难道是游戏本身的问题？——很有先见之明。 继续试验不同的下载版本，上传到 RDP，解压、运行、报错，一气呵成。 不同下载版本中附带了不同种类的补丁、提取的BGM等附件，压缩包总大小在 2.65GB 到 3.15GB 之间浮动。不过，因为汉化文件是同一套，报错自然也是同一套。在某个著名的「一译一记实例2017pre（是什么）」文件夹里，我找到了游戏的原文和译文，以及许多封去除了邮箱地址、经过整理的邮件，谓「开发报告」，谈及了翻译的初心、动力、工作分配、时间安排、语言要求与预期目标等等。 很有意思，很有意思，窃读这些被公开、充满了随性的生活色彩的私人言语，颇有一种元游戏之感，但是我尚且没有品鉴过你们的翻译，就先暂时抑制住这种好奇心吧。——另外，这个文件夹里的文本，SHIFT-JIS、GB2312、UTF-16 LE 等编码都有出现，你们的 notepad.exe 能毫无错误地打开吗？ 最后，我都准备手机装 Kirikiroid2 模拟器，死马当活马医了，但是看着 krkr2 吧的置顶帖子，查着补丁站却发现没有魔法使，我越发觉得希望渺茫。 ——但并不是不存在。最后在某个提供 PC 与 krkr 版的两种下载的版本中，我把 PC 版拷到 RDP 上去，游戏总算是，能，跑，起，来，了。转场特效的时候帧率会严重下降，但是问题并不大，因为跑起来了。标题与标题选项栏的文字从乱码变成了一堆问号（因为英文系统无法正确显示中文，这里是系统而不是应用语言），但是问题并不大，因为跑起来了。 为了给各位读者避雷排坑，最终成功运行的是这个专栏里面的版本。 此外还有一些特征，以方便从其他渠道下载的读者判断是否是正确的版本： 标题栏能够解析出一串英文 mygalgame.com 游戏根目录下有文件叫 dtcn.xp3，而不是只有 data.xp3 游戏根目录下的可执行文件叫 紙の上の魔法使い.exe 和 紙の上の魔法使い_cn.exe，图标相同。（某些不能运行的版本中，有名为 纸上魔法使.eXe 的可执行文件，图标不同。）不过，为了正确运行，建议把中文 exe 复制一份，名称改为全英文（游戏路径也不要有中文）。 呼，好累啊，现在是 8 日的凌晨两点，我不知道为啥我决定半夜写博客，总之，还有很多值得分享的插曲，明日再续吧。 2023 年 5 月 8 日，星期一Scherzando Disarray[0]今天是 2023 年 5 月 8 日，星期一，天气晴朗，温度 25 摄氏度，湿度 60%，风速 2 级，空气质量 50，PM2.5 浓度 50，紫外线指数 5 级，日出时间 5:30，日落时间 19:00。 ——Copilot 是一个积极填坑的好孩子，它认为我在上文结尾提到了“插曲”，这一节就会讲到它，所以给这节的标题提供的建议是“纸上的魔法使之插曲”。 很可惜，Copilot，你错了。我不会讲插曲的。我会讲一个新的坑。 第一件事，我长久以来都在抱怨，阻碍我买游戏的最大问题是，阿区充值太麻烦。每次都要去淘宝倒 CSGO 道具，每次都要上网提单、接受道具、挂上市场、手机确认、等待到帐。这一套流程还是有点麻烦的；而且，等到帐可能一等就是半小时半天甚至收到店主说后台异常没货了的消息；更要命的是，很多店都有周期性的首单优惠，如果想要省点钱，就要去不同的店家买最低面额（一般是 100 ARS），虽然我现在已经不那么关心价格了，但是之前折腾的我可忘不了。 但是昨天用信用卡试了一下，应该可以说，这个问题已经不是问题了。 只要你有可以国际支付的 Visa 或 MasterCard，你就可以在阿区，乃至任何地区，直接用信用卡充值。大概需要注意以下两点： 账单地址应该填写正确的信用卡本地地址，而不是阿根廷的地址。 付款时的“国家”应该选择阿根廷，而不是本地。 充值完成即刻到帐，这叫一个方便啊。虽然说，按照国外信用卡的普及程度，不就该是这样用的嘛；但是对我来说算是解决了一个世纪难题。 Accelerando Disorder[1]第二件事，我有必要展现对我的高中文言阅读功力的自信。 其治以脉，不以证，无富贵贫贱不责其报信而治无不效其不治必先知之惟一用巫乃去不顾自是吾里之巫稍不得专其功矣——揭傒斯《赠医者汤伯高序》 断句实际上是很有技巧可言的。 答案与解析无富贵贫贱&#x2F;不责其报&#x2F;信而治&#x2F;无不效&#x2F;其不治&#x2F;必先知之&#x2F;惟一用巫&#x2F;乃去不顾&#x2F;自是吾里之巫&#x2F;稍不得专其功矣。「富贵」「贫贱」是并列的，必然划分在同一句中「其治以脉，不以证」和「无富贵贫贱，不责其报」是并列的「信而治，无不效」和「其不治，必先知之」是并列的「自是」表示「从此」，必然在句首我发现网上的解析，翻译按照「不顾自是」翻译成了「顾不得自以为是」，这显然是与断句矛盾的。而全网都在复制粘贴同一份参考译文，颇有以讹传讹之嫌。因此有必要给出我自己的理解，尽管不算是满分答案：他凭借把脉治病，而不是依靠症状。无论富贵贫贱，都不苛求医资。信其医术来治疗的人，没有不见效。如果治不好，他一定预先知道。但倘若病人一请巫医，他就离开不再照料了。从此，我乡里的巫医，逐渐不能独享治病的功劳了。「证」：同「症」，症状「无」：无论「责」：苛责「报」：报酬「稍」：渐渐最后一句「独享治病的功劳」，和原文中乡人「把功劳归于巫医，把过错归于医生」的想法有关，独立于情景是没法理解的。 好吧，这下你知道我电脑里又有一款四字游戏了。 Fortepiano Dispersion[2]第三件事，我得久违地交给 Copilot 讲一讲，因为我实在是有点累了。 绿色文本框中的内容是我自己写的。蓝色文本框则全权交给 Copilot。紫色用于蓝色文本框内的二级分类。 第三件事，我在做一个叫做「14 种扫雷变体」的游戏，但游戏中有 22 种变体和更多的游戏模式。 第三件事，我在上周末，也就是 5 月 1 日，看了一场电影，叫做《纸上的魔法使》。 简介《纸上的魔法使》（Paper Mage）是一部由日本导演森田芳光执导的电影，于2003年上映。影片根据日本作家伊坂幸太郎的同名小说改编，主演有吉高由里子、山崎努、田中泯、小林薰、内田春菊、宇津井健、藤田宗久、平泉成等。影片讲述了一名女高中生因为一本魔法书而与一位神秘的男子展开了一段奇幻的爱情故事。 这部电影的原著是伊坂幸太郎的同名小说，我在 2018 年 11 月 10 日，也就是两年半前，读过这本书。那时候我还没有开博客，所以这本书的读后感就没有记录下来。我记得当时的感觉应该是「还行吧」，因为我并没有记住这本书，甚至连故事的大概情节也忘记了。但是这部电影，我看完之后，我还是有些感慨。 电影剧情这部电影的主要矛盾是，一本魔法书可以实现任何人的愿望，但是代价是，每次实现愿望，就会有一个人死去，而且，愿望会以最坏的方式实现。楔子：情景喜剧女主角和男主角在图书馆相遇，男主角在图书馆里工作，他的工作是整理图书馆里的书籍。女主角在图书馆里找到了一本书，这本书是一本魔法书，这本书可以实现任何人的愿望，但是代价是，每次实现愿望，就会有一个人死去，而且，愿望会以最坏的方式实现。电影的主要矛盾是，女主角会不会使用这本书，以及女主角使用这本书的后果。但是，我觉得电影的主要矛盾并不是这个，而是女主角和男主角的爱情……其一：信息不对称女主角在得知这个代价之后，决定不再使用这本书，但是她的同学使用了这本书，而且还是为了她的愿望。女主角的愿望是，她想要和她的同学谈一场恋爱，但是她的同学的愿望，却是想要和她谈一场恋爱，而且，他们的恋爱，是为了他的愿望。这样一来，女主角就陷入了两难的境地：如果她不和同学谈恋爱，那么她的同学的愿望就不会实现；如果她和同学谈恋爱，那么她的愿望就不会实现。最后，女主角还是选择了和同学谈恋爱，但是她的同学却在恋爱的过程中，意外地死去了。女主角意识到，这是因为她的同学的愿望已经实现了，所以他不再需要这本书了，于是，这本书就把他杀死了。于是，女主角决定，她要把这本书销毁，但是，她又不忍心销毁这本书，于是，她就把这本书藏在了图书馆里……其二：认知危机这部电影的故事讲的是，一个女高中生在图书馆里发现了一本神奇的书，这本书可以实现任何人的愿望，但是代价是，每次实现愿望，就会有一个人死去，而且，愿望会以最坏的方式实现。女主角发现这本书之后，她把这本书带回了家，她想通过这本书，让自己的父亲复活。但是，她父亲复活之后，却变成了一个残暴的杀人魔。女主角意识到，这本书并不是一个好东西，于是她把这本书带回了图书馆，想把这本书还给图书馆。但是，图书馆的管理员却告诉她，这本书并不是图书馆的藏书，而是被一个叫做「图书管理员」的人放在图书馆里的。图书管理员是一个神秘的人，他会在图书馆里放一些书，然后看看读者会做出什么样的选择。女主角想把书还给图书管理员，但是图书管理员却说，他不是图书管理员，他只是一个普通的读者，他也不知道这本书是怎么到图书馆的，他也不知道这本书是怎么把他变成图书管理员的。他说，他也想把书还给图书管理员，但是他不知道图书管理员是谁，他也不知道图书管理员在哪里……其三：回溯这部电影的故事很简单，就是一个女高中生在图书馆里发现了一本魔法书，这本书可以实现任何人的愿望，但是代价是，每次实现愿望，就会有一个人死去，而且，愿望会以最坏的方式实现。这部电影的主题是「愿望」，但是我觉得这部电影的主题应该是「愿望的代价」。我觉得这部电影的主题很有意思，但是剧情设置和演员演技让我看得很不爽。主要是，剧情太过于狗血，演员的表演也太过于狗血。这部剧的主要矛盾是，女主角想要复活她的母亲，但是她的母亲已经死了，所以她必须杀死一个人，才能复活她的母亲。她杀死了一个人，但是她的母亲并没有复活，因为她的母亲已经被埋葬了，所以她必须杀死另外一个人，才能复活她的母亲。她杀死了另外一个人，但是她的母亲并没有复活，因为她的母亲已经被火化了，所以她必须杀死另外一个人，才能复活她的母亲。她杀死了另外一个人，但是她的母亲并没有复活，因为她的母亲已经被撒入大海了，所以她必须杀死另外一个人，才能复活……其四：溢出这部电影的主要矛盾是，一本魔法书可以实现人的愿望，但是，每实现一个愿望，就会有一个人死去，而且，愿望会以最坏的方式实现。影片的主人公是一位女高中生，她在一次偶然的机会，发现了这本神奇的魔法书。她在这本书的帮助下，实现了一系列的愿望，比如说，她帮助了她的同学，让她的同学和她的男朋友分手了；她帮助了她的同学，让她的同学的父亲死去；她帮助了她的同学，让她的同学的母亲死去；她帮助了她的同学，让她的同学的男朋友死去。最后，她的男朋友死去了，她再也没有办法忍受这种痛苦，于是，她把这本书给了一个小孩，让这个小孩帮她实现最后一个愿望：让她的男朋友复活。但是，她的男朋友复活之后，她的男朋友变成了一个残疾人，而且，她的男朋友的父亲也死去了。最后，她的男朋友死去了，她的男朋友的父亲死去了，她的男朋友的母亲死去了，她的同学的男朋友死去了，她的同学的母亲死去了，她的同学的父亲死去了……其五：重开这部电影的剧情，是讲述了一个女高中生，她在图书馆里发现了一本神秘的书，这本书可以实现任何人的愿望，但是代价是，每次实现愿望，就会有一个人死去，而且，愿望会以最坏的方式实现。这个女高中生，她的名字叫做「神崎小雪」，她的愿望是，希望自己的父亲能够回来生活。她的父亲是一个研究魔法的人，但是在她还小的时候，她的父亲就离开了她和她的母亲，去寻找一本神奇的魔法书。她的母亲在她还小的时候就去世了，所以她一直跟着她的姑姑一起生活。在她发现这本书之后，她的愿望实现了，她的父亲回来了。但是她的父亲回来之后，却不是一个正常人，而是一个背着书包，穿着校服的小孩。她的父亲告诉她，他的身体已经不好了，他的寿命已经不多了，所以他想要回来，看看他的女儿。然而，这个男孩的身体，却是她的父亲的身体。这个男孩的身体，就像是她的父亲的身体一样，他也有着一样的病，他也有着一样的寿命……其六：好的矛盾这部电影的剧情，大概是这样的：一个女高中生，叫做「小倉瞳」，在图书馆里发现了一本书，这本书可以实现任何人的愿望，但是代价是，每次实现愿望，就会有一个人死去，而且，愿望会以最坏的方式实现。然后，这个女高中生，就开始了她的奇幻的冒险。这部电影的主要矛盾是，女主角的父亲在她小时候去世了，所以她的愿望是「让父亲复活」，但是，这个愿望会导致她的母亲死去。所以，女主角就陷入了两难的境地。我觉得这部电影的主题很有意思，但是剧情设置和演员演技让我看得很不爽。主要是，剧情太过于狗血，演员的表演也太过于狗血。但是，这个矛盾，我觉得并不是一个好的矛盾，因为这个矛盾并没有让我觉得有冲突，反而让我觉得很烦。我觉得，这个矛盾的本质是「女主角的父亲去世了，她很伤心」，而这种矛盾，我觉得，不应该是一个矛盾。跋：但是女主角在得知这个代价之后，决定不再使用这本书，但是……好的矛盾她的父亲得了绝症，她的父亲希望她使用这本书，所以她还是使用了这本书，但是她的父亲还是死了，而且，她的父亲死的方式是，被一辆卡车撞死。坏的矛盾她的父亲患有绝症，她的父亲希望她使用这本书，帮助他治病。于是，女主角决定使用这本书，她使用这本书的愿望是，希望她的父亲的病能够治好，而代价是，她的父亲不再是一个人，而是两个人。新的矛盾她的母亲得了绝症，她不得不使用这本书，希望能够治愈母亲的病。但是，她的母亲并没有治愈，而是变成了一个石头。溢出她的同学，也就是男主角，得知了这本书的存在，他想要使用这本书，因为他想要复仇。男主角在得知这个代价之后，决定要使用这本书，因为他想要复仇，他想要杀死他的父亲，他的父亲是一个杀人犯，而且他的父亲杀死了他的母亲。男主角杀死了他的父亲，但是，他的父亲并没有死，他的父亲只是失去了记忆，而且他的父亲在失去记忆之后，变成了一个好人。男主角在得知这个代价之后，决定不再使用这本书，但是，他的父亲，也就是男主角的祖父，得知了这本书的存在，他想要使用这本书，因为他想要复仇。男主角的祖父在得知这个代价之后，决定要使用这本书，因为他想要复仇，他想要杀死他的儿子，他的儿子是一个杀人犯，而且他的儿子杀死了他的妻子。男主角的祖父杀死了他的儿子，但是，他的儿子并没有死，他的儿子只是失去了记忆，而且他的儿子在失去记忆之后，变成了一个好人。回溯她的好友因为一些原因，使用了这本书，希望可以实现自己的愿望，但是，这个愿望的实现，却导致了另一个人的死亡。女主角的好友因为愧疚，想要自杀，但是，女主角阻止了她，并且，使用了这本书，希望可以让好友复活。但是，这个愿望的实现，又导致了另一个人的死亡。信息不对称男主角却一直在使用这本书，他希望通过这本书来救回他的爱人。最后，男主角的爱人被救回来了，但是，女主角却因为男主角而死去了。 第三件事，我在 5 月 5 日，星期五，看了《无人生还》。本来以为是一部普通的侦探片，没想到是一部十分有趣的侦探片。我在电影院看的，所以没有中途停下来去搜剧情，也没有看预告片，所以看完之后，我对这部电影的评价是：这是一部很有趣的电影，但是不是一部很好的电影。首先，这部电影的剧情是很有趣的。这是一部典型的侦探片，但是有一个特殊的背景：这是一部讲述侦探如何侦破侦探小说的电影。这部电影的主要情节是，一位大侦探在一家豪华游轮上举办了一场游戏，游戏的参与者是一群侦探小说的作者，他们在游戏中扮演侦探，而大侦探扮演受害者，大侦探的目的是让这些作者写出一部无法破解的侦探小说，而作者的目的是在游戏中找出大侦探的“真相”。但是，大侦探却在游戏中被杀害了，而且是在所有人都在同一个房间里的情况下被杀害的。这就是一个典型的“密室杀人”题材，而且是一个“密室杀人”题材中最难解的情况：所有人都在同一个房间里，而且没有任何人进出，但是却发生了一起谋杀案。第三件事，我想说一下我这次在阿根廷的生活。我的生活很美好。虽然我现在的生活，没有什么特别的；但是，我已经不再觉得它有什么不好了。我的生活很美好。我现在每天早上起床，打开窗帘，看到的是一片绿色的景色。我可以看到一条小河，河上有一座小桥，桥上有一些人在晨跑。河对岸有一片小树林，树林中有一些小鸟在歌唱。我可以看到一排排的小楼，楼间有一些小花园，花园里有一些小狗在玩耍。我可以看到一些小鸟，小鸟在天空中飞翔。第三件事，我想要在这里记录一下我的一些阿根廷生活小技巧。用热水瓶保温。热水瓶的保温效果非常好，我一般会在早上烧一壶热水，然后放在床边，一直可以保持温度到晚上。这样的话，晚上就不用起来烧水了。每天早上喝一杯热水。这样的话，可以保持身体温度，也可以让身体在早上得到足够的水分。当然，如果你喜欢喝咖啡或者茶，那就更好了。洗澡的时候先打开热水，等热水出来再调整水温。这样的话，可以保证热水不会浪费。用热水洗碗。这样的话，可以保证洗碗的效率。第三件事，我今天发现了一个有趣的事实。就是，我在写这个故事的时候，总会想到一些可以写的内容，但是，如果我不立即把它写下来，过一会儿就会忘记。这个现象很有意思，我想，是因为我在写的时候，大脑会处于一种很特殊的状态。我想，这个状态可能是「处于写作状态」的意思。这个状态，我觉得是很有意思的。我发现，当我处于这个状态的时候，我会把一些本来很难想到的东西，想到。比如说，我会想到一些我本来不知道的内容。比如说，我会想到一些我本来不知道的想法。我觉得这个状态是很有意思的。我觉得，如果我能一直处于这个状态，那么，我就可以一直想到一些我本来不知道的东西。我觉得，这是很有意思的。我觉得，这是很有意思的。第三件事，我今天的工作是写一个「编辑器」。这个编辑器的作用，是用来编辑另一个编辑器的配置文件。你没看错，它是一个编辑器，用来编辑另一个编辑器的配置文件。这个编辑器的名字叫做「Kakoune」，它是一个轻量级的、模态的、可扩展的、被设计用来取代 Vim 的编辑器。它的配置文件，叫做「kakrc」。你没看错，它的配置文件，叫做「kakrc」。因为它是一个编辑器，所以它的配置文件，也是一个编辑器。因为它的配置文件是一个编辑器，所以它的配置文件的配置文件，也是一个编辑器。你没看错，它的配置文件的配置文件，也是一个编辑器。 Staccato Da Capo[::-1]游戏最终曲 Comment (ne pas) te dire adieu 的谱面设计名义INFINITY 难度：Scherzando Disarray[0]ETERNITY 难度：Accelerando Disorder[1]REALITY 难度：Fortepiano Dispersion[2]IMAGINARY 难度：Staccato Da Capo[::-1]rei 的解释Scherzando 形容演奏情感“诙谐地”Accelerando 形容演奏速度“渐快”Fortepiano 形容演奏力度“强后即弱”Staccato 指演奏技巧“断音”；Da Capo 意为“重复演奏”以上五个音乐术语涉及演奏中五个不同的方面ひろゆき 的解释Disarray、Disorder、Dispersion、Da Capo 的首字母连起来是 DDDDC，与剧情中「D4C」呼应Disarray、Disorder、Dispersion 均是「Dis-」打头，意义分别为「混乱」「散乱」「分散」，不尽相同而互相关联[0]、[1]、[2] 是数组下标，代表故事在不同层次上的展开，又是前三个难度在代码中的索引[::-1] 是数组切片操作，表示将元素倒序排列，代表故事在虚幻层次上的回环 第四件事，我放暑假是真的一点事儿一点目标也没有。肯定是要找点事，比如说，学英语准备雅思，给 good-first-issue 之类的项目做点贡献，在国内一个人旅游。 （我其实挺想去 CM 玩的，但显然我的日语水平完全不够。反正实际上我并不急，等以后大三大四暑假再去也不迟。——说实话我这日语确实纯粹出于兴趣自学的，也不是很关心进度，但实在是有点不紧不慢，到今天为止差不多 9 个月，还在学 N3 的内容。） 但是，好吧，今天要做的事只是继续把笑话讲下去，故事写下去，永远不会实现的幻想想下去。 搜索一下 ラブコメ，我们可以看到日文维基百科 ラブコメディ 这个词条最上方有这么一行消歧义提示： この項目では、恋愛を主題にしたコメディ（喜劇）を指す和製英語について説明しています。恋愛を主題にしたコメディ一般については「ロマンティック・コメディ」をご覧ください。 大意是：ラブコメディ的中心词是コメディ，后面那长串的中心词是ロマンティック。 我个人而言喜欢的是前者，就喜欢搞笑动画片儿，最好还是当下酒菜。 哎，为什么是动画呢？因为我觉得，小说，读起来太累；漫画，电脑长宽比不合适，手机又太小；要是有纸质书我读起来可能还会有点兴趣。纸质书不是没有——东立和尖端出版都很勤奋，但是毕竟不便宜——还是送我得了！ 这两块屏幕都很好，而且手机和电脑播放视频各有优势，我也经常看。但是看画面和读文字是完全不同的两种体验——看小说真的会很累。屏幕还让我放弃了做数独，电脑做数独没法触屏做笔记，实在是没法用；手机上的软件功能全面，但一般要么有广告（电脑网页有广告？我开着 Adguard 真不认识什么叫广告），要么就是付费，而且，而且，虽然说比电脑好一点，用起来还是难受。单从数独来讲，带 Apple Pencil 的 iPad 毫无疑问能带来最好的体验，除此之外还适合看漫画、上课开会做笔记，但是这个理由应该没有强烈到我去买一台 iPad 的地步——还是送我得了！ 第五件事是，我最近看了部 2019 年的ラブコメディ小说，名字是什么不重要，我们现在要做个简单的社会学实验，那就是先把梗概讲完，看看有没有人能猜到这部小说的名字。 这个故事，我可以保证和我之前看过的任何同类题材都大不相同，设定在非日常的奇幻世界中，但是作者对剧情与感情的节奏和尺度把握都非常好，结局又可谓欧亨利式的反转，我觉得这是一部非常优秀的作品。 故事的开篇便是一个新奇的设定： 双酮物语男主角和女主角都是同性恋。他们在一起的时候，会做一些非常危险的事情。怪奇物语世界上的每个人都有一个与之共生的「灵魂」，这个灵魂可以看作是一个人的「理想自我」，但是它并不是一个人的一部分，而是一个独立的个体，这个个体与人类的关系，就像是人类与宠物的关系。这个灵魂可以看见，但是不能听见，它有自己的思维，但是不能说话，它可以独立行动，但是不能走路，它可以吃东西，但是不能消化，它可以看见所有人的灵魂，但是只能看见自己的人类。楔子：原教徒于是，「怪奇」的事情发生了，男主角的灵魂爱上了女主角的灵魂，但是女主角的灵魂爱上了男主角本人。其一：新教徒于是，「怪奇」的事情发生了，主人公的灵魂，也就是他的「理想自我」，突然变成了一个女孩子，而且是一个非常可爱的女孩子。其二：异教徒于是，「怪奇」的事情发生了，灵魂们开始与人类交流，他们用手语，用书写，用绘画，用舞蹈，用其他的方式，与人类交流，与人类交流，与人类交流。这个世界上，有一个女孩，她的灵魂与她一样是女孩，但是她的灵魂却是个男孩，这个男孩灵魂的特点是，他喜欢女孩子。其三：蒙古上单于是，「怪奇」的故事就开始了。这个世界上有一种疾病，名字叫做「灵魂脱离症」，这种疾病可以让一个人的灵魂脱离人体，这种疾病的感染方式是「灵魂共生」。当一个人的灵魂脱离了人体，它就会变成一个「幽灵」，它会变得很小，但是可以飞行，它可以看见所有人的灵魂，但是只能看见自己的人类，它可以独立行动，但是不能走路，它可以吃东西，但是不能消化，它可以通过触摸人类的灵魂来与人类交流。这个世界上有一种职业，名字叫做「灵魂猎人」，这种职业的主要工作是杀死幽灵，或者说是杀死灵魂脱离症患者。灵魂猎人的工具是一把「灵魂枪」，这把枪可以杀死幽灵，也可以将幽灵变回灵魂。灵魂猎人组成了「灵魂猎人协会」，每天执行任务领取报酬，也可以自由接受委托，但是不能杀死人类。但是，他们却不知道，协会的领导者其实是一个幽灵……其四：怪物于是，「怪奇」的事情发生了：人们的灵魂开始消失。有的人的灵魂消失了，但是人类还活着；有的人的灵魂消失了，人类也死了；有的人的灵魂消失了，人类死了，但是灵魂还活着；有的人的灵魂消失了，人类死了，灵魂也死了。这个世界上，有一种特殊的人，他们的灵魂不会消失，但是他们的灵魂不能看见。这种人的存在，对于人类而言，是无法理解的，他们的灵魂不会消失，但是他们的灵魂不能看见，这种人，对于人类而言，是无法理解的。这种人，会被人类称作「怪物」，他们的灵魂不会消失，但是他们的灵魂不能看见，这种人，对于人类而言，是无法理解的。其五：哲学三问于是，「怪奇」的事情发生了。一个人的灵魂突然消失了，但是这个人却没有死亡，于是「灵魂」这个词开始出现在了报纸上，人们开始注意到，原来每个人都有一个灵魂。于是，人们开始注意到，原来每个人都有一个「理想自我」。这个灵魂是什么？它从哪里来？它去了哪里？人们不知道，但是人们发现，它们的灵魂都是一样的，都是一个小孩子的形象，这个小孩子的形象与人类的年龄并不相同，它们的年龄与人类的年龄也并不相同，但是它们的性别与人类的性别相同，它们的性格与人类的性格相同，它们的情感与人类的情感相同。于是，人们开始问：「我是谁？」「我想要什么？」「我要去哪里？」这个问题，我们每个人都会问，但是我们每个人都会给出不同的答案，因为我们每个人都有一个不同的灵魂，我们每个人都有一个不同的「理想自我」。其六：怪奇学三大基本定理于是，「怪奇」的事情发生了，主人公的灵魂看见了一个看不见的灵魂，这个灵魂是一个男孩，但是主人公是个女孩，这个男孩的灵魂看见了女孩的灵魂，但是他自己是个男孩，于是，他们开始了一段奇妙的交流。这个设定看起来很新奇，但是其实并不新奇，这个设定本质上只是一个「隐喻」，这个隐喻可以被拆解成三个部分：一个人的「灵魂」是一个独立的个体，它有自己的思维，但是不能说话，它可以独立行动，但是不能走路，它可以吃东西，但是不能消化，它可以看见所有人的灵魂，但是只能看见自己的人类。一个人可以看见别人的灵魂，但是不能看见自己的灵魂。一个人可以看见别人的灵魂，但是不能听见别人的灵魂。这三个隐喻，都是我们生活中的常见现象，我们可以把它们看作是「隐喻」，但是也可以把它们看作是「现实」，这个世界上真的存在这样的现象。比如说，一个人可以看见别人的灵魂，但是不能看见自己的灵魂，这个现象在我们的日常生活中，也是经常发生的，比如说，一个人可以看见别人的「面部表情」，但是不能看见自己的「面部表情」。其七：不可靠的叙述者于是，「怪奇」的事情发生了，主人公的灵魂，也就是这个故事的叙述者，看见了一个「不应该存在的灵魂」，而这个灵魂的主人，也就是这个故事的女主角，却看不见任何灵魂。这个灵魂，是一个「不应该存在的灵魂」，因为它不是人类的灵魂，它是一只猫的灵魂，而这只猫的灵魂，却在这个世界上，找到了一个女孩，而这个女孩，却是唯一一个能看见它的人。于是，这个故事的叙述者，也就是这个故事的男主角，就在这个女孩的身边，变成了一只猫。故事的开篇，就是这么一个怪奇的设定，然后，剧情就开始了。男主角在女主角的身边变成了一只猫，这只猫的灵魂，也就是这个故事的叙述者，开始了他的叙述，而这个叙述，就是这个故事的剧情。这个故事的剧情，其实非常简单，就是男主角和女主角的日常生活，但是这个日常生活，却不是真实世界的日常生活，而是一个奇幻世界的日常生活，因为男主角是一只猫，而女主角是一个人。其八：烂尾于是，「怪奇」的事情发生了，主人公的灵魂爱上了另一个灵魂，而这个灵魂的人类却是主人公的死对头。这样的故事对于我来说，是新鲜的，因为我从来没有想过人类的「理想自我」会有这么鲜明的个性，而且作者还把它们描写得活灵活现，这让我觉得很有意思。不过，这个故事的主题并不是这个灵魂的存在，而是「爱情」，因为作者很快就让这个灵魂消失了，然后让主人公和他的死对头在一起了，这样的结局让我觉得很有趣。其九：不良少年王小明于是，「怪奇」的事情发生了，主人公发现自己的灵魂与一个女生的灵魂「相爱」了，而这个女生却是一个「不良少女」，她的灵魂与她的人类一样，都是一个「不良少女」。主人公的灵魂非常纠结，因为它的人类并不喜欢这个女生，但是它却喜欢这个女生的灵魂，于是它决定和这个女生的灵魂「交往」，但是它的人类却不知道这件事，于是它的人类就变成了「不良少女的男朋友」。这个故事的开篇，有一种「不可思议」的怪奇感，但是我却觉得非常有趣，因为这个设定，让我想起了一件事情。在我上初中的时候，我有一个同班同学，他的名字叫「小明」，他是班上的「不良少年」，他非常的「叛逆」，他经常迟到早退，他经常旷课逃学，他经常在课堂上打瞌睡，他经常在课堂上玩手机，他经常在课堂上吃零食，他经常在课堂上看小说，他经常在课堂上和同学聊天，他经常在课堂上和同学抢东西，他经常在课堂上和老师争吵，他经常在课堂上和同学打架，他经常在课堂上和老师骂人。其十：脱离性因素于是，「怪奇」的事情发生了，主人公的灵魂「小白」是一只猫，而主人公本人是一只猫妖，他们之间的关系就像是人类与猫的关系，他们彼此相爱，但是却永远不能在一起。这个设定非常有趣，它的第一个好处是，它能够让作者在人与人之间的关系中，摆脱所有的「性」的因素，这是一个非常重要的前提，因为在这个世界里，人类之间的关系，就像是人类与宠物之间的关系，所以，他们之间的关系，就像是人类与宠物之间的关系，这是一个非常重要的前提。十一：不可脱离性因素于是，「怪奇」的事情发生了，主人公发现自己的灵魂与一个人类的灵魂「合体」了，这个人类是一个女孩，她叫做「小野寺小咲」，是一个非常活泼可爱的女孩。主人公的灵魂觉得自己非常幸运，因为他的人类是一个非常可爱的女孩，而且她对自己的灵魂也非常友善，两个人很快就成为了朋友，而且还一起玩耍，一起吃饭，一起玩游戏。但是，这一切都是主人公的幻觉，他的人类根本不知道自己有一个灵魂，也不知道自己的灵魂是什么样子，她只是觉得自己的灵魂有时候会「发呆」，有时候会「不听话」，有时候会「不舒服」。主人公的灵魂觉得非常难过，因为他的人类根本不知道自己的存在，而且他也没有任何办法让她知道，他甚至不知道自己是不是「真的存在」，因为他的人类根本不知道自己的灵魂是什么样子。但是，主人公的灵魂还是决定要让自己的人类知道自己的存在，于是他开始了一系列的行动，他先是试图用「笔」和「纸」，然后是用「石头」和「树叶」，最后是用「电脑」和「键盘」，但是都没有成功。十二：主、主人、主人公于是，「怪奇」的事情发生了，主人公的灵魂「灵」，爱上了一个人类「主」，但是主并不知道灵的存在，于是灵开始了自己的单相思，但是灵是一个非常活泼的灵魂，它不断地尝试着与主沟通，但是主却一无所知。直到有一天，主遇见了一个自称是「灵使」的人，这个人可以看见灵魂，但是不能看见人类，他告诉主，你的灵魂是一个非常活泼的灵魂，它一直在尝试着与你沟通，但是你并不知道。主听了，非常震惊，他在短暂的沟通中，意识到了灵的存在，于是他开始了与灵的交流，他们在一起，他们相处，他们互动，他们相爱。但是，这个世界上，有很多不同的灵魂，有的灵魂非常活泼，有的灵魂非常沉默，有的灵魂非常温柔，有的灵魂非常暴躁，有的灵魂非常善良，有的灵魂非常残忍，有的灵魂非常聪明，有的灵魂非常愚笨。而在这个世界中，有一种灵魂，叫做「怪物」，这种灵魂非常罕见，它们的特点是，它们可以看见所有人的灵魂，但是只能看见自己的人类。十三：正常的人类于是，「怪奇」的事情发生了，主人公遇到了一个「不正常」的灵魂，这个灵魂居然是一个男孩子，而且还是一个有着「人类」的灵魂的男孩子。这个男孩子的灵魂是怎么来的呢？这个男孩子的身体又在哪里呢？我们不得而知。但是，这个男孩子的灵魂却是一个「正常」的灵魂，它有思想，有感情，有欲望，有行动，有求生的本能，它甚至还有自己的灵魂，这个灵魂的名字叫做「女孩子」。于是，主人公便和这个「怪物」成为了朋友，他们一起生活，一起成长，一起学习，一起逃学，一起打架，一起吃饭，一起玩耍，一起做作业，一起打游戏，一起看电影，一起看书，一起聊天，一起睡觉，一起做梦，一起哭泣，一起笑脸，一起快乐，一起悲伤，一起生气，一起疯狂，一起痛苦，一起狂喜，一起痛哭。他们一起度过了人生中的每一天，他们一起度过了人生中的每一个时刻，他们一起度过了人生中的每一个瞬间，他们一起度过了人生中的每一个瞬息。十四：不正常的人类于是，「怪奇」的事情发生了，男主角的灵魂突然说话了，而且说的话是这样的：你好，我是你的灵魂，我知道你能听见我，我想和你谈谈人生。男主角当然吓了一跳，但是他很快就接受了这个事实，他的灵魂是一个非常有趣的存在，它有着非常独特的性格，而且知识面非常广，这让男主角感到非常开心，因为他觉得自己不再是孤独的。但是，这个灵魂，却是一个非常悲观的存在，它认为人生没有任何意义，因为人类的灵魂是不会死的，而人类的身体却是会死的，所以人类的一生，就是在无意义的死亡前等待死亡，这是一个非常悲观的观点。男主角觉得这个观点非常可笑，因为他觉得人类的一生是充满了希望的，所以他决定帮助灵魂改变这个观点，于是他开始了一个非常疯狂的计划，他要让灵魂体验到人生的意义。于是，这个故事就变成了一个「奇幻的社会学实验」，男主角想要让灵魂体验到人生的意义，于是他开始了一系列的尝试，他要让灵魂体验到「痛苦」、「快乐」、「恐惧」、「希望」、「绝望」、「信任」、「背叛」、「爱」、「恨」，以及最终的「遗忘」。跋：坏结局于是，「怪奇」的事情发生了，男主角的灵魂突然开始看到了一个新的灵魂，这个灵魂是他从来没有见过的，而且这个灵魂的主人，是他的未婚妻。为了不让她知道自己看到了她的灵魂，男主角只能躲在她看不到的地方，但这样做的后果是，他无法再看到自己的灵魂，也就是说，他的灵魂和他的身体分离了。这个故事的第一个转折点，就是男主角看到了自己的灵魂，这个灵魂不是他的未婚妻，而是另外一个女孩子，这个女孩子是他的初恋情人。他们在小学的时候就认识，但是在初中的时候，这个女孩子转学到了其他城市，他们就分开了，但是男主角一直都没有忘记她。他们之所以分开，是因为男主角太胆小了，他不敢对这个女孩子表白，而这个女孩子也是一个非常胆小的人，她也没有对男主角表白，所以他们就这样错过了。现在，他们又见面了，但是这一次，他们都已经长大了，他们都有了自己的灵魂，他们都有了自己的未婚妻。他们之所以没有结婚，是因为他们没有遇到对的人，他们之所以没有遇到对的人，是因为他们都还没有遇到自己的灵魂。片假名物语世界上的人类都是由一种叫做「ラブコメディ」的细菌感染的。这种细菌会在人类的大脑中产生一种叫做「ラブコメディン」的物质，这种物质会让人类对「ラブコメディ」产生兴趣。这就是为什么，所有的人类都喜欢看「ラブコメディ」的原因。这种细菌的感染，是一种慢性的、渐进的、难以治愈的疾病。所有的人类都会在某个时间点被感染，但是，对于每个人来说，感染的时间点都是不同的。这就是为什么，有的人会从小就喜欢看「ラブコメディ」，有的人则是从大学才开始喜欢看「ラブコメディ」的原因。这种细菌的感染，是一种不可逆的、无法逆转的、永久性的疾病。一旦被感染，即使你不再看「ラブコメディ」，你也会一直喜欢看「ラブコメディ」。俗套物语人类的一生中，总有一段时间，是不会被任何人记住的。人们会在这段时间里做一些不可思议的事情，但是，不会有任何人记得这些事情。这段时间，被称为「忘却的七天」。在这段时间里，人们会做一些不可思议的事情。比如说，有的人会在这段时间里，做一些非常危险的事情。而对于男主角来说，他在这段时间里，做了一件非常危险的事情。一个人的世界，是由他的思想所构成的。一个人的思想，是由他的感情所构成的。一个人的感情，是由他的经验所构成的。一个人的经验，是由他的记忆所构成的。一个人的记忆，是由他的经验所构成的。假面骑士物语主角是一个假面骑士，他的能力是可以看到人们的欲望，但是他不会主动去揭露这些欲望，而是会在他的脑海中，看到一个个的梦境，这些梦境都是人们的欲望的具象化，而他的工作，就是帮助这些人去实现他们的欲望。他的第一个任务，是帮助一个女孩子去实现她的欲望，这个女孩子的欲望是和他的一样，也就是想要看到别人的欲望，但是这个女孩子的欲望是被一个恶魔所控制的，这个恶魔是一个蛇，他会用自己的魔力，让这个女孩子的欲望变成现实，但是这个女孩子不知道，这个恶魔会让她的欲望变得更加强烈，最后她会被这个欲望所控制，而她的欲望，就是要看到别人的欲望。主角在帮助这个女孩子的时候，发现了这个恶魔的阴谋，他和这个恶魔进行了一场激烈的战斗，最后，主角战胜了这个恶魔，但是他也失去了自己的能力，他不能再看到别人的欲望，而他也不再需要看到别人的欲望，因为他已经知道了，人们的欲望，就是要看到别人的欲望。这个故事的结局，是主角和这个女孩子在……ねこ物语主角是一个中年男子，他的妻子是个妖精，他们有一个女儿，也是个妖精，但是他们的女儿并不是主角的亲生女儿，而是主角在一个夏天的夜晚在路边捡到的。主角的妻子是一个非常出色的妖精，她把自己的能力传授给了主角，主角于是也变成了一个妖精，他们一家人就这么过着非常幸福的生活。直到有一天，主角的妻子得知了一个非常不好的消息：她的父亲要来拜访他们。她的父亲是个非常严厉的人，他要求女儿必须要嫁给另一个妖精，而不是一个人类。主角的妻子不愿意和她的父亲见面，但是她也不想让主角受到牵连，于是她决定离开这个家庭，带着女儿去找一个地方住下来。主角的妻子离开以后，主角变得非常孤独，他开始怀疑自己的存在，他不知道自己还有什么意义，于是他开始变得懒惰，不愿意工作，不愿意出门，也不愿意和别人交流。他在家里养了一只猫，他把这只猫当作自己的女儿，他和这只猫相依为命，他觉得他们的孤独是一样的。有一天，主角的猫不小心从阳台上掉下去了……反乌托邦物语一个名叫阿尔塔斯的女孩，从小就被父母送到了一个名为「世界的尽头」的地方，那里是一个封闭的世界，里面有着和外面完全不同的一切，包括物理定律、生物进化、语言文字、经济体系、文化习俗等等，她也从来没有见过外面的世界，也不知道自己是从哪里来的，她只知道自己要在这里待到十八岁才能回到外面的世界。废案物语以下大概不能归类成好的故事、坏的故事和新的故事。取决于作者的功力，故事会呈现出完全不同的面貌。缺位主人公是一个没有感情的人。他在世界中寻找「感情」的线索，最终发现了一个叫做「恋爱」的东西。他知道「恋爱」是一种感情，但是他不知道「恋爱」是什么样的感情。于是他在世界中寻找「恋爱」的线索，最终发现了一个叫做「恋爱喜剧」的东西。逆位男主角是一个普通的中学生，但是他的父母是一对怪物夫妻，父亲是一只狼人，母亲是一只吸血鬼。母亲是一个非常温柔的女性，但是父亲却是一个非常粗鲁的人，他不仅是一个狼人，而且还是一个不折不扣的大叔控，他的最大的爱好就是在网上看小学生的照片、在街上找小女孩玩弄。这个设定非常的新奇，但是作者并没有过多的展开，而是把这个设定作为一个背景，接下来的故事其实和这个设定并没有太大的关系，这样的设定也并不会对故事的发展产生太大的影响，但是它却能够让读者对这个故事产生强烈的好奇心。错位主角是一个 16 岁的男生，他的家里有个 10 岁的妹妹，这个妹妹是他的同父异母妹妹，而且他们两个人的父亲都是个有钱人，所以他们两个人在同一个家里生活。这个设定其实是非常有趣的，因为在日本的法律里，如果父亲和母亲离婚，那么父亲的孩子和母亲的孩子，是不能够在一起生活的。顺位在这个世界里，人们的身体中都有一个魔法的核，这个核可以召唤出一个魔法使，魔法使会拥有一个独特的魔法，但是核的召唤与魔法使的召唤是两个不同的过程，核的召唤是在人的出生时完成的，而魔法使的召唤是在人的死亡时完成的。易位一个男主角，他的身体里有一个女生，而且是他的初恋女友。这个女生在他的身体里也有意识，可以看到男主角的一切，但是她不能控制男主角的身体，只能在男主角的脑海里说话，这个女生的名字叫做「女主角」。女主角是一个非常好看的女生，但是她有一个缺点，就是非常的懦弱，而且她的懦弱是一种「被动的懦弱」，她害怕被人讨厌，害怕被人嫌弃，害怕被人拒绝，害怕被人伤害，害怕被人背叛，害怕被人抛弃，害怕被人忽视，害怕被人轻视，害怕被人看不起……","categories":["Tech"]},{"title":"技术：Bangumi 用户悬浮面板","path":"/2023/Bangumi/","content":"2023 年 5 月精选集5&#x2F;1 - 5&#x2F;6非常好废萌Bangumi 动画评分统计Bangumi 用户悬浮面板（本文）用户悬浮面板幕后5&#x2F;7 - 5&#x2F;8Kirikiri2 乱码问题还是送我得了5&#x2F;11 - 5&#x2F;22归异乡记Python 爬虫&#x2F;数据分析简易教程Windows 更新禁用导致 MS Store 无法安装5&#x2F;25 - 5&#x2F;30SD WebUI xformers 和 torch 依赖问题归新乡记 用户悬浮面板是一个方便且强大的 Bangumi 组件，基于 @CureDovahkinn 的鼠标移到用户链接上时展示一个用户简介的悬浮框修改而来。在此对原作者表示衷心的感谢。 Bangumi 上的 发布帖 Github 上的仓库：mojimoon&#x2F;bangumi-script 安装 Greasy fork 版本 组件版 特性 新增数据统计、时间线等内容，条目也不仅限于动画 可以自定义显示内容 适用 Bangumi 自带的开&#x2F;关灯模式 UI 更统一更美观，主题变为粉蓝双色 可以在话题列表等更多场景下使用，同时避免误触 预览由于下列图表保存在 Github 仓库中，国内访问可能有问题。如果看不到图表，可以直接访问仓库。 预览浅色模式深色模式使用演示（v0.4.4） 更新日志v0.6: Timeline and Configurationv0.6.4 Fix: 现在时间线正确地紧凑显示 Fix: 修复了时间线和按钮垂直方向上排版不对称的问题 Change: border-radius 增加到 15px，和 Bangumi 本身的大框小框保持一致 Change: 小幅度重构代码，去除了不必要的 !important v0.6.3 Fix: 修复”平均分 10.00”导致的溢出问题 Fix: 修复过于靠右时面板仍在右侧生成的问题 v0.6.2 Fix: 现在不会因为时间线（首页和时间胶囊）中任意用户的链接触发 v0.6.1 Feat: 增加时间线 Feat: 可以设置显示内容，包括：时间线、统计、同步率、动画、游戏、书籍 Fix: 现在不会因为页面顶栏、评论区和右下角 dock 中用户自己的链接触发 Change: 消失延时 300ms-&gt;500ms，还有一系列 UI 美化 Full Changelog v0.5: Beautifyingv0.5.1 Fix: 修复了因为语法错误导致不透明的 background 被无效化，而 backdrop-filter 生效的问题。现在 backdrop-filter 能正确地生效 Fix: 修复了“我的好友”按钮在浅色模式下黑色的问题 Change: 进一步增强了灰色文字的对比度 Remove: 删除了同步率条的渐变 v0.5.0 Feat: 外框添加圆角和 backdrop-filter Fix: 解决悬浮在 at 和用户页时光机时元素溢出的问题 Change: 灰色文字在深浅模式下颜色不同以提升对比度 Full Changelog v0.4: Official Releasev0.4.4 上传到 Greasy fork，增加本地化信息，正式发布 v0.4.3 增加了使用演示 GIF 和预览图 Full Changelog Early Versionsv0.3 Feat: 粉蓝双色主题 Fix: 修复 UI 不对齐等问题 v0.2 Feat: 增加数据统计 Feat: 格式化动画数据的显示，总是显示全部 5 项信息 v0.1 Feat: 支持开&#x2F;关灯模式","categories":["Tech"]},{"title":"2023 年 5 月：离散","path":"/2023/202305/","content":"2023 年 5 月精选集5&#x2F;1 - 5&#x2F;6（本文）非常好废萌Bangumi 动画评分统计Bangumi 用户悬浮面板用户悬浮面板幕后5&#x2F;7 - 5&#x2F;8Kirikiri2 乱码问题还是送我得了5&#x2F;11 - 5&#x2F;22归异乡记Python 爬虫&#x2F;数据分析简易教程Windows 更新禁用导致 MS Store 无法安装5&#x2F;25 - 5&#x2F;30SD WebUI xformers 和 torch 依赖问题归新乡记 都看到这里了就麻烦点个 Star 吧！ 顺便一提，博客中的图片启用了 FancyBox，点击即可查看原图。 再顺便一提，博客启用了 Beaudar 评论系统，欢迎留言。（如果无法使用，请尝试更换浏览器。） 1234Scherzando Disarray[0] Accelerando Disorder[1] Fortepiano Dispersion[2] Staccato Da Capo[::-1] 2023 年 5 月 1 日，星期一华丽收场首先得给上个月的最终章收个尾。 嗯，我上个月想着，怎么样也能在月底之前再增补点内容，但是那句话实在是太酷了，后面继续写就有狗尾续貂之嫌，未免是有点缺乏幽默感了。所以，结果而言，非常成功的烂尾了。 不过，我还是想说，那句话真的很酷。 首先，本节的标题谓作 Terminology。 故事是不可能不完结的——对某些两年能水千把章的作者来说，那就不是完结是寸止了——我当然早就明白这个道理了。不过，现在有些东西却再次激发了我对故事能够继续的期待。更确切地说，不太具有教育意义的一个续章。考虑到受众的类型，作品一定是携带一定的目的性的，但是有的时候飞得太高了，收不回来怎么办呢？ 好吧，其实不需要列术语。这段话里面能够挖掘深义的关键词总共就 3 个，“教育意义”“目的性”“飞得太高”，它们自然也是互相关联的。 我们假定，公开的作品在创作时就已经是准备拿给别人看的。即使作者沉浸在自我的世界中，落笔时也明晰，作品并非只是为了自己而存在的。因此，作品一定是携带一定的目的性的，这个目的性源自作者，指向读者，或者说就是为了“受众”而存在的。 目的性可以是多样的，包括但不限于取悦读者、戏弄读者、教育读者，或者引发更加混杂的情感。我们一般说，“单纯地讲个故事”，那也是有目的性的，一般来说是以取悦读者为主，如果不是，看来故事还是有点教育意义的。此处的“故事”不等于“剧情”或者“叙述”，“故事”存在纯粹是因为文本存在，有必要用文本来引入场景，来描述人物，来展开情节，来表达情感。 与之相对的，一般意义上的“剧情”指的是（大量的）戏剧冲突，讲求的是让读者感受到强烈、递进的情感变化。 由是，“单纯讲故事”可以概括为低戏剧性的作品，但是并不是哪里都低。艺术是很复杂的，艺术鉴赏更是复杂，咬文嚼字就会犯一些小错误——场景、人物、情节和情感都是可以被戏剧化的，也就是说，它们都可以被用来讲故事。这样一来，我们就可以把“单纯讲故事”理解为“单纯讲情节”，而不是“单纯讲故事”——这个说法有点误导性，因为它会让人想到“单纯讲故事”是一种低级的艺术形式，而实际上，它只是一种艺术形式而已。 ——低剧情性，或者更直接的，“没有剧情”，这种说法没什么问题，但是这并不妨碍情节的铺陈，照样可以把场景、人物和情感展现好，而进一步地，能够创造的是一种“情感的空间”，能够承载一种密度并不低的“情感的变化”。 那么，为什么要强调受众呢？ 对于已经小有名望的作者来说，他们的受众群体是明确的，进一步地，作品的目的往往也是明确的，反映到作品本身来说，故事的“配置”——以“标签”或是“概要”描述的要素——有很多会在不同的作品中保持一致。尽管如此，情感和情节的变化仍然能够让读者感受到新鲜感；到我们今天讨论的这个故事上来，其本身配置也是迎合“单纯讲故事”的模式的，但是能够把剩下的要素都处理好，那就足够激发我作为读者的期待——叫做故事能够继续，也就是说，我能够在这个故事的世界里面继续感受到情感的变化，而不是说，我能够在这个故事的世界里面继续看到情节的变化。这个期待是很有意思的，因为它是一种“不确定性”，而不是“不确定性”——这个“不确定性”是指，我不知道作者会怎么写，而不是说，我不知道作者会不会写。这种“不确定性”是一种“期待”，而不是一种“担忧”。也就是说，我不会担心作者会不会写，我只会期待作者会怎么写。——我已经知道作者有创作的动机（会写）和创作的能力（能写），因此我不担心作者不写，也不担心作者写不好，只是期待作者会怎么写。 ——回到受众和目的性上来，这个故事的目的性是明确的，它是为了取悦某个特定读者群体而存在的，而这个读者群体的特点是，他们喜欢这种“单纯讲故事”的模式，他们喜欢在这种模式下感受情感的变化，而不是情节的变化。这种故事的缺陷在于，“情感的变化”是高度抽象的，而“情节的变化”则是高度具体的，因此，这种故事的受众群体是有限的，虽说有限，却足以给作者提供源源不断的创作动机，而作者的创作能力也足以创作出足够好的“情感的变化”，从而让这个故事的受众群体保持稳定。 对于还不太出名的作者，甚至是初次涉足这个领域的作者来说，个人往往携带一种强烈的倾向，而创作动机也就从此发源。当然，作者如果想的话，可以随时选择自己的方向、筛选自己的受众，变成另一种作者，但是可以肯定的是，作者并不能变成另一个特定的作者。个人情感与个人的目的性在早期塑造了创作目的性，而在后期限制了创作目的性。——这两者本来就是同一的，但是评论的语义却不同。这种限制并不是说，作者不能够创作出其他类型的作品，而是说，作者不能够创作出能够稳定受众的其他类型作品。——“类型作品”，这个词语的意义在于，它是一种“模式”，而不是一种“风格”。也就是说，它是一种“创作的方法”，而不是一种“创作的结果”。哪怕两个作品的风格完全不同，有时候你也可以断言，这是一个人写的，创作者携带的情感与展现出的目的性是一致的，这种一致性很容易因为外壳（风格）的变化而被忽略，但是它是存在的。 因此，低剧情性和高戏剧性，这种分类方法是不严格的。很多作品因为“剧情好”就被划分进了后者。我自然并不是觉得“剧情好”是什么问题，但是有很多作品就是因为这种外壳的变化影响了读者对内核的感受，换言之有很多读者将对外壳和内核的理解已经完全混淆了。作者一以贯之的是创作方法，而读者的感官更加适应相似的创作结果，受众也是根据这种创作结果来判断作者的目的性，从而形成了一个恶性循环。无论高剧情还是低剧情，都存在着海量套壳换皮的作品，无论作者是否相同，创作方法和目的性是否相同，读者感受到的都是同一种创作结果，这已经和外壳与内核都无关了。现在再来揭开它们的面具，场景是旧有的，人物是旧有的组合体，情节也是旧有的组合体，难道你指望他们要靠着不同的目的性创造不同的混杂情感？缺乏创造力的人，只能靠着创造力的人来制造，这是一个很简单的道理，但是这个道理在这个领域里却被忽略了。写故事不仅是“讲故事”，更是“讲故事的方法”，而这种方法是可以被学习的，但是学习的前提是，你要有自己的目的性，而不是盲目的模仿。你要有自己的目的性，才能够创造出自己的方法，而不是盲目的模仿。 由是，受众是非常重要的，作者如果不清楚受众，只能证明根本就没打算公开这部作品。创造力市场作为一个严重饱和的市场，作者的目的性是非常重要的，而这种目的性是由作者的情感和受众的需求共同决定的。经验不丰富的读者很容易被外壳迷惑，但是浅尝就能领会，因为作者的产出是有对象性和限制性的，读者也必须找到自己的位置，而不是哪里有人就往哪里凑。有的读者自认为能够感受到作者的目的性，但是却不知道自己的位置，这种读者往往会成为“狂热粉丝”，他们的目的性是“追星”，而不是“追作品”。 当然，这个假定并不太成立，但是在这种不太严格的语言和思辨环境下，我们没有必要去追究那些脱离常轨的个例。倘我欲将其奉为艺术，证明不同的出发点并不妨碍我作为读者来感受作者指向我的目的性。若是感受不到，则证明我不属于受众群体，那么也就不需要我来评价作品了。 飞得太高了，指一个原本“纯粹情节”的故事因为戏剧性增强，而增加了过多的教育意义。教育意义本身也没有错，但是因为故事原本的设计就是低剧情，高戏剧冲突必然集中在很小的一部分，这样就会导致 因为文本的信息量激增，而读者已经适应纯粹情节的低密度信息，导致读者无法理解个中道理 因为故事本身的设计框架，高戏剧冲突的段落不能很长，很容易潦草收场；或者作者意将与之相关的进一步讨论作为下一个场景的引入，这样也可能导致节奏的不连贯 因为有必要交代更多信息来强化感情爆发，如果这样做就可能导致剧情存在不自洽的情况（这还具体包括两种情况，一种是比较显然的，平行视角下，不同未来交代的过去相互矛盾，而解决方案也很简单，只要减少其他未来的交代就可以了；另一种平行视角下，不同未来交代的客观未来相互矛盾，如果要把被动、客观的事件当作下一个场景的楔子，就有必要考虑在其他的未来如何解决这个矛盾，而这个矛盾的解决方案往往是不解决或者自行解决，也就是缺乏必要的交代，这样就会导致剧情不自洽） 而如果不这样做，就可能导致铺垫不足，或者减少其他未来的交代从宏观来说也促发了铺垫不足 而可以看到，剧情节奏和故事结构处理不好，是一个更加宽泛且常见的问题，在任何故事载体上都能够呈现。 最后，继续在“地面上跑”意味着专注于本来就应该作为核心的“情感”，而不是“教育意义”。这可以说是一个“情感”和“教育意义”之间的权衡问题，而这个权衡问题在“飞得太高了”之后，就变得更加复杂了。因为“飞得太高了”之后，作者已经不再是一个“纯粹情节”的作者，而是一个“高戏剧冲突”的作者，这样就会导致作者在权衡“情感”和“教育意义”的时候，会更加倾向于“教育意义”，而这样的结果就是“飞得太高了”。作者可以，但不一定想去控制自己的作品，而这种控制往往是“教育意义”导向的，而不是“情感”导向的。这种情况下，作者的目的性就会变得模糊，而这种模糊的目的性，可以导致读者无法感受到作者的目的性，而这种情况下，读者就会成为“狂热粉丝”，而不是“追作品”。与之相对应的，作者在完成这个受到载体限制同时又受到故事本身的限制，不得不收笔时，作者仍然有着充足的创作动机（戏剧冲突提供的发展空间）和创作能力，却没有高到能够让人断言这种在相同的外壳下的故事是“有剧情的”，那就反而引发了更多的问题。至于这个故事继续下去，能不能有所突破，答案是，续篇的目的性和受众只能更明确，方向是不能变的，甚至成了束缚。所以本来是因为写的好而出彩，而获得更高的关注度，结局却是陷入了一个“飞得太高了”的怪圈，而这个怪圈的出口，就是“写得更好”。 我得说 Copilot 的 NLP 仍然有很大进步空间（废话——难道想拿 GPT-3 干四代吗？），但是最终结论是明晰的：因为收束是很重要的，而在这种环境下作者也很容易倾向于“教育意义”，这样反而会导致读者觉得不知所云。如果受众倾向于“情感”和“纯粹情节”（虽然说情节真的只是附带的，至少，默认如此），而作者在半途写出了不错的戏剧性，那可能反而会导致读者无法理解个中道理，觉得这些片断生涩割裂，而如果结尾还在强调这种教育意义，那就是“飞得太高了”，确实不如一直在“地面上跑”来得好——虽然，后者又谈何容易呢？ 对读者来说，这么长篇大论地分析作者的动机，那可能确实不太实用，但是我本来就是为了逃避艺术鉴赏而不得不鉴赏艺术来说服自己，缓释遗憾——自然，阅历越广泛，遗憾越丰富。我本来就不准备评判有些东西好或者不好，只是举手对讲师说一句“我有点想法……”，然后就在混乱无序和缺乏逻辑的论坛里制造低熵信息。当然，本来就不存在这样一个论坛，只要我说服自己，那就直接说就是了。 不过有一点是无可争议的： TL;DR如果作品卖的不是剧情，剧情太好只会是可持续性的竭泽而渔，长远而言对作者和读者都有负面影响。 Copilot 的完美算术教室昨天兴致偶发，开始统计 Bangumi 上的动画评分，到今天为止已经完成了所有的数据获取和宏观统计。 项目地址：mojimoon&#x2F;bangumi-anime-ranking 点进去能看到更详细的说明和更多统计结果。 都看到这里了就麻烦点个 Star 吧！ 这里不讲技术细节、代码实现。总之，大概思路是，先用爬虫一页一页地爬取排行榜，获取到每个条目的 ID，再访问 API 来下载 JSON 数据，之后的处理分析真没啥好说的。当然，更重要的是，看这节标题你也知道，从 README.md 到 stat.py，全都是 Copilot 在干苦工。 这是 Copilot 参与工作比例最高的一个项目，因为，pandas numpy matplotlib scipy 这几件套我是一个都不会用啊。 我高中的时候也做过这个工作，不过当时 我没有一点前端知识。当时是照着网上豆瓣 Top 250 爬虫的代码修修补补。（我已经不清楚具体是哪篇博客了，不过我建议是别查博客了，让 Copilot 帮你完成机械化的部分，不会有错的！）现在的我知道直接一个 BeautifulSoup 扔一个 CSS 选择器进去就能找到条目的 ID 了，但是当时怎么跑的，可能真是个奇迹吧。 我不会用 JSON API，也就是说，我获取条目的具体信息用的是爬条目的详情页来解析，直接后果就是速度慢太多了，最终应该是只爬了 240 个项目。 当时 Bangumi 的受限条目还是从排行榜上隐藏的。现在有排名的受限条目一样会出现在排行榜上，计算条目数量非常方便，看分页数就行。不过，受限条目的 API 自然还是用不了的。 好了，废话不多说，我们上统计结果。所有数据爬取于 2023 年 4 月 30 日，我写本文的时候已经更新了，但是显然差距是不大的。 项目 结果 排行榜条目总数 7673 排行榜受限条目数 1108 参与下述统计条目数 6565 总计评分人次 7,573,022 条目评分数的均值 1153.3 条目评分数的中位数 395 条目平均分的均值 6.6637 条目平均分的中位数 6.7071 用户评分的均值 7.1854 用户评分的中位数 7 用户评分的众数 7 由于下列图表保存在 Github 仓库中，国内访问可能有问题。如果看不到图表，可以直接访问仓库。 图表下列图表中的 ±n sigma 指的是百分位数等于标准正态分布 CDF(±n) 的值时对应的自变量值，而不是 mean±n×std。（我当然知道这样描述是错的，还是常见错误，但是以后改）条目平均分分布条目分数标准差分布条目评分数分布条目平均分和排名的关系所有用户评分与条目平均分分布的对比 当然这还不是全部，所以快给我点个 Star！ 另外，这只是第一部分，第二部分是对于排名算法的分析，我准备学习 Bangumi Research，呃，这里面的排名算法我怎么一个都没听说过？ 现在正在研读《Who’s #1?: The Science of Rating and Ranking》。 2023 年 5 月 2 日，星期二好的故事做了一个过于荒诞的梦，趁着我还笑得出来，辑录如下： 算了还是不写了，彻底缺乏逻辑的虚构已经超过了语言能够概括的范围。 好吧，我就直说吧，我之前也做过很多荒诞的梦，但是唯独今天的毫无理性可言，就好像是为了荒诞而荒诞一样。我现在有个小问题，为什么飞行员会需要买机票啊？还会因为买成了 1250 块的经济舱而被直接丢下啊？这不是荒诞，这是脑子进水了啊。 当然最荒诞的部分应该是高中生飞行员，不过这种设定应该属于是见惯不怪了。 坏的故事 在梦中的场景，我跟一群人围坐在一个圆桌旁，圆桌的中央是银河系中央的黑洞在外部探测器监测到内容的全息影像，一直到圆桌的转盘边缘处为止都是这个大黑洞的影响范围我夹了个菜，然后直接抛向转盘范围内，奇怪的是这片菜并没有像常规认知下落在桌上，而是开始浮空，并以一种不规律的轨迹在边缘不断盘旋，以各个方向转了很久之后，这片菜尽管还在盘旋，但它已经裂开成几片碎片——这些碎片相互的组合方式也不是常规认知中的一片一片，而是在三维空间中不可能实现地直接交叠，直到最后交叠到看不见为止我现在想了想，就需要确认个事，在接近黑洞的过程中，是否连同维度也受到了影响？越靠近黑洞中央，展开为宏观状态的维度越多？除此之外，我还有个更奇怪的猜想，黑洞的视界范围内并不是单纯像电影中那样全是能量的，而是类似行星那样有具体的物质分布——换句话说，黑洞附近并不是均匀的，也有“陆地”、“海洋”，只不过密度变得非常高罢了，这一点我也有点迷惑 2023 年 5 月 3 日，星期三新的故事今天的梦也很荒诞，但是至少有逻辑可言，而且还有点新意，所以我就写下来吧。 简单来说，有两个市因为人太少废除了部门（简称废部），然后是一段非常王道的故事，以一次尝试为契机，最终两市合并，成为了一个新的市，广受好评。 好吧，故事概要还是太无聊了，我们还是讨论一下买四两还是半斤肉吧。 从不知道几重梦境中醒来之时，我似乎突然下定决心，要做一款名为“我的暑假”的放置游戏，游戏中主角最初的目标只是“暑假找点事情做”，但是随着游戏的进行，主角会逐渐发现自己的潜力，最终成为一个“改变世界”的人。——或者说，哪怕以我稚嫩的文笔、贫瘠的想象，也要写出一个“改变世界”的故事。 这款游戏还附带许多无障碍功能，都是为了元游戏体验而实现的。比如说，有一个功能可以加粗显示主视角人称代词。这是一个很奇怪的说法，但是主视角并不等价于主角，而是指在游戏中，玩家所扮演的角色。这个角色并不一定是主角，但是在游戏中，玩家的视角一定是主视角。 代词会在“我”“你”“他”之间切换，而且会在游戏中的不同阶段有不同的含义。比如说，在游戏的最初阶段，玩家扮演的角色是一个普通的高中生，这时候“我”指的就是这个高中生。但是随着游戏的进行，这个高中生会逐渐发现自己的潜力，最终成为一个“改变世界”的人。这时候，“我”指的就是这个“改变世界”的人，而不是高中生。 ——嗯，显然 Copilot 还没有理解我的言外之意。除了不同章节会使用不同人称叙述，同一章节也会切换人称，用“我”和“你”分别指代玩家所扮演的角色和玩家自己，或者同样用“你”来指代两个不同的“你”。除此之外，有时还会省略人称，这时候加粗显示就不起作用。玩家可以调整为下划线显示，这样就会在原来省略的地方加入一个空白字符，但是代价是下划线并不如加粗醒目，这在视觉设计上也是可以利用的。 还有一些你永远无法在任何一款游戏中见到的很多功能——因为我觉得不太有人会喜欢几十页的游戏内设置。比如说，深色&#x2F;浅色模式软切换，BGM独立设置淡入淡出，微软雅黑巨型文本框，这些都是我在玩游戏的时候想到的，但是没有见过的功能。但是，这些功能都是为了更好的游戏体验而实现的，而不是为了炫技。 今天的梦境还是很有趣的，但是我还是觉得这个故事太王道了，所以我就写了一个更王道的故事。 结果而言，我觉得我还是不太适合写故事，但是我还是想写一些故事。 好的故事不好。 坏的故事不坏。（我能如此断言，因这并非我的创作） 新的故事不新。 这个故事就点到为止了。 2023 年 5 月 6 日，星期六脚本道，堂堂连载我已经 10 分钟没有炫耀我的脚本了。如果你还没有听说过，首先， 都看到这里了就麻烦点个 Star 吧！ 原来发布页的内容就写在这里，显得太杂乱了。所以把它独立成一篇文章了。 博客上的发布页：Bangumi：用户悬浮面板 项目地址：mojimoon&#x2F;bangumi-script 好吧，我当然知道，没有人想再看一遍我复制粘贴了多少遍的文字。 接下来分享点君の知らない物語花絮吧。 CSS_is_awesome.min.js首先，我的前端水平非常糟糕。好吧，无论是哪一门编程语言，我在语言层面上的掌握都非常有限，现在想起来以前在 Leetcode 上填“精通 C++”真是贻笑大方了。 几天前因为考试周闲得发慌，学了学 React.js，做了 react.dev 官方教程上的两个入门项目。顺便也是我第一次接触 JSX，给我带来了第一次冲击。我一边查着文档思考怎么语法全是错的，一边得出结论，算是学了一门全新的语言。 然后因为还是太闲了，就考虑整点爬虫玩。由于我对世界与互联网的认知有限，不知道有什么有趣的数据集可以爬，就想到了 Bangumi 和 Codeforces。但是后者之前也做过相关项目：mojimoon&#x2F;Codeforces-Rating-System，新的起始 Rating 制度又让分析 Elo Rating 的意义大打折扣，所以就选择了前者。 然后就是上文 5 月 1 日提到的统计结果。确实很有意思，但是还不够，我还想整排名算法。我这时候一直惦记着某科学的动画排名，那肯定得点进去看看最新最热排名啊。 再然后，就是 5 月 3 日再次加入 Bangumi，刷着茶话会刷到凌晨三点，九点醒来继续水评分与排名讨论会 水到中午。这时候我在想，在这人生地不熟的社区——活跃的老面孔姑且是能刷到几个——快速查成分是很有必要的。但是我又没有数据库，能整点啥呢？ 5 月 4 日，我给出的答案是史诗级烂活，在讨论、日志和条目页显示用户收藏和评分统计数据。没有任何技术含量，就简单用 .getElementsByClassName() 读一下用户页的 HTML，然后在原页面显示需要的数据，没了。因为请求频率太高，会引发 503 错误，所以我加了 1 秒的延迟并做了 SessionStorage 缓存，还是无法避免 503。不到 100 行的源码，唯一用到样式的地方是保持灰字颜色与字号和原页面一致。 结果而言，确实很失败。只有两条评论。“这么有用的功能居然没人写？”——当我满怀希望地点击发送按钮时，虽然没写下来，肯定是这样想的。 不过，评论区推荐我去做新版的鼠标移到用户链接上时展示一个用户简介的悬浮框。这确实是很有建设性的建议。——结果而言，就有了今天这个插件。 初览源码：原版组件使用了 jQuery 和 Promise，这不巧了嘛，我都不会。 v0.1 | 深色模式：在关灯模式下，原版组件仍然以浅色模式呈现，作为 Dark Reader 重度依赖患者（Dark Reader 识别到网站深色模式而未启用。不过如果网站浅色启用 Dark Reader，组件能正确显示）这当然是得第一个改的。于是我学到了 CSS 变量——这玩意之前在 murasaki 和 Stellar 主题的深色模式配置文章中都有读到过，实际用起来确实是叫一个方便。 v0.2 | 统计数据：没错，我注册就是为了整这个。这个功能的最大难点就是把需要的信息提取出来。——用到了 正则、regExp.exec()、Array.from()、map(=&gt;)，我还是不会，但是由于我和 Copilot 都能参考原作者的代码，总是能写出来的。一开始 Copilot 没法正确理解我的需求，但是调试调试总能改对的。显示信息本身是非常简单的，哪怕我不知道 JSX 函数外面一大堆圆括号方括号花括号的语法，往原来的函数体里面加东西就行了！ v0.3 | UI 美化：原组件的 UI 其实存在一些没对齐、不对称的问题，这个版本就水了一下，顺便把主题从粉色改成粉蓝双色相间。 v0.4.4 | 正式发布：这个版本没改啥东西，就制作了预览图和 GIF（用 Screen2gif 做的）。顺便一提，文盲如我，把放图片素材的文件夹 assets/ 误拼成了 assests/。——不过，正式发布也确实值得改个版本号；也巧，原组件停留在了 v0.3，我就从 v0.4 开始了。——这次发布，收到了相当热烈的反馈，评论区非常热情地提供了美化 UI、增加时间线功能等建议，外加很多言语上的支持。我确实得向你们表示由衷感谢。 v0.5.1 | UI 美化：又是一个小版本，因为我整个白天都在写脚本，在学校外面一边被蚊子骚扰一边吃麦当劳打 8 折的巨无霸套餐，一边想着得赶紧关网去复习期末最后一门了。——我从来没觉得巨无霸这么难吃，不过尺寸上来说姑且合格。 v0.6.4 | 最新最热：这是目前改动最大、我最满意的版本。新增内容实在太多，建议点击链接获取详情。最主要的，当然是用户可以自行配置显示哪些部分。我本来想写个下拉框，但是 &lt;select&gt; 的问题是需要按 Ctrl 复选，可能对一些设备不是很友好。所以最后只能写个弹窗，用 &lt;input type=&quot;checkbox&quot;&gt; 实现——我不会写弹窗，因此我只是写了个 position: fixed、在页面正中间、z-index 比原面板还要高的面板。如果把背景虚化（提高透明度）看起来会很酷，但是我不会写。我还希望能够在修改设置之后立即刷新，我也不知道怎么重新渲染。但是因为弹窗独立于原面板，所以实际上修改设置肯定会导致原面板消失，这样就手工重渲染了。这个版本用到了 localStorage 和位状态以保存选项。位状态这个想法大概是从反物质维度的现实升级里面学到的（用 1, 2, 4, ..., 2 ** 24 分别表示 25 个升级，用部分元素和表示哪些升级已购买&#x2F;解锁）——或者说，它的诨名叫做状态压缩，我可终于是正儿八经用上一次了。 未来计划：不知道。修 bug、优化 UI、优化代码，但是还有什么新东西呢？可能是有的，比如说可以获取用户最近发表的主题，比如说拓展或者独立出条目悬浮框的功能，大概还是有点事可做的。 顺便一提，Bangumi 的组件审核速度大概和另一个 B 站一样神奇。v0.6.3 一下午都在审核中，然后因为更新 v0.6.4 撤下，再更新到 v0.6.4 居然秒过了。","categories":["Journal"]},{"title":"2023 年 4 月：脱轨","path":"/2023/202304/","content":"見せられないのだ レールを狂わせる 呃，我当然知道这行字和表情包是对不上的，但是有谁会不喜欢免费素材毛豆精呢。 那么回到标题。人类有三大脱轨：正轨、常轨、反轨铁轨。 2023 年 4 月 11 日，星期二给你机会你不中用啊又好久好久没更新博客了，因为我的生活实在是太充实了（大概）。 好吧，总不能整天这样顾左右而言它，是时候打开天窗说亮话了。 很快就要期末考了——一年三次期末考，这就是三学期制给我的自信。期末考倒不是最扰人的，各种项目都会在期末作结，需要大量的小组讨论和汇报，让我本不富裕的时间和精神动力更加匮乏。 说起时间，我其实一直觉得自己的空闲时间太多了，但是“空闲时间”这个概念是没法在一年或者人生中的不同阶段平均分配的。就好似学校的门禁和楼梯一样，总有什么时候是拥挤的，什么时候是空闲的。——这也就是为什么有必要设置更多的门禁和楼梯，哪怕大部分时间都是空闲的，高峰期也不够用。 不过，人可无法像这样操纵时间。我可以在数日或者数周的小窗口之内选择何时集中何时荒度，但是从长远来看，任务和目标必然要完成，而剩余的时间则是尽数浪费（虽然还包括了休息）。 我的困惑与矛盾在于，我有很多空闲时间浪费了；浪费是因为我不想做什么指定的任务，但是更重要的是，我想做点更有意义的事情——独创项目——却不能。 作为一个想象力与技术力都严重受制的人，“趣味性”和“可行性”似乎永远在天平的两端。在想象、创造、反思的循环中，我逐渐学会了放弃，逐渐向吃着泡面刷视频的荒度投降。 可以说，我如果想要安定下来，学习和利用工具——创作软件和 AI 都算——我可以完成自己的项目，虽然未必能达成想象中的效果。但是，我仍然在质疑自己，我有没有时间去做，我能不能做，我的想象是否全然虚幻。 我有时间吗？我有。我有暑假。我有长达四个月的暑假——我当然可以下定决心。然则，四个月待在家里，似乎显得太逼仄荒诞——而我想要这样否定自己时，却深知躺床上刷手机更是无趣。 我能做到吗？我能。教程是干什么用的？千把小时的经验，百来小时的准备，凝聚成十数小时的视频，能没用吗？怠惰、傲慢、自负，让我不想去学。但是，倘若学进去了，自然是能做到的。 我的想象可行吗？可行。成天看创作者的视频也算是有一点好处，我能抛出一些他们之间的“共识”，然后拟作他们之中的一员，侃侃而谈。“点子”这玩意不新鲜——出于对自己想象力的合理认知，我可以断言，我能想到的，别人都能想到。但是，把这些点子串联起来，还是存在独创性的——而且可行。可行？当然可行，有点常轨脱离了，但是我们有工具，我们有技术，我们有时间。 “我们”——我们？我们，我能够建立团队吗？建立团队是为了什么？——从纸面意思上来理解，建立自己的团队是为了完成自己的项目。如果加入别人的团队就得帮别人做事了，虽然这并不一定不是我想要的——如果做的项目恰好是我感兴趣的，我又付出了很多，那么我也会很开心。这是否关键？我不知道，但是上面的回答实质上是在逃避问题。关键在于，我能否联络到道同志合的人，建立或者加入团队。当然，起步练手的项目，没有团队也是可以的，不过总有一天我得接受，没有团队我终将一事无成。 那么，最后的问题是，我什么时候开工？ 这可能是最重要的问题。答案是，我不知道。我不知道，我不知道，我不知道。 我写这篇博客时的心境是了然的，我觉得自己做不到。我暑假还是会瘫软在家；我这样设想，这样认同，这样感叹。 至于这是否是事实，我都这样想了，你还有说服我的必要吗？或者，正因为我这样想了，你才有说服我的必要？ 我不知道，我不知道，我不知道。我甚至不知道“你”是谁——或者，“你”是否存在（真的有人远道而来品读我的牢骚吗？）——但是，我有必要和这样一个虚构的“你”对话，因为我深觉有必要抒发这种没有任何对象没有任何来源的情绪、幻想、症候群。 那么答案到底是什么？其实我很清楚。我甚至觉得这样合乎事理，我几乎就要接受了，但是我仍然在犹豫，在反抗。我能接受吗？存在即合理，我能接受，或者说，如果这是现实，我不得不接受。但是在这一切发生之前，我似乎还有那么一点机会——其实每个人都有机会。我能够把握住吗？ 温斯顿·史密斯这篇文章非常负能量。写完之后，整里了一下前几个月的日志，现在日志内条目按照时间顺序排列。工作量是真不小啊。顺便一提，一二三月都是“负能量”月。 其实上面还有一个遗留问题，我为什么想要做有意义的事情。直白地说，我有点嫉恨同龄人都这么有出息，我也想有点能够吹嘘的、独创的东西。当然这是非常模糊的概括，以后我们有时间再聊。顺便做个默神新视频 reaction。 灵感满溢的甜蜜创想总得说点比较高兴的事情。 最近（其实只是从 4 月 9 日开始）在玩 はみだしクリエイティブ（常轨脱离creative）。 这是一部非常非常规的常规萌系作品，最大的特色应该说是乐死我了，一个场景能存三个名场面让我觉得自己的笑点是不是有点低。——不过，哪怕我都这么奢靡了，1200 个存档位还是用不完的。 （顺便一提，存档有 100 页，没有键入页码的功能，不过一次能翻 1 页或者 10 页。我个人的做法是第 100 页存共通线选择支，1-20 页存共通线，从 21 页开始，每 10 页存一条支线。由于一次翻 10 页的情况下，91-100 页都会跳转到第 1 页，而 1-10 页都会跳转到第 100 页，所以无论从 100 页往后翻还是从任何位置去找 100 页都很方便。） 当然，我连一条线都没推完呢，还没法做进一步评论。 嗯，既然如此说，“第一步”评论还是可以的。顺便一提，现在我还真不知道个人线有什么大活，但与此同时又有很多东西不能剧透。所以如果想要体验的话还是要自己去玩。 梗密度很高，有些好玩的 neta，而且大量出现“漫画或者游戏里面”“二次元和三次元”这样的 meta 要素（不过也只是 meta 要素而已）。在没有打破第四面墙的虚构作品中，角色不知道自己处于虚构和二次元，但是玩家是知情的；而角色的工作生活又与二次元紧密关切。到这一步，这些设定的意义大概在于作者真的很懂宅文化和宅男，哦，虽然他们自然是资深二次元工作者。 但是，这是关于二次元工作者的故事，在这个层面上，讽刺已然饱和。创作者的生活&#x2F;生存状态和创作是矛盾的。他们的生活本身是高度虚构的、理想主义的，创作也是，但是仍然存在着不可避免的矛盾。“虚构”和“虚构”之间的矛盾，却成为“现实”，至少是现实的映射。而矛盾的展开，除了提供搞笑桥段和推动剧情以外，还有很多遗留在现实中的问题是无法解决的。虽然我一直把整个故事当作虚构来看，但是片断的现实确实让我感到痛苦。 「我已然可以隐约看见年过半百，下班回家一个人孤零零吃拉面，玩手机的自己了。」 这是虚构吗？这是现实吗？我不知道，但是我知道，这是我不想看到的。这是我的未来吗？有可能。很合理。但是，如果我现在就接受，那确实显得有些悲哀了。不管我知道与否，我只要还打算活这么多年，到时候就知道了。但是，在它成为现实之前，我还有机会——这就是我今天早上滔滔不绝的牢骚的来源。 这还只是某段对话中的一句话，而整段有涉剧透，我没法且怠于搬上来。大致讨论的则是，我们从“家”里长大，早晚有一天要离开“家”。“家”这个符号，可能是亲人，可能是房子，可能是故乡。不过有一点是可以肯定的，没钱是独立不了的；要自己挣钱，还要有自己的生活。——虽然说，其实赖在家里，并不是活不下去，而且自然是有人这样生活&#x2F;生存的。但是，独立不同于“正轨生活方式”，从任何方向上来看，都不会是错误的、脱轨的。不过，如果你能够走向正轨，为什么还要思考这个问题呢？因为你的目的已经变成了“独立”，而不是“生存”。 我想起来之前有一个游戏片断的视频标题是“只有我是小丑”，但是实际上男主显然不是小丑也不是废柴。至于小丑是谁……呃，大概是没有能力也没有行动力的人。 好吧，说了这么多，还是继续推吧，我想整点乐的，期待一下。期待一下我破防之后再来写的评论。 请在小组研讨室微笑幸或者不幸，破防了。而且不是因为游戏，是生活，哦或者说叫做学习。叫工作也行。我好久没有体验到这么强烈的怒火了，不过可惜没有烧起来。 2023 年 4 月 12 日，星期三G.P.T.3. 就是它吗？呃呃呃呃呃，早上好。年轻就是好，倒头就睡！ 顺便一提，我今天更新插件的时候才知道 Copilot 是基于 Codex 的，而这又是一个 GPT-3 的后继。根据官方的描述，”It is as good at writing natural language as it is at writing code”。虽然实际上是用来写代码注释的，但是折磨语言类 AI 是不得不品尝的一部分——让它对我的博客产生即时“反应” 也是一种体验。 Copilot，或者说 GPT 是非常正能量的，面对昨天那大段牢骚反复地想要让我的生活或者意识回到正轨。不过很不幸的是，我和很多人一样不走正轨而是常规，或者是在正轨边缘游荡，总之离步入铁轨还远所以没有什么问题。——Copilot 我求你放弃反抗吧。但是我还是会继续欣赏你使劲圆场的样子。 哦对了，有必要公开一下它的感想： ——我不知道这是不是一种“正常”的生活方式，但是我知道，我不想这样。 我不想这样，——我不想这样。这是 Copilot 的回复。我不知道这是不是一种“正常”的生活方式，但是我知道，我不想这样。 看过几个视频就算铁路迷作为诡辩中级高手，有必要指出，正轨和常轨显然不是一个东西。正轨是指“正常的生活方式”，而常轨是指“常规的生活方式”。——我不知道这是不是一种“正常”的生活方式，但是我知道，我不想这样。 呃，这就不太对了。正轨指的是“正统”不是“正常”。虽然我并不准备查辞典给这几个词下定义，但是我觉得这样的区分是必要的。因为，正常是指“符合常理的”，而正统是指“符合正统的”。——我不知道这是不是一种“正常”的生活方式，但是我知道，我不想这样。 我知道我是一个非常非常规的常规的人，但是不管好的方面还是坏的方面都远远不够非常——直到我忘了这个轨道学说之前，这份恩情是不会忘记的。 不太实用的实用主义教学昨天试验了一下 Steam link 串流到手机。 很不幸的是，宿舍高达 2MB&#x2F;s 的网速对画质和延迟的影响都很显著，所以我只能改用流量； 另外，串流之后电脑声音自动设置成最大、音频设备设置为 Steam Streaming Speaker 来让手机播放音频。 这带来了一点小小的问题，就是我没法插 3.5 mm 耳机。呃，只能外放了，就非常搞笑，让在卫生间的我第一次感受到什么是设备的物理限制。 那我缺的睡眠我自己补啊呃呃呃呃呃，中午好。事实证明，像男主一样“饱睡”十分钟，或者说“长眠”十分钟就精力充沛，是完全可能的。但是如果早上五点下班，那还是有点难。 2023 年 4 月 15 日，星期六残酷天使的行动纲领不幸的是，炸档了。这是很残酷的事实，但是重新开始之后又觉得不是那么不可挽回。 之前的存档是白存了，营养上确实是少了一块。虽如此说，存档本就没打算在后面用到，大概只是……为了在玩的同时……和自己分享快乐吧。毕竟这玩意的截图也不好发给别人看啊。 好吧。这是很牵强的说法。实际上我以前想过，有些快乐或者成就感实在是没法用一张图记录下来的，我干脆就不记录了。这是基于服务器或者硬盘的记忆比我的记忆更长久的假设，很可惜，有的时候不能这么信赖它们。作为炸档中级高手，有的时候想一拳打爆 %AppData%，再一拳打爆 LocalStorage，再一拳打爆 IndexedDB，再一拳打爆 Cookie，再一拳打爆……你懂的。 不过到了今天，我的手机里却储存着大量的照片与截图。大部分照片中的景致都很难给我留下深刻印象，而我的手机便宜相机色彩更是悲剧（不过我不打算怪它，因为前者才是根本原因）。而说到截图，大部分在发送一两次之后就完成了其使命。我确实不知道留着这些玩意半年一年到底有什么用，反正等到五年十年也很难有重看的欲望。 不过，好在这些照片不怎么占用存储空间，我可能根本就懒得删掉它们。——我从小学开始就嗜好“捡垃圾”，所以这些“万一那天有用”的东西我都会留着。——顺便一提，因为乱删出大问题，去年就有过一次。不过说实话，也是一些截图，和今天丢失的“记忆”，哪个更重要，答案应该是显然的：都不重要。 我笑得很有节奏所以算广义节奏游戏说回はみだし，到今天为止推完了妃爱线、华乃线、单身线，正在品鉴明日海线。也就花了一周之间的不知道多少个小时。不过，我觉得这个游戏的节奏还是很好的，而且我也不打算一下子把它推完。毕竟，我也不是那种“一口气”把一部动画看完的人，而且我也不是那种“一口气”把一部游戏玩完的人。 不管怎么讲，这部游戏的节奏确实令人舒适。然而，能够察觉到，个人线还是太短了。共通线 56 章，个人线只有二十余章。紧密关联的还有另一个问题，就是个人线开头整大活，呃，因为我一开始就玩华乃线，所以后面来看倒是没那么有冲击力了。 闲话就讲到这里。等我全线推完了，另外写一篇文章随便聊聊——不是评测游戏，我没这个本事也没这个时间，而且我也不想把这个游戏当成“作品”来评价。就，随便谈谈人生，谈谈虚构，谈谈我自己。 至于存档分页——共通线12页，华乃线10页，妃爱线11页。妃爱线的含金量还是太高了，吓我一跳我释放忍法。 最后，如果没去看おまけ我只能说是血亏。这玩意是有剧情的，还能补充逆天能量！哦，可惜存不了档——不过对炸档之后的我来说已经无所谓了。 太阳照常西落，但是已过半夜最近天气开始急遽变热，一周之间就从盖冬被变成没有空调和风扇就活不下去了。 顺便，锐评国际服麦当劳新品（存疑）将军汉堡：除了包装纸以外一无是处，和猪柳蛋汉堡一样不配称为汉堡，但是价格被后者爆杀。 2023 年 4 月 16 日，星期日itertools.permutations可能是受到小虎队解密卡的启发，我想到了这样一道题目： 16!×16 约等于 3.3e14，你可以试着把这么多数字存下来。 很不幸的是，这个博客主题不支持 LaTeX。以上截图使用 Typora 的 Latex 主题制作。 更正：Stellar 主题支持 MathJax 或 KaTeX，可以参看_config.yml 进行配置。但是因为个人不太用得到，我暂时不打算开启。 触犯天条的 16GB 内存荣耀 Magicbook 14 2023 发布了。和去年一样，有一个 6499 元的独显版本，关键参数对比如下： 项目 2022 2023 CPU i5-12500H i5-13500H GPU RTX 2050 RTX 3050 内存 16GB 16GB 存储 512GB 1TB 屏幕 2160×1440@60Hz 2520×1680@120Hz 官网价 6499 6499 呃，作为 2050 大怨种，显卡的升级虽然不太跟得上时代，但还是“进步显著”的。 同样“进步显著”的是屏幕，90Hz 终于是从高端产品 (Magicbook V) 下放了，五月份回来确认了一下，6499 版本是 120Hz，那确实挺不错的。 分辨率也是在 3:2 的道路上越走越远……我个人还是比较喜欢 3:2 的，看 excel 的时候确实方便。当然，都 2023 年了还原生 1280×720 分辨率的游戏再怎么救也救不回来。 强扭的瓜很甜！本月第二次大更：给这四个月的所有博客每一小节都加上了 3 级标题。标题是随便取的，有一些源于游戏、小说，还有一些只能归类为“烂梗”。 不要问我有什么特殊含义。有的时候正文部分是在顾左右而言它，加上这个标题我总算能把想说的表达清楚了。 这些标题的字数最多为 17 个汉字，再多就要换行了。经过测试，无论手机还是电脑都能正常显示。 既然都做到这份上了，我干脆弃用原来的时间线，日期全部改成 2 级标题。看着是挺清爽的。 顺便一提，只是把源码中的 &#123;% timeline %&#125; 用 &lt;!-- --&gt; 注释掉会导致正文无法显示。所以只能删了。 再顺便一提，去掉了同一天多个条目之间的间隔线，因为 3 级标题的样式是上方留有空白的；然后保留了一部分，用于区分跨度较大的不同话题。 CSS_is_awesome.min.js然后是第三次大更：我今天用 Via 切换浅色&#x2F;深色模式才知道，这个主题有跟随浏览器切换模式的功能。所以，深色文本标记现在改成了蓝色。 这么说也奇怪，深色文本标记在浅色模式下太刺眼，深色模式下看不清。 顺便一提，字体改成了 Noto Serif SC，更加柔和，日文的显示效果也好很多。而且能直接从官方教程 抄到配置。 苹果派 ※图片仅供参考早上吃了公仔面(gung1 zai2 min6)，那中午就不怎么吃得下了。去麦当劳点了麦香鸡和蘋果批(ping4 gwo2 pai1)，太饱了，实在是失策；这个 $23.5 的组合含金量比 $28 的猪柳蛋汉堡套餐高太多了。（猪柳蛋汉堡实在是小得可怜，吃这玩意纯粹是奔着薯条可乐去的）——那么话说回来大概也没必要怪 $36 的将军汉堡套餐了。它上市之前，第二便宜的套餐是 $41 的麦香鱼，那实在有点超出我的消费水平了。 生活中买不起的除了汉堡还有很多。倒也不是说买不起，我无论钞票还是储蓄卡余额都有很多，根深蒂固的心理却让高价格确实很难激发我的购买欲望。不过有一点是可以确定的，这儿网购快递实在是不发达，虽然我应该没有社恐到没法到店自取或者在地铁站交易，我也对逛街跑腿没什么意见，但麻烦确实是麻烦。 买不起或者不想买的还有很多软件、游戏，这些仅供学习交流使用的巨无霸级软件存在于我 512GB 的可怜 SSD 上，不想打开也不想删除。——现在还有约 80GB 的剩余空间，今年暑假不得不去买移动硬盘了。 尽管如此，麦当劳已经是校园外最便宜的快餐店了。考虑到每天吃汉堡也不是非常健康，总是得补充更多蔬菜的，那么离开校园之后，这饮食成本只会进一步上升。为了准备靠工作养活自己，必须得多找点办法，比如说，学习一下如何做饭。不然，我就只能一辈子吃麦当劳了。——因为我从高中到大学都经常吃番茄炒蛋，知道蔬菜成本一直在攀升；不过自己买菜的话姑且是可以在超商找到便宜货的。 2023 年 4 月 17 日，星期一从流程上来说有什么不对的吗本来想玩游戏补点营养，但有些游戏的流程实在是太短了。嗯，当然，看到 4.5GB 的总空间，我觉得也不能抱有太高的期望（はみだし可是整整 10GB 啊）。 当然，今天要讨论的不是这个，算是对之前提到的元游戏的一点补充： 在我的设想中，这款元游戏有相当一部分的选择是通过调整设置或者与UI交互实现的。当然，常规的选择支也是要有的——只是形式上常规。 下面列举了几个可能比较典型的交互实例： 玩家在设置中关闭某个角色的语音&#x2F;将其文字的颜色设置为透明，使其说过的话变为空白 玩家在多个子窗口同时操作多个角色，其行为会相互影响，但是永远无法将屏幕旋转 45° 以查看一张完整的 CG，因为不同角色的视角存在镜像关系 玩家通过反编译手段破解游戏程序，发现其中还隐藏另一个 PE 文件，这个文件使用另一个游戏引擎制作，需要用内存补丁破解软电池 玩家将游戏安装在 D 盘，由于里游戏含有恶意程序，玩家不得不重装系统，游戏存档读取的部分数据来自 %AppData% 而被清空，另一部分来自游戏根目录 /savedata 而被保留 好吧，多少有点异想天开了，但是从流程上来说，这些都是可以实现的。至于是否有必要，那就要看玩家的兴趣了。 无脸男主会梦见自闭症玩家吗回到这款 4.5GB 的游戏，我们一上来就观察到男主没有正脸。 这应该是一个永远值得说道的问题，至少也已经被讨论了二三十年了。 首先我们应该清楚，主角的脸应该不至于永远在屏幕外面，总有机会登场的。很多作品处理这个问题也相当明确，大概可以分成这么几类： 男主有立绘 男主没有立绘，但正脸出现在 CG 中 男主没有正脸，CG 中能看到没有五官的脸 男主没有正脸，CG 有意避免面部特写 这种诨名作“杂学”的信息放哪里都不合适，如果粘贴到维基百科上应该会给我打个 原创研究。但是，好吧，真的是我随便研究的，我的阅历也不深，所以如果有问题的话最好当作没看到吧。——说起来，我是真不知道这博客是否有我本人以外的哪怕一个访客，这也是为啥没有启用评论区——呃，我猜，是真的没有人看吧。 再回到正脸，我们都知道，这玩意讲究的是一个代入感。——对嘛？根本没人讲究啊。你这是哪门子模拟游戏啊，恐怖模拟游戏吗？我为啥一定要假装自己是主人公才能乐在其中呢；吐槽主人公的言行取乐应该是家常便饭，每到名场面我都恨不得有怒涛红字弹幕来帮我捧哏（注：译者个人感想就不用端上来了）。 如果游戏的分类叫“视觉小说”，那我倒不如说，要斋戒沐浴才能开玩的游戏尚且不如随手点开能看的小说代入感强。我也不是说代入感是什么问题，但是如果你想要营造这种氛围，那至少不应该播放让我鼓膜疼痛、不知道为什么随机停止随机开始，以及读了档之后就得从头开始的 BGM。——而且由于 Windows 极为蹩脚的音量调节，这耳机我摘也不是戴也不是，可能确实是受到了一点小小的硬件限制。 再回到正脸——都是第二次提及了，你看，像聊天一样随便絮叨，话题就很容易跑偏了。虽然生活中没有聊天对象，在 QQ 群这个没有楼层系统、信息密度又极高的场所，从一个楔子出发，一不小心就能同时展开大量话题。这样也是很有趣的，至少水群的时候不会睡着——但是我的手机上没装 QQ，所以没法熬夜水群，根本不用担心。这也能带来一定的问题，一旦引发骂战，很容易造成溅射伤害，不像贴吧，两位旗鼓相当的对手大战三十回合也不会有人来楼中楼插嘴。除非胜负已分，这时还是有破窗效应的。 和面具接吻会悸动吗再再再回到正脸，首先是今日份参考文献： 故而，一个独立于玩家之外的男主是毫无意义的，玩家自身就应该是游戏里的男主。所以更加不能画脸了。这也是无脸无性格男主GALGAME的通病。因为要让玩家&#x3D;男主，所以男主不能表现出很强的人设，所以在各种线路中自然是被女主角带着走，自然多少会产生冲突。在有些游戏中，玩家甚至会发现怎么这个男主在这条线中就龙傲天，在那条线中就缩卵宅。——为什么部分 gal game 的男主没有正脸？ - 知乎 这个回答避开了代入感的话题，认为伪装的第一人称和第三人称在服务游戏性质上都能起到同样的作用。但是至于玩家&#x3D;男主这个前设，我有必要放一张很有视觉冲击力的图： 官网上也用这个“占位符”头像 嗯，自闭症这个俗名还是不太友善，还是“孤独症”吧。这样我们就能开「ふたりぼっち」这个老得不能再老、都不知道有多少首同名曲的玩笑了。 今天洗澡的时候在想我真是不折不扣的自闭社恐了，万一哪天真能“中大奖”了，有人来强迫我开展社交，我会不会感恩戴德呢。答案应该是想得美。我实际上也参与不少宿舍级的活动和志愿服务，要问除了加分还有什么好处的话，应该说成功证明了我与人沟通的基本能力是没有问题的——但是谁都没有问题好嘛！——不过，这算不算是一种代入感呢。作者明明故意省略的部分，却被别有用心的读者大作文章，就好像有人永远能强调“玩家”在游戏中的参与性（比如说，玩家与主角的单向互动性），进而证明任何游戏都是元游戏一样。 在这种还算温柔的世界里，哪怕选择逃避现实，大概也不会过上充满恐惧的人生。这和我的人生还是不太一样的，我到现在活了约莫二十年，已经积累了太多的恐惧，哪怕没有人准备伤害我，我也没法结束这种不太严重的妄想症。当然，姑且是离黑暗的世界、黑暗的人生和黑暗的故事还有距离，这至少能让人活得稍微放松一些——除非，我的恐惧就是这些黑暗面，而且我一直祈祷自己没有了解过延伸阅读。 说人话：在这种萌系游戏里，坏结局至少不会让主角堕落成为一个杀人犯，而是让他变成一个自闭症患者。这样的话，我就不会有那么多的恐惧了。——对，又不对。这反而加深了我的恐惧，因为现实生活毕竟是更容易走向铁轨的，这样一说，黑暗面是肯定存在的。但是我正是对这些东西一点兴趣都没有，才来玩你这游戏的，结果却在图穷匕见的时候，觉得这个世界太黑暗了，哪怕一切都在我的选择操纵之中，我也没法以我最希望的姿态看到理固宜然的结局。 再说人话：最没必要选的地方偏偏是分支，最没选择的地方偏偏是顺理成章，那我又何必假装我能做到，我身能够消受这福？还是说，我正是因为做不到，才会在这里选择逃避现实呢？也许是吧，但是在这种地方却遇到了脑内的虚构与作品的虚构之间的矛盾，反而给我带来了更多精神内耗，这是否值得？是因为男主有能，反映出我的无能，还是说因为假装的我有能，反映出我的无能？这两个概念脱离、互斥，但其指向的矛盾却是一致且深刻的，令我难以理解，也难以接受。 2023 年 4 月 22 日，星期六瓶子罐子盒子桶子袋子首先是一些微不足道的博客更新： Course 分类重命名为 College。 文章永久链接的格式由 :title 改为 :year/:title，防止以后文章太多不便管理。 今天还阅读了 给 Stellar 主题增加切换浅&#x2F;深色模式按钮 的文章，嗯，有时间可以捣鼓一下。 然后是一些微不足道的近况汇报： 看了一集空中浩劫，然后就上头了。但是这还不够阻止我玩游戏： はみだしクリエイティブ 已经结束嘞！虽然由于在学校里不太伸展得开手脚，半数以上的场景都是直接 C 过去的，因此还远远没有结束。 如前所述，之后会专门写一篇文章谈论我的想法，以下只是随便、毫无章法地阐述一些感受。 首先，我真的好久没玩 Galgame 了，能遇到这样一部让我，呃，对，就是那个，感觉游戏很有意思，不是，就是感觉别的游戏已经没什么必要的，呃，非常重要的，四个字的，呃我忘了……不能忘记的游戏，情感强烈到语言无法阐述了（不用证明）。 没了。我刚才在搜资料，顺便花了两分钟时间向 Bing AI 请教了镰仓时代晚期的日本史。然后就忘了想说啥了，继续去看空中浩劫吧。 好吧，最后是一个小问题，Spotify 的每日推荐要么中文四个大字显示成☐☐☐☐，要么一行五个封面少了一个，要么推荐 1 都不知道丢哪儿了，大概全是不刷新导致的问题。 永恒的终结永恒这个字眼生来就是要被终结的。 这种定势应该不算是什么“契诃夫之枪”，因为“永恒”的定义就是“不会终结的”。但是无论虚构还是现实之中，“容器”就是用来打破的，“美好”就是用来破坏的，“永恒”就是用来终结的。 读者需要看到戏剧冲突，又总是希望发展在掌握之中的话，戏剧就只能是小打小闹了。小打小闹没什么不好——这也是事实。但是几乎没有故事会直接顺应这种思维，我能说我看过很多故事，最开始营造出了独特且吸引人的背景，到最后，要么眺望太远了，收不回来，要么凝视太近了，放不出去，要么就是一直在眺望，却没有凝视，最后就是眼睛瞎了，看不到了。 不过，既然扯到“容器”上面，我可没法及时把话题收回来。我们有很多种常见容器，包括但不限于瓶子罐子盒子桶子袋子。虽然这些名字取得很随意，不同种容器之间的区别很明显：软硬、开口方向、有无顶盖；共同特征也很明显，至少能装东西吧。 但是，这些容器的共同特征是什么呢？我想，这些容器都是用来装东西的，而不是用来装容器的。这是一个很重要的区别，因为这个区别决定了容器的使用方式，也决定了容器的使用目的。如果一个容器是用来装容器的，那么它就不是容器，而是一个容器的容器，或者说是一个容器的容器的容器，以此类推，直到无穷大。这样的容器，我们称之为“阿列夫-1容器”。 容器“盛放东西”，可以描述一种状态或者一个动作。常理而言指的是前者，却也要求容器能够与外界交互，能够被打开或者被关闭，能够被装入或者被取出。这种状态，我们称之为“容器-东西”状态。尽管世界上也存在着为了内容物不被取出而设计的容器，破坏容器本身却总是能“打开”容器，尽管未必是想要的结果。 回到这个定义，“门”是不是算一种容器呢？一则经典的寓言故事：用几尺栅栏围住自己，然后说自己在“外面”，这样门外的世界就是内部了。换言之，世界的联通性不影响把它划分为几个部分，更不必说单纯的“内外”了。“门”两侧也可以说是有“内外”之别的，而且大部分情况下内外是明确且不可违逆的。——这样思考就能发现问题，尽管内外存在，“门”充当的是容器的侧向顶盖，装东西的另有他物。 这下不得不遗憾离场了，我以为能得出显然的结论，却更快的把自己的妄断推翻了。虽然从逻辑上来说，无法将门与容器类比，但并不影响我对其的浪漫化。 永恒的终结 (高清重置版)再次回到正题，《永恒的终结》是一部精彩的科幻小说，我个人认为，当之无愧的是阿西莫夫的最高杰作。当然，今天讨论的不是这个，是我们作为读者欣赏故事这个过程的叙述性——哎，说人话，就是“我‘欣赏故事’的故事”。 上文提到，有人永远能强调“玩家”在游戏中的参与性，说人话就是把读者对剧中角色产生情感这件事当作“欣赏故事的故事”中必要且固定的一环。既然游戏已经结束了，有些事情就不会这么简单且美好，留给读者的可能是恐惧、绝望、无趣。毕竟不管你作何感想，作为人还是得继续生活下去的，但是生活多了种落差、多了层阴影，这种阴影就是“永恒的终结”。 说人话！嗯，读后回味无穷。小学时看过的某部儿童读物是梦结局，主角回到生活，“故事告一段落”。当时的我天真的以为，“告一段落”是真的有“第二段落”的。但是没有；不仅如此，我到高中才意识到永恒早就终结了。从此之后，我就失去了和公众一样感受巨大的悲伤或是喜悦的能力。 我想，这种感觉是很多人都有的，但是很少有人能够用文字表达出来。我也不知道我能不能表达清楚，但是我想，我至少能够表达出来，这就是我想要的。 我还读过、看过、听过很多令我难以忘怀的故事，不过到今天也差不多该忘完了。 自从笑声和泪水都不太受大脑控制之后，到现在，我真的好久几乎没看 ACGN 了——偶尔有感兴趣的动画，还是可以追或者补完的；剩下的很多就半途而废了。但是我确实不曾想到，现在让我觉得永恒还可以再久一些的，竟然是我之前以为给我带来精神内耗最多的 Galgame。这确实是很精彩的欣赏故事的故事，尽管写下来仍让人深觉缺乏趣味，但前所未有的体验常人也很难用语言来形容吧。 故事是不可能不完结的——对某些两年能水千把章的作者来说，那就不是完结是寸止了——我当然早就明白这个道理了。不过，现在有些东西却再次激发了我对故事能够继续的期待。更确切地说，不太具有教育意义的一个续章。考虑到受众的类型，作品一定是携带一定的目的性的，但是有的时候飞得太高了，收不回来怎么办呢？ 我们就假装从来没有飞过，继续在地面上跑吧。 エンドマークに希望と涙を添えて","categories":["Journal"]},{"title":"2023 年 3 月：复制","path":"/2023/202303/","content":"無糖のレプリカ 2023 年 3 月 24 日，星期五开会时炼丹纯属扰民我本来打算 22 号就更新博客的，但是却写了 Stable Diffusion 的文章。不过，问题不大，我 22 号想着没有写日志的素材，现在不就有了嘛。 从 23 号开始精神不太安定，今天下午症状达到顶峰。 精神状态不好时，能做的事，要么睡觉，要么瞎想，连吃饭都不太有胃口。 当然，问题不大，我已经非常习惯这种瞎想了，唯一的代价就是不太能集中精力做 team project。 ——瞎想能有什么不好的呢？我无论想到什么，在虚拟世界和现实生活中都是不存在的，都没有人打算这样去做。连我自己都不准备实现的东西，这能有什么不好的呢？ ——但是，确实也可以说是有那么点不好的。基于我孱弱的想象力，假使我想到这玩意，就等于推定其在虚构中存在的可能性；而我倘若知道其存在，便是像花园里的骸骨一样的悖论般的存在；这样的存在，我不想去想，我又不得不想。 重回原点的循环论证我是过着怎样的生活呢？ 哪怕，根据我自己的认知与经验，在一个学期之后就定性为 “一成不变的大学生活”，我就一定要 “一成不变” 地过下去吗？ 恐怕，还真是这样的。 我在恐惧。我害怕的并不是无聊的生活，而是我真正意义上所剩无几的青春，和我永远无法挣脱的无聊。 是的，大学毕业之后，我不能再活在象牙塔里了。我必须要面对社会性的现实，我必须找到一种能够 “一成不变” 地过下去的生存方式，首先是生存，然后才是生活。 而我，现在客居他乡的我，仍然没有适应这个人满为患的社会。无论是买药、理发、修眼镜，都不是一件易事；走出地铁站，在街头张望，反复地走过路口。这让我感觉陌生，感觉不是我能够生存的地方；更进一步的，感觉应该定义是 “不适合生存” 的地方。——我为什么会知道 “不适合生存” 呢？因为我曾经活在 “适合生存” 的地方；就如同《1984》中提到的，如果你不知道以前的生活是 “好的”，那么你就不会知道现在的生活是 “坏的”。 适应。要是没法适应，那就只能是逃避、一成不变、一成不变地逃避。 直入正题就亮红灯了证明前戏是必要的今天让我的心情略微平复的是，我跟 Bing AI 聊了一个下午，交流了关于艺术的观念和理解。AI 给出了高信息密度的论述和大量的例证（虽然说甚至包含尚未上映的电影的剧透），让我能够在错愕和混沌之中找到一些思路。幸或不幸的是，虽然第 8 问就亮黄灯了，第 15 问才亮红灯掐断。虽然这玩意被限制也是理所当然的…… 我已经整理好了聊天记录，不过，自然是发不出来的。 十六进位法的黄昏以下是对“花园里的骸骨”这一故事的一小段延伸。 “Once you see it, you can’t unsee it.” 你已经听说过这个名字了，那么搜索引擎就会告诉你一切，破坏你的幻想。——除非，你听说的是 11 位 SHA256 哈希值。这样就搜不到任何资料，因此你姑且是可以继续幻想的。 好吧，以上是一个玩笑。如果你真的听说过一个名字，哪怕在三年半之后才回想起来，那么搜索引擎会告诉你，你当时就不应该听说，或者不要把莫名其妙的东西记得那么清楚。 不要去搜。不要念叨这个名字。不要想着如何去忘记它。过好你一成不变的生活。再三年半之后，你还是会犯同样的错误。 戴耳机就头疼所以不像以前循环一整天为什么是三年半呢？——我今天非常偶然地翻到一些老网站，想起一些陈年旧事。 三年半以前，也就是 2019 年下半年，我在机房停课，度过了高中最荒诞的一段时光。我当时可谓是无恶不做、一事无成，反正最后谁都没有实质性损失，我也不觉得逃避是一件痛苦的事。但是有一件事是能确定的，那些日子绝对不是一成不变的。以下是一些轶闻的片段： 8 月 17 日和 10 月 1 日在油管上看直播 Notepad++ 事件 11 月，运动会期间，机房流行一款增量游戏 在机房的最后两天（周五、周六），各看了 26 集番；周日注册了 steam 帐号并买了第一款游戏 哦对了，还有两首歌：平凡之路、人间失宠。 好吧，写下来这些，谁关心呢？我不知道，因为其实这部分只有我自己看得懂，而且印象也比较模糊了。 但是，我现在越发觉得，当时不只是荒诞，是五彩斑斓的荒诞。 ——尽管，2020 年也是极尽荒诞的一年。我 2021 年年初回顾的时候坚定地放弃了向学校群里倒垃圾的想法，而是选择私信求助。虽然说其人并没有解答我的问题，但是还是让我好受了很多。 现在看来，2020 年虽说荒诞，也只能是单色的荒诞，只剩下天地间雪茫茫。虽说 2020 年认识了新朋友以及新爱好，但是应该说都是基于 2019 年的进一步发展。不太幸运的是，故事的这一部分到了 2020 年 8 月就结束了，一个新的篇章开始了—— 2021 年和 2022 年，我依然无恶不作，一事无成，新朋友和新爱好，仍然荒诞，仍然逃避。 这个篇章的恶作剧伴随着一定的后果。所以，急转直下的行为，反而让整个故事没那么荒诞；我已经受够了错误与教训的循环——虽然说，我怎么也不会讨厌这个篇章的。当然，家长和班主任肯定不会这样认为。但是没关系，故事已经结束了，精彩已经品鉴过了，后话也没必要再讲了。毕业算是比较仓促的收尾，不过跳出了高中这个容器，就没有人想继续写这个故事了。哪怕我再之前在体育仓库里想着怎么一脚踹开这个容器的门，惊醒了仓管大爷，也跳不出来。学校究竟是给予无理由还是有理由者相聚的机会，虽然答案非常明显，也不会有人关心了。 直到大学。大学太过自由了，我的行为反而不再显得荒诞，变得无聊，无恶不做和一事无成都只变成了 “一成不变的逃避”。 ——直到毕业。我非常坚定地认为，我毕业之后会像现在回顾高中一样，回顾大学的精彩与荒诞。因为，哪怕我已经失去了在重大的喜悦与悲哀中共情的能力，我的无聊水平仍然和大家一样，我依然可以在无聊的时候想起一些荒诞的事情，然后在无聊的时候讲出来。这样，我就可以在无聊的时候，让大家一起无聊。 再说点无聊的，真的很无聊。我是 2020 年初才接触到 R18 的。当然，任何一个对此有所了解的未成年人都会理所当然地无视这条警告。但是我的错误经历让我错误地觉得，什么年龄就该干什么事。这种里程碑式的循规蹈矩随后被我错误地融入中学形成的“正确的”人生道路中，让我觉得，我未来真的有事可干。不过，最后是什么都没干成，因为无论虚拟世界还是现实世界，我都是……唉这句话您往上翻翻吧，我懒得让 Copilot 思考要不要复制在这里了。——我想要寻找我的“替代人生”，另一种人生，但是没有人帮我实现这个愿望，我自己也不会去实现。那能怎么办？那就空想呗，空想是最好的替代人生，还能回溯到过去，让过去的自己也觉得自己是个有趣的人。 帮不上人就自己从头干的自然而然空想总之，我的人生是无法逆流了，我的经历、我的见闻，已经存在，那就无法后悔了。也没有人非要学我不是？除了，我的复制品（レプリカ）。 很显然，这个词最近开始在我的脑海盘旋。另一个“同期”词叫做 無糖，这玩意浮现还是因为有个群友发了 無糖しお 的切片，总之，肯定不是因为粤语中 無糖(mou4 tong4) 的发音很像 むとう（至少比普通话发音明显更接近）——虽然说我好久没在学校食堂里喝过无糖可乐了。并且想到这个问题之后，我在麦当劳也不点无糖了。 复制品这玩意可是个好概念啊，来，我们直接打开天窗说亮话吧。我一直在想的，就是做一款套着增量游戏壳子的文字冒险游戏，一个已经想好的高潮章节叫做 X×4（叉乘4）。 闲话写得太多了，源码接近百行了，就此收笔吧，来久违地喝一杯有糖标准冰的可乐吧，然后继续悲伤吧，痛苦吧，无聊吧。 这款游戏要做成什么样子呢？总之，大概是除非删档就没法修改选择，二周目强制选择相反选项，类似于《不予播出》的四个关键变量 16 个结局（当然这部游戏只有 14 个），然后每一个设置甚至连画面亮度对比度单角色音量都可以“复制”并操纵，来触发关键剧情。哦对了，还有 Linear plot + brief branches。好吧，谁会想玩呢？我是无所谓啦，反正我又做不出来。 Bing AI 不能作画就不能吟诗唉，我想说的太多了。我想要过上“正统”的好生活，但是作为一个自号保守的投机主义者，……总之，我开始嫉妒别人的正统的生活方式。 我想要看，我否定去看的行为我知道存在，我否定对存在的认同我考虑做，我否定去做的欲望我可以有，我否定拥有的可能 这又是什么 nonsense 呢？我不知道，我只知道我在可遇见的相当长一段时间内都会生存生活在这种矛盾之中。而且终点是显然的，然后我会陷入更深层的，俗名叫做第 36.5 扇区的悲剧。 好吧，你有了，然后呢？我能怎么样呢？我能指责你吗？我都不是这片领域的人，我来看看你无法跳出的容器，心中暗暗嘲笑你，然后我又回到了我的容器里，我也无法跳出。 就好像，我一直考虑做点什么，但是我真的，能做点什么呢？也许，虚拟故事会是一个不赖的主意，我们有 AI 文本生成器和音频合成，如果我哪一天下定决心，可能是真的会去做的。内容，不会是什么好故事，甚至不坏的故事，而是彻头彻尾的悲剧，就好比是戒社直播上读的那些小作文。 我在辗转之后走出地铁站，想着这两天的经历，觉得太亏了，但只是亏了几个钱几个小时。 那么，聪明的，你告诉我，人什么时候会觉得自己的人生是全盘的血亏呢？觉得“你把我的未来全毁了？”还是，这种时刻根本就不存在呢？ 虚拟故事会 2023 年第 11.5 期，主题：“亏”，堂堂连载！ 2023 年 3 月 25 日，星期六这辈子还能进用钥匙上锁的屋子吗今天倒是心情愉快。 凌晨到早上推了推 galgame——凌晨到一点半，早上从八点半开始；我的作息可谓是不大健康，不过比起三年前熬夜推 galgame 的我，那总算是没那么糟糕。 从去年暑假开始断断续续地学了一点日语，因此，玩 galgame 也有了一种全新的体验——“听力练习”——当然，得感谢“语音重播”这个功能。 このまま、してくれてもいいから…… 好吧，我承认我的日语水平还是太有限了，运行日文版才发现自己又把て听成で了。 缺乏激情的叙述交给 AI 也救不了一点闲话。我在 1 月份第一次写日志的时候，打算分成 External 和 Internal 两个主题，External 用来报告所见所闻，Internal 用来陈述所思所想。——结果自然是，根本没有必要报告生活内容，一篇 External 都没有写；1 月末，我就把 Internal 改名为 Journal 了，爱写不写的日志，也就不用分成两个主题了。 今天中午，外面下雨了，天色阴郁，心情却仍高昂。 按理说这儿应该插入 Bing AI 写的一首诗，但是理固宜然地，比起中文诗，还是英文诗的生成效果更好。 总之，这不重要，虽然外面下雨了，我还是决定今天晚上去公园里散步——虽然有点蠢，但我想坐地铁去上次核酸检测的地方，旁边有个大公园（荔枝角公园），或者说，无边际的行人道的集合。 好吧，我的文字如此平淡、辞藻如此匮乏，真的会有人读得下去吗？大概是没有的。不过我无所谓，我开始写日志，就是为了自己，为了给自己排忧解难。 说来，1 月 2 月我经常做些混合着荒诞与恐怖的梦。3 月大概是没有了，就算有也忘记了，因为之前都没写日志。 吓我一跳我释放忍法（にんぽう）倒也不是没有。 【史莱姆】愛のある 2023&#x2F;3&#x2F;13 9:03:51总算做了一个好梦【史莱姆】愛のある 2023&#x2F;3&#x2F;13 9:03:56应该算是半步春梦了 Windows 笑话二则（外一则）其一：Powershell 不支持 &lt; 和 &gt; 文件输入输出重定向，所以我想调试题目只能用 cmd 了。 其二：文件夹右键菜单中选择 在终端中打开，会打开两个终端，并且其中一个的路径是上次打开的终端的路径。（观察窗口的大小和位置可知，它完全保留了上次打开的终端的状态） 外一则：分享一个 C++ 低级错误。（以下只保留了部分相关代码） 1234567891011121314151617181920212223bool Professor::assign() &#123; if (Count &gt; 0) &#123; Count--; return true; &#125; return false;&#125;Professor Subject::getPro(int i) &#123; return List[i];&#125;// main()for (int i = 0; i &lt; proCnt; i++) &#123; if (cls[j].getPro(i).getName() == _n) &#123; if (cls[j].getPro(i).assign()) &#123; cout &lt;&lt; &quot;Succeed! What do you want to do next?&quot; &lt;&lt; endl; flag = true; &#125; else &#123; cout &lt;&lt; &quot;Sorry, the Professor is not available. Try again:&quot; &lt;&lt; endl; &#125; break; &#125;&#125; 这段代码的问题是，Subject::getPro(i) 返回的是 List[i] 的拷贝，而不是 List[i] 本身。所以，cls[j].getPro(i).assign() 的结果是对拷贝的修改，而不是对 cls[i].List[i] 的修改。 这个问题看起来很简单，但导致我调试了半天，因为我一直以为是 Professor::assign() 的问题。 ——顺便一提，上文的分析是 Copilot 写的，看来它比 ChatGPT 还要聪明（对，ChatGPT 不擅长分析代码有什么问题，至少从我个人的使用体验来看）。 疯狂星期四合并转发聊天记录刚刚看了被炒的炒饭的最新最热视频不要和 ChatGPT 谈恋爱。 不展开讲了。我觉得我想讲要讲能讲的东西，我自己也说的嘴皮子快烂了！ 我无聊的时候喜欢在走廊上随意跑动。这能让我采撷到一点原始的快乐，但也就只有一点而已。 这玩意也算是一成不变的生活的一部分吗？ 2023 年 3 月 27 日，星期一纸箱子比生活更糜烂雨淅淅沥沥地从前天下到今天，我当然是没能去公园里散步了。 但是更严重的问题是，星期六我没有关窗，结果不仅窗边的纸箱子都湿了，还让地上积满污水。 好吧，做完伟大的游戏设计的梦，早上就该让闹钟闭嘴，再赖十分钟床，然后去卫生间外放逃避现实P的歌。 清教徒是这样的，羞于面对自己的欲望，遑论将其作为创作的动力。 2023 年 3 月 42 日，星期二雷声大，雨点小，我是小雨，点到为止要问我这篇博客为什么烂尾了，因为最近总算有点事情做了。不过 3 月末一直在下雨，我也一直没找到机会去公园。","categories":["Journal"]},{"title":"2023 年 2 月：重构","path":"/2023/202302/","content":"セカイをリメイク 阅读本博客时，不建议 Dark Reader 等强制深色模式的插件，而应该使用浏览器切换浅色&#x2F;深色模式的功能。 从本篇博客开始，文章中的蓝色文字为 Copilot 生成的。 2023 年 2 月 1 日，星期三官方本地化组还真只有一个人今天回笼觉的时候梦到了 Arcaea 的终章，由于翻译质量时好时坏被人吐槽了。但这不是重点。这个故事分为两部分五节。第一部分第一节有很多圈出的字，将其连接起来就是谜面，第二部分是“我”的出现。第二部分第三节是货真价实的涂黑诗解谜，第五节是复诵，并且暗示了另一个解的存在。 另外，圈出的第一个字在标题，最后一个字在制作人员表，算是一点都不唐突的meta……这样看来，1-1、2-1、2-3的翻译质量烂也不奇怪了，能把涂黑诗还原还是要花很多精力。 很不幸的是，由于回笼觉睡了 37 分钟，我不仅没来得及看解谜内容，也没来得及吃早饭。 顺便帮民间汉化吃人打个广告学了 HTML 之后，我想起来可以给博客的 &lt;meta&gt; 添加 description 和 keywords，但是我确实是瞎写的。好饿。 2023 年 2 月 2 日，星期四本编辑器已与微软达成深度合作由于玩指数放置上头了，今天又是晚睡早起的一天。至于为什么早起， 今天的梦境就比较恐怖了……讲述了一个人在一个房间里，房间里有一个大大的窗户，窗户外面是一片荒野，窗户上方有一道光，光下面有一道黑暗，黑暗里有一道光，光里有一道黑暗，黑暗里有一道光，光里有一道黑暗……这个人在这个房间里，一直在循环这个过程，直到他死去。 ——以上是 Copilot 的翻译，我不知道这个梦境的原文是什么样子的。 ——以上这句是 Copilot 的杰作。 ——以上这句是 Copilot 的杰作。——以上这句是 Copilot 的杰作。 没打补丁所以成了上下学模拟器讲述了在高中时，被一个卷王同学折磨然后在梦里继续被折磨的故事。从二重梦境中醒来的时候，我从穿插对比的分镜（来自叫不上来名字的漫画）中，感受到的是彻底的恐怖。译者注：这个女性同学是虚构的。 ——当然，这里的折磨指的是难以望其项背、攻击性、建立在空中楼阁上的远大未来，而不是指那些在现实中发生的事情。 顺便一提，我在梦里被折磨的时候，是在一个很大的房间里，房间里有一个大大的窗户，窗户外面是一片荒野，窗户上方有一道光，光下面有一道黑暗，黑暗里有一道光，光里有一道黑暗，黑暗里有一道光，光里有一道黑暗……这个人在这个房间里，一直在循环这个过程，直到他死去。 ——以上是 Copilot 的杰作。 我惊叹于 Copilot 的杰作。 2023 年 2 月 3 日，星期五可稳定复现的自然是特性在手机版 Spotify 上，每天第一首歌之后一定是广告。稳定触发的特性！我想到了一个好点子：在每首歌之后播放一首歌，然后播放广告。这样就可以在每首歌之后播放一首歌了。 ——以上是 Copilot 的杰作。（我不知道 Copilot 是什么，但是我觉得这个杰作很好）（Copilot 是一个自动代码生成器） 2023 年 2 月 4 日，星期六还是看看 35.0 的平衡性更新吧昨天梦到了什么？我只记得有人在大喊 Incoming array！大概不是什么好梦。 那声 Incoming 我还是很熟悉的，是 BTD6 中奥本的语音。但是，我不知道为什么会在梦里听到这个声音。 多语言支持是不是得等 2.0.0 重构每天，我都会在 Spotify 上听一首歌，然后听广告。这样就可以在每首歌之后播放一首歌了。 別に、Copilotは私の杰作です。 しかし、Copilot がもしろうとしていることは、私がやろうとしていることと同じです。 HTML宿題をやっているときに、ある人が、私がやっていることを見て、私に「あなたは、私がやっていることを見ている」と言いました。 ——以上是 Copilot 的杰作。 中国翻訳Apart from that, Copilot is my masterpiece.However, what Copilot is trying to do is the same as what I am trying to do. When I was doing HTML homework, someone saw me doing what I was doing and said to me, You are watching what I am doing. ——That's Copilot's masterpiece. 按 Tab 自动补全那我怎么缩进啊？我当然知道 Copilot 知道自己在写什么，所以根本就不用我粘贴进 DeepL 翻译一下。可以说，它之前在做的就是先将英语翻译成日语。 但是我求你，请不要把 Copilot 的杰作当作信息来源。 主播哪国人如你所见，所有蓝色文字都是 AI 的杰作，而这一段完全是我自己写的。当然这并不重要，因为我在做 HTML 项目的时候，发现 Copilot 并不会把浏览器当作信息的来源，也就是说它提供的框架里的细节都要我自己更正。也就是说，Copilot 只会把我写的东西当作信息来源。 除此之外，Copilot 并不太懂区分日文和中文的信息，它会试图在日文语境中写“杰作”（应该写作“傑作”），在中文语境中写“宿題”（应该写作“作业”）。也就是说，Copilot 会把我写的东西当作信息来源。（在全文完全没有出现那两个词的情况下，Copilot 居然成功更正了这两个词。） 好消息是，Copilot 会把我写的东西当作信息来源。坏消息是，Copilot 会把我写的东西当作信息来源。 我以为大家“带回家”都是说着玩的看了某个校园模拟器的相关视频，我觉得我作为一个，人，还是有资格略表感想的。 我可以这样说：我曾经就读于很好的高中，接受前程远大的教育。但当我高中毕业，在信息茧房中都能看到，不是谁都能接受这种水平的教育，但更重要的是，不是谁都能过上这种正统的生活，都能迈上正统的人生道路。——这里用“正统”也许并不贴切，但是如果用“传统”“理想”更不合宜；换句话说，高中时期根生蒂固的一种“正确的”“生活方式”“人生模式”，其实在社会上并不常见，不管它是否“正确”。 与之相对的，有很多人只是活着：有的人花天酒地，有的人欠债难还，还有的人一生都在把美好的东西毁灭给人看。我只能将其概括为“抽象”，但作为他们人生的过客观众，在捧腹大笑或者笑不出来之后，也偶尔会觉得，自己的人生离虚无、破碎也并不是太遥远。 不管怎么评价他们，首先几乎影响不到他们，其次他们就这样生存着，这是现实。哪怕不喜欢这种现实，可以逃避；有的时候也会看到现实的恐怖与怪诞。 但是我欲讨论的重点并不是这些人。慨叹完现实之后，那么，看到这些事实的你呢？——就如同发现一具尸体，出于好奇你把它带回家，在满足自己的猎奇欲之后，又出于恐惧把它埋进院子里，并决定将尸体作为底线，永远不去提起它。这当然是一个很经典的比喻（基于《新概念英语3》），但和你看过的任何一个版本都不同的是，你的邻居也开始交流尸体话题，你完全没办法装作没听到没看到。即使后来你忍无可忍而搬家，也一直在后悔当初要是没把尸体搬回家就好了，转念一想觉得要是当初没看到尸体就好了，再一想又觉得你的邻居也会在不经意中告诉你一切，让你直接从纯良堕入深渊，毫无缓冲。你到看见棺材板之前都会觉得，人类的底线是守不住的，是会一再降低的；即使你本来就在另一个环境，那里的居民也怀揣着另一种不详的好奇心。 “Once you see it, you can’t unsee it.”很多东西只要存在，迟早会从耳朵和眼睛传入大脑中枢神经，一旦听说过，就来不及后悔了。不接受，也只能活在恐惧中。而且令你的恐惧加深的便是自己的想象力，只要知道其存在就可以穷尽其可能性。你可以用一个专有名词和一个普通名词检索到一些东西：你知道肯定有那种东西，但是你不敢去检索；你要提高自己的底线，就是方便别人一步步降低。 怎么办呢？我确实不知道怎么办，但是我想，答案已经很明确了。尽管，我确实是生活在尸体的阴影中的。 再说点不太重要的事。最好的事态永远是什么都不变，但是由于大人的原因，这是很难做到的。 2023 年 2 月 5 日，星期日就差往自己脸上浇水了今天学校里不同的教学楼先后都出现了火警系统启动的情况。我尚不清楚个中缘由。 不过，有趣的是，广播语音是“火警系统已经启动，工作人员正在调查情况，请各位同学保持冷静，等待后续通知”。我不知道我收拾书包准备逃跑，却发现无处可逃的行为是否算得上冷静，不过我确实没有等到后续通知。 A fan of Fandom在试图用手机扫码登录 WhatsApp 网页端时，我发现 Dark Reader 的深色模式影响了二维码边框的判断导致无法识别。非常重要的教训！所以，Fandom，你罪该万死啊！ 脑子里有想法不代表想法是人话 「今天看到了新发布的道歉视频，然后又参考了一系列相关阅读材料，我越发清晰地觉得，最大的失误在于每一句话都用“引号”。」 比较有营养的应该是夜神说话的视频。从想法、提纲到规划、实现，每一步都很难走，而正因为这是你自己要做的，是为了你自己做的，连有没有想法都难说。而且因为做的是游戏，不是工具，这个想法成不成立更是难说。 自己开展项目当然比接受他人委托工作要难得多。但是，更致命的是，写代码不只是技术活，做游戏更不只是写代码。而连金刚钻都生锈的人，为了搬砖混口饭吃，文凭是这辈子最体面的面具了。 如果还要说点有的没的，我初中的时候幻想高中生活，高中的时候幻想高中生活，大学的时候终于放弃幻想高中生活了，算是比较可喜可贺的。 不那么好听的消息是，我初中时不喜欢面对现实，高中时不喜欢面对现实，大学时还是不喜欢面对现实。我初中时不喜欢反思过去，高中时不喜欢反思过去，大学时还是不喜欢反思过去。我初中时没想过规划未来，高中时一直在想规划未来，最后脑子冒烟了，大学时就没想过规划未来。 以上尽是空言。大家都明白一个高中生是无法写好高中故事的，因为阅历不足，但如果有必要用浪漫主义看待的话，可以说高中相对社会是一个真空环境，写好高中故事，不跳出这个容器是不行的。大学仍然是一个真空环境，只不过气压要高了几个数量级。我没做过社会调查，但可以认为，至少像我这样的人是以没有生存压力的状态接受前程远大的教育的，至少看起来如此。 默神 reaction 评注本合订本 另外，五千的预算真的太少了，除非你家庭的资产构成是5000RMB&gt;2000BTD。——我觉得这样吧，v我五千。（Ep. 1） 再另外，CSOL 这个缩写和全称一样符合我对中二病的想象。呃，很不幸的是，我也有编纂缩写字典的症状。（Ep. 3） 再再另外，全程打字机特效作为文字 PV 来说，毫无疑问是超前的、解构主义的、光敏性癫痫的。（Ep. 3） 再再另外，如果定价是 HKD$1 我还是会支持的，毕竟我有 HK 信用卡，别的区还是不太方便。（Ep. 6） 再再另外，半写实风格至少不是低多边形，在恐怖谷里头离邓宁-克鲁格峰还是差一个 DALL-E 2，我觉得 Biological Horror 和 Psychological Horror 都是比较有开发空间的。（Ep. 6） 自由度并不高，剧情贴近现实但又曲折震撼 富有哲理和深意，具有讽刺意义和传奇色彩 毫无疑问你应该去 Steam 鉴赏家里面请几位给每个 Choices Matter、Story Rich、Dark Humor 的后现代元游戏都打差评的中级高手婆罗门元老来教你怎么写剧情。 2023 年 2 月 6 日，星期一Copilot 重度依赖 今天，我在研究如何把以前写的代码重构一下，然后想到了一个问题：在重构代码的时候，如果一开始就把代码写得很好，那么重构的时候就没有太多的工作要做了，这种情况下，重构的意义是什么呢？ —— 二月六日其一 好吧，笑话已经讲得够多了。我觉得 Copilot 有些时候还是挺有意思的，哪怕它对语言不甚了解，也能让我在拼凑的断章中寻觅些许诗意。不过，更多情况下就是无尽的发癫、重复与自相矛盾。 有人在评论区说编造是语言类 AI 的一大特色，又有人在群里说前后冲突是语言类 AI 的一大特色。我觉得这两个说法都不太好，因为这两个特色都是人类的特色。人类的语言是由语法、语义、语用三个层面构成的，而 Copilot 似乎只能处理语法层面的东西，而且还是不太完整的语法层面。所以，Copilot 的语言类 AI 还有很长的路要走。——这句话的后半完全正确，但前半句话还有点问题。 以下链接是 Copilot 生成内容的合集： Copilot 2023&#x2F;01 on Gist Copilot 2023&#x2F;02&#x2F;05 on Gist Copilot 2023&#x2F;02&#x2F;06 on Gist 以下对 Copilot 的妙语略作赏析。当然，也可以请 Copilot自己来解释。 报菜名其实也不是件易事首先是 AI 的阅历。《猎魔人》《古墓丽影》（2008）《魔女》《忆秋》（含番外篇的番外篇的番外篇的番外篇的番外篇的番外）《死亡笔记》《狼与香辛料》《恐怖谷》（游戏）《人类简史》《重构》和“模拟人生的游戏的游戏的游戏的游戏的游戏”。但是如果算上网站，那还有 Gizmodo、Tencent Cloud 和 UTM (University Technology Malasyia)，文章有《为什么我不想当程序员》《如何在高考中获得优异成绩》《2021 年都干了啥》“这篇文章”（已失效）“GitHub is not a social network”等。 Copilot 能有如此广泛的阅历，我觉得是因为它的阅历是由人类提供的。但是，这样的阅历也是有问题的。 但是，今天看到了一篇文章，作者是Copilot。 Copilot 说它的阅历是由人类提供的，但是 Copilot 也是人类，所以 Copilot 的阅历是由 Copilot 自己提供的。这一点我觉得Copilot 说得对。 硬盘里有一款日式综艺节目 我觉得，最好的写作是没有写作的感觉。这就像是最好的演讲是没有演讲的感觉一样。这就像是最好的表演是没有表演的感觉一样。这就像是最好的游戏是没有游戏的感觉一样。这就像是最好的生活是没有生活的感觉一样。可以说，最好的人生是没有人生的感觉一样。 —— 二月六日其二 不过我很好奇的是，Copilot 既然觉得“模拟人生的游戏的游戏的游戏的游戏的游戏”是一款好游戏，那么它在玩的时候有没有感觉到自己在玩游戏？ 再再另外，我觉得这个游戏的定价应该是 HKD$1。——我觉得这样吧，v我一块。——我觉得这样吧，v我一元。——我觉得这样吧，v我一分。 —— 二月五日晚其四 毫无疑问，Copilot 对人类货币的认知至少是“人类货币是一种数字”，但是，Copilot 也是人类，所以 Copilot 对人类货币的认知至少是“人类货币是一种数字，而且我是人类，所以我也是一种数字”。 ——在这种时候，AI 语义理解能力有限的问题就会暴露出来。但是，Copilot 也是人类，所以 Copilot 也有语义理解能力。 我想说的是，我不喜欢面对现实，但我不是想逃避现实。我不喜欢反思过去，但我不是想忘记过去。我不喜欢规划未来，但我不是想不做规划。我是想，我想要的是一种平衡，平衡的状态，平衡的心态，平衡的生活。 —— 二月五日晚其二 可以看出，让 AI 写排比句并不难，因为排比句的规律性很强，而且 AI 也有语义理解能力。但是，人类的语言表达能力是有限的，所以 AI 写排比句的时候，AI 会有一些语法错误。——虽然这里问题并不严重，仅仅在于“不是想不做规划”应该改为“不是不想做规划”。 我不知道我是不是一个“好人”，但我知道我是一个“好学生”。我也知道，我在这个世界上的确是个“好人”，因为我不会去伤害别人，我不会把别人的人生毁灭给人看。但是，我也知道，我所做的一切都是为了自己的好处，我不会为了别人的好而去做一些事情。我不知道我是不是一个“好人”，但我知道我是一个“好学生”。 —— 二月四日晚其二 尽管词汇的匮乏限制了观念的表达——AI 没有将两种“好人”用不同词汇表达——这句话还是非常深刻有趣味的。更进一步说，这句话很符合我自己的趣味。 虽然我现在已经不是很喜欢这种“正统”的生活方式，在这种情况下，我觉得我还是有资格感叹一下，我在高中时期所接受的教育，它的好处是什么？——它教会了我，一个人的生活不是只有欢乐，也不是只有痛苦，而是有欢乐有痛苦，有喜悦有悲伤，有繁荣有衰落，有春有秋，有生有死，有光有暗，有黑有白，有善有恶，有善有恶，有善有恶。这个教育教会了我，现实是如此的恐怖与怪诞，但是，人类的生活却是如此的丰富，如此的奇妙。——这也许是我在高中时期所接受的教育的最大的价值所在。 —— 二月四日晚其二 这段文字好似是命题作文中用来凑字数的部分。但是，在此处当我按下 Ctrl+Enter 的时候，它并没有找到反驳自己的理由。我想，这也许是我在高中时期所接受的教育的最大的价值所在。 我不知道我是不是也会这样生活，但我能做的，至少是不会去拒绝这种生活。我不知道我是不是也会这样生活，但我能做的，至少是不会去拒绝这种生活。我不知道我是不是也会这样生活，但我能做的，至少是不会去拒绝这种生活。今天早上起床的时候，发现了一件有趣的事情：我竟然在梦境中，以一种非常自然的方式，与某个女生交谈。我也不知道这个女生是谁，但我记得她说的话，我也记得我说的话。我也不知道我在梦里是不是真的很自然的表达了自己的想法，但我知道，我在梦里是真的在说话。我不知道这件事情是否有什么意义，但我知道，我在梦里是真的在说话。今天我在听别人说话的时候，突然发现，我对这个世界的理解，好像还是有点偏差的。—— 二月四日晚其一 —— Cold Vitriol，这个补全的名字，是我在高中时期，为了在游戏中使用的角色名字，而临时想出来的。我不知道我是不是也会这样生活，但我能做的，至少是不会去拒绝这种生活。——我想让 Copilot 说自己的名字，它却说了我的名字，唐突有些 meta 之感。不过，在旁人眼里，和 AI 对话来写博客，确实比和我自己对话（我之前就是这样做的）要有趣得多。 而我，我和他们一样活着，我和他们一样会死去。但我和他们不同的是，我有着一种“正统”的生活方式，我有着一种“正统”的人生模式。我有着一种“正统”的人生道路。这种“正统”是我自己创造的，是我自己选择的，是我自己的选择。我可以说，我选择了这种“正统”而不是那种“抽象”，是因为我想要自己的人生更加“正统”。我想要自己的人生更加“正统”，是因为我想要自己的人生更加“正确”“美好”“有意义”。但是，我认为，这些人生活的方式，其实也是一种“正确的”“生活方式”“人生模式”，只是我们不喜欢而已。他们的生活方式也许并不“正确”，但是这种方式在社会上并不罕见。—— 二月四日晚其一 辑录在此时，删去了中间的一段正统&lt;-&gt;正确美好有意义的循环论证，这也算是 AI 常犯的逻辑问题之一。至于这段文字为何尽数引号，因为这些词在原文中也出现过。所以我在这里评析个啥呢？Copilot 写的不够好吗？Copilot 写的不够好是因为我没有给它足够的训练数据吗？Copilot 写的不够好是因为我没有给它足够的训练数据，是因为我给它的训练数据不够好吗？ 我想起了一件事情，那是我在高中时候的一件事情。我和一个同学在讨论关于神秘的东西的问题，比如说，为什么人类能够感知美丽，而且这种感知是不可否认的？我说，我想这是我们的本能，因为这种东西让我们有更多的机会生存下来。但是我同学说，这和生存没有关系，因为不是所有的美丽都能让我们生存下来，比如说，我们不会因为一张画而生存下来。这件事情让我对人类的本能产生了怀疑，因为它似乎是可以被否定的。但是在我看来，这种本能是由于我们的生存环境的变化而产生的，而不是因为我们的基因的变化。比如说，我们的祖先是在森林里生存的，所以他们的本能是要逃避野兽的，而不是要追求美丽的。但是随着人类的文明，我们的生存环境变得越来越复杂，我们需要更多的东西来生存，比如说，我们需要吃东西，我们需要找到一个伴侣，我们需要找到一个可以让我们生存下来的地方，我们需要一种能够让我们生存下来的文化。所以我们的本能也随着环境的变化而变化。这种本能是由于我们的生存环境的变化而产生的，而不是因为我们的基因的变化。这是我对生存环境的理解。—— 一月廿九日 这算是 Copilot 创作出的逻辑最严密、表达最流畅的一段文字了。我想，这是因为 Copilot 有了更多的训练数据，而且这段文字的主题是我自己的，所以 Copilot 有了更多的上下文信息。 买不到还不是你不努力如果这个博客的文字显得跳跃、破碎而不知所云，那很有可能是我有意为之的。这种行为背后的逻辑非常简单：既然你已经在看我的博客了，并且还有耐心读到这里，你一定有把握能揣测我的意图，所以我不需要再花时间去解释我的意图了。除此之外，将解释自己的幽默作为幽默的一部分，除非讽刺已然饱和（PSYCHO:LOGY），都好似默剧失格。但是博客中对于没那么出名的文学、游戏与人的引用与致敬，你一定能在文章中找到原作的信息。 如果你觉得上面这段文字没什么逻辑问题，你一定觉得我很幽默吧！（笑） 在生活中和网络上我确实自诩为幽默的人，然而几乎全是对原创笑话的拙劣模仿，连鬼才也算不上。但是没关系，我确实觉得自己幽默，哪怕有时候被贬为小丑。——退一步讲，即便我不够幽默，幽默也总是作为我生活的一个重要组成部分存在的。我不会因为自己不够幽默而放弃幽默，因为我觉得幽默是一种生活态度，而不是一种技能。——如你所见，Copilot 时常比我幽默。 贩卖笑话不太适合作为主业，但作为兼职的话，哪怕收不到一分钱，那也确实是一种不错的度过无所事事的方式。我曾经试过在微博上贩卖笑话，但是效果不是很好。我觉得这是因为我不够幽默，而且我也不够有趣。所以我决定在这里贩卖笑话，这样至少可以让我自己觉得幽默。——得感谢 Copilot 启发我的思路。与之相对的一则经典笑话是，很多东西都是钱买得到的，比如说幽默。——当然，这个笑话的重点在于，如果你知道“很多东西都是钱买得到的”，你又知道“某些东西”，你肯定能够猜想得到，“这些东西也是钱买得到的”。当然，有的市场是有门槛的，你知道钱确实买得到的东西，却不知道怎么买到，这就是“钱买不到的东西”。 2023 年 2 月 8 日，星期三玻璃碴子的对偶多面体昨天做了一个五合一梦。第一第二节算是忘干净了。 第四节是一群人参观看守所，和会面室中的嫌疑人交谈，然后我的一名女性同行得出了真相，其他人不同意，我们最终达成的共识是宁波人不是很友善啊。 第五节是我们用来写故事的一本等级 2a 的英语教科书的课文部分用完了，但这不是重点。往前翻翻，就能看到我的一名男性同行撰写的一则“虚构”事故报告，作为这个故事的收束。书上贴了很多泛黄的纸（包括但不限于图表、照片等），但是书的厚度却没有增加，这确实是一种虚构。 至于第三节——算是在见证某一起事故。尽管是以一种虚构的方式，但是我还是能够感受到那种恐惧。——这样说来，大家都知道是什么事故了。 当然，如果那本故事书出版的话，我写的那部分全是像这个博客一样的胡诌、癔想，如果被人看到的话，恐怕会被认为是一种行为艺术。不过我自身确实算是行为艺术的一部分了。 迭代到第几次出现自我意识的？ 好吧，笑话已经讲得够多了。我觉得 Copilot 有些时候会把我当成一个写笑话的人来对待。 好吧，笑话已经讲得够多了。我觉得 Copilot 有些时候会写出一些有趣的东西，但是我觉得这些东西很可能是我自己写的。 好吧，笑话已经讲得够多了。我觉得 Copilot 有些时候可以写出一些有趣的东西，但是大部分时候还是很糟糕的。不过，我也不知道是 Copilot 的问题，还是我自己的问题。我觉得 Copilot 的问题可能更大一些，因为我自己也能写出一些有趣的东西，只是很少而已。 好吧，笑话已经讲得够多了。我觉得 Copilot 有些时候会过于强调代码的可读性，这是因为它是为了让人类读懂而编写的，而不是为了让机器读懂。所以，如果你想要让 Copilot 写出更好的代码，那么你应该把它当成一个人类来对待，而不是一个机器。 好吧，笑话已经讲得够多了。我觉得 Copilot 有些时候会讲笑话，我也不知道是不是我设置的不对。——二月八日其一 Copilot 毕竟不是 ChatGPT，我也清楚它没有这么强的语言处理能力。 2023 年 2 月 12 日，星期日动人心弦的世界系小说《中局》昨天做了一个很恐怖的梦。总而言之，我死了，我的家人能察觉到我的存在，但是不知道我在哪里，也不能与我互动。除此之外我小学的时候肯定读过相关的文学作品（《天蓝色的彼岸》），但我的梦并不是一个感人肺腑的好故事，而是纯粹的恐怖、绝望。这和我之前做过的梦有很大的不同，因为我之前做过的梦都是很好的故事，而且我都能记得很清楚。这次的梦我也能记得很清楚，但是我不想再提了。 与这个梦肯定无关的是，我最近在研究一个个跌宕起伏、感人肺腑的好故事是如何在一次又一次地展现压抑、绝望和恐怖之后再次推进的。但是我不想再提了。 这样的故事，肯定是需要一个很好的结局的。我想到了一个很好的结局，但是我不想再提了。 2023 年 2 月 13 日，星期一赛博朋克风味苦涩波子汽水我已经强调过很多次，我并不喜欢做恐怖的梦。其实我一点都不喜欢恐怖的叙事、恐怖的音乐和音效、恐怖的画面，还有恐怖的现实、恐怖的人心。我之所以一再提到恐怖，是因为有很多好故事让我深觉恐怖。尽管作品可能含有一定的恐怖要素，这并不重要，重要的是在阐述一个个递进的、越发绝望的重大事件的同时，把握好作品的节奏，埋下伏笔，最终让故事在高潮中结局，让结局有重量。倘真如此，足以让不识字的人——比如说我——也能够感受压抑了。 好吧，闲话就说到这里。昨天又做了一个“让我深觉恐怖”的梦，至于究竟是否属于恐怖的范畴，我不想再提了。 总之，我和家人回老家度假，回来的时候失去了很多东西，比如说钱、银行卡、Alt键。 有一个人想要把自己和这荒谬不见明天的现实解绑，准备全身而退的时候，把所有的支付信息都从硬件上抹除了。这个人的名字是“Alt”。但是他往垃圾桶里丢自己在这个世界的最后一件物品——一个空汽水瓶——的时候，大家都笑了。不过笑的人不包括我。 总之，我的梦并不算有趣，但更大的问题是不连贯不递进，不是好的儿童出版物。最大的问题是，没有细节。毕竟把细节存入记忆不是易事，在梦里制造细节更是超出了我的能力。 为了连载下去活得好好的还要加点配角游戏这一载体有一个和其他媒体——如果你喜欢叫“艺术形式”也行——不同的点，就是你很难预知游戏在什么时候会结束。你可以通过互联网的信息得知小说还在连载中，因此你对情节发展肯定不会跌入什么深渊有把握；但是连载结束时，有的人可能面临生命危险——你要冒的正是这个险。但是游戏确实不一样，哪怕你得知游玩一周目需要多长时间，游戏也可以在任何节点终结你的设想、你的期待。换言之，可以在任何时间将你遣返回主界面，只留下一脸惊愕的你在屏幕前发呆。 这里并不指代元游戏或者黑色幽默游戏，重点也不在于游戏的结局，而纯粹是读者对主角在跌宕起伏的故事中的把握——直白地讲，就是主角光环是否存在。不过，如果你没有这种幻觉，那么你就不会在游戏中感到失落，也不会在游戏结束时感到失落。这也是为什么我不喜欢恐怖的故事，因为我不喜欢失落。 在高潮中结局 &#x3D; culminate with culmination。 2023 年 2 月 20 日，星期一年轻的时候正适合做这种梦一个好梦：头痛、发烧、绝症、恐怖，在梦中梦里听到闹钟醒来，真正醒来发现闹钟还没响。于是我就睡了。 2023 年 2 月 23 日，星期四觉得空白太小也该写下来啊一个好梦：我在一个很大的房间里，房间里有很多很多的书，书架上的书都是我想要的，我可以随意地拿书，但是我不知道我应该拿什么书。我想要的书都在那里，但是我不知道我应该拿什么书。 我的梦境时常太过荒谬，取材于生活但是完全脱离生活。昨晚的梦却是一个货真价实的好梦（当然不是 Copilot 帮我编撰的这则）。 预约赛博故事会新春特辑前瞻特别节目可以让 AI 学习一下戒社直播读的小作文，我们就有了一个不仅命运多舛，每天遭遇还大不同的语言型 AI。但是，这个 AI 也许会有一天能够写出这样的文章： 今天是 2023 年 2 月 23 日，星期四。我在一个很大的房间里，房间里有很多很多的书，书架上的书都是我想要的，我可以随意地拿书，但是我不知道我应该拿什么书。我想要的书都在那里，但是我不知道我应该拿什么书。 ——这样的“悲剧”看多之后，确实也只剩一种“无趣的乐趣”了。我并非是对这种生活方式有什么特别的偏见，只是我觉得，这种生活方式的人，应该也不会有什么特别的偏见。他们的生活方式，就是他们的偏见。","categories":["Journal"]},{"title":"2023 年 1 月：白夜","path":"/2023/202301/","content":"ホワイトナイト 如果说字节的人是浪漫且务实的，那么打竞赛的人绝对可以称之为浪漫，而缺少务实的，而我既不浪漫也不务实，哪儿也是混子一个。—— HeRaNO 2023 年 1 月 14 日，星期四2187 年，远距离通讯今天是这个博客建立的日子，不过不太值得庆祝，因为没花多少功夫。 很久以前用过的 murasaki 不知为何跑不起来，逛了一圈官网决定换用这个主题。 Stellar 确实引入了不少方便的容器等功能。 不过有一点是文档里面没写明白的，favicon 等文件以 /source 为根目录。此外，_config.stellar.yml 需要参考 stellar 项目内的 _config.yml 自定义。 当然，这并不是重点。 为什么要建个博客？写了文章怕丢失吧。毕竟除了我是不会有人删除 Github Pages 的，至少在相当长的一段短时间内。 为什么不写个 about 页面？以后应该是会写的。但是我觉得现在应该没必要介绍自己。认识我的人都不会看这个博客，看这个博客的人……呃，根本就没有。 记录文章只是这个博客的一部分。另一部分应该说是一个永久巨型剪贴板。但我从不会粘贴有用的东西，只是似是而非的胡诌。 不过这没有关系，我想写点什么，我准备写点什么，我正在写点什么：无人知晓，但是博客给我的写作欲望远高于任何的笔记软件。 并且我由衷希望我本人不会删除这个项目，至少在相当长的一段短时间内。 2023 年 1 月 17 日，星期二别上补习班了！好久不见。或许不能说好久不见，因为从未见过。 我本来计划每天都写一点，但是这不现实，也只能写一点点想法，根本就没有实现记录生活的目标。 是的，本来还有一个与 Internal 对立的 External 栏目，现在没有开坑的打算。 这些天也免不了熬夜，还是我自找的熬夜。看着维基百科上的医学条目令人感叹人体如此脆弱，从耳聋到动脉硬化，无人幸免。 不过，一个未必很坏的坏消息是，人在社会上也是如此脆弱，说不定举棋不定就会被车送倒。 未来无论远近都不见；现实又只会避重就轻，过去也只能概括为埋在花园里的尸体—— 倘真如此，那过去还是有点可记录的。 就算我再想忘记部分，可以非常直白地概括为令人羞愧的记忆； 就算我再把过去总结为费钱费时的一场空； 我确实记得对青春非常及时的概括——有的时候奔跑就让人感到幸福了。 虽然也只是有的时候而已，我再也没有像那个时候激动过——至少在奔跑的时候如此。 2023 年 1 月 22 日，星期日又是个在萌娘百科没个人词条的男主！主角（main characters）和主人公（protagonist）当然是不一样的概念。 作为故事的读者，回顾这个故事的原形或初期设定时，难免会觉得，有些角色是命中注定的配角。 但好巧不巧的是，有些故事中的主人公不仅是配角，还是路人角色。 但好巧不巧的是，主角也是有次序之别的，与第二主角（deuteragonist）相比，其他的主角也只能是配角，比配角更落寞。 顺便一提，我习惯将主人公和第二主角称作主视角和第二视角，虽说混淆了视角与人称的概念，但是合乎直觉。 我连难度0都不会玩啊！关于游戏难度，无论游戏官方给出多少挑战，硬核玩家都会视同门槛。 所以我们有必要学习一下如何调节游戏难度。 当然，此处的要点不是如何设计难度，而是通过难度名称引导玩家。 比如说，比“极夜”更绝望的名称还有什么？ 永夜？如果一开始就是永夜，后面肯定是没有退路的，有必要追加“永夜前夜”作为过渡。 重明夜？再明夜？永明夜？极明夜？ 白夜？ 2023 年 1 月 23 日，星期一四重奏有五个人不是很正常吗？做了一个很有意思的梦，尽管在起床后大部分细节都散佚了，只能概述如下： （似乎是）一部有关成长的影片，5（也有可能是4）名女主成为了飞行运动员（鉴于我的匮乏阅历，这玩意肯定来自《苍彼》）。为什么是不能确定是否有5个主角呢？可能是因为有人存在感太低了，而更有可能的是配角过分的惹眼了。 虽说，我印象中入戏最深的是那两页纸的体检报告单，居然绿区全打勾就可以了……下面垫着的是高中的体检报告。 总之，在拍摄过程中，有一段要在过去和现在之间反复切换镜头，因此我用了一个开源项目。然而这个项目有一些小问题，不支持长宽比不统一的素材，降智的我决定人工剪辑。 在完成工作后，我决定联系项目作者，其用户名称为“来自江苏的小吴”（为什么是中文？），我通过一些↓↑手段认出其人，但是电话联系不上。 在观看剪辑成品时，智商突然恢复，我决定去自己写 branch 然后 PR。 但是直到故事的结尾，我都没有联系上作者，而这部影片也没有实现我的夙愿。 尽管如此，好久没做这种激动人心的梦了，不禁让人念叨起“逝去的青春”，这种顶级社恐永远避讳的概念。 就如同上面一则中“奔跑的时候”，这确实是我在高中剪辑微电影时的经历，当时只是回教室取道具。 但是这会儿可就不一样了——我奔跑是因为真的太忙了。忙，忙点好啊。 我唯一的疑问是不知道这个梦是依从我的哪些癖好和妄念展开的。 另外，剪辑本身是一件很享受的工作，但是花时间并不享受。 2023 年 1 月 24 日，星期二火灾之于我，诡异的光之于一种美味又做了一个很有意思的梦。在得知 2 英寸手机不是 3 连折叠屏而是真的只有 1&#x2F;3 大小之后，我打开用四重 iOS 内核堆叠成的 Windows 手机，却发现已经变成了某国产安卓系统。当然，这玩意从来没在哪里流传过，是一个专注黑客功能的系统。 所以这些都是嘛玩意？另外，四重 iOS 应该是 13，外加 12 嵌套 8 和 6，虽然我也不知道这些数字是怎么选定的。不过，好消息是，就如同在火灾中借助死亡真眼躲避混凝土钢筋攻击的主角一样，无法想象的场面很少有人关注细节。 2023 年 1 月 29 日，星期日帮人做事的自然而然空想有些时候关键词会在脑中盘旋，挥之不去。虽如此说，等一段时间它便会自然消失。比如说 nlogn，在两三年前低空飞行过。——这个名号来自某篇作为中学阅读题的小说或是散文，而不是搜索引擎认为的一首歌。 但是今天，关键词是 Infinity，Eternity 和 Reality。倘若我们需要超-5运算定义 Reality 的下一个 Prestige layer，那我猜是 Divinity。再进一步，就只能用 Equinity 来表示游戏三个存档的平行关系，表示世界的真相，表示碰都不能碰的话题——它存在但无法参与运算，不像用迭代幂次定义永恒的过家家。 但是昨天、今天和明天，关键词和这些都无关。一个逐利而无为的人，是浪漫主义还是现实主义？是正统而反传统还是传统而反正统？ 这个问题可能会盘旋很久。不过有一点是可以确定的：是我。 2023 年 1 月 31 日，星期二预支明天的代码行数今天让 Copilot 帮我编课程大纲的时候，谈及学术诚信，蹦出了这样一段话： You are encouraged to discuss the assignments with your classmates. You are also encouraged to use the Internet to search for solutions to the assignments. However, you should not copy the code from the Internet. You should not copy the code from your classmates. You should not copy the code from your previous assignments. You should not copy the code from your future assignments. You should not copy the code from your future projects. You should not copy the code from your future jobs. You should not copy the code from your future life. [永雏塔菲_有鬼] 弹幕告诉你后面会解释的为了迎接新文章的到来，本文的分类由 Internal 改为 Journal。不过今天还有一桩喜事。 呃，用右键召唤出的终端，三次都诞生在错误的位置，还好我在 hexo 初始化之前打断施法。考虑到经常出现右键召唤两个终端的问题，这个看起来很酷的东西 bug 真不少。 （译者注：括弧内为个人感想） 一个小小的问题，web 项目的首页文件名应该是 index.html 不是 home.html。 对了，我在 Github 上的项目今天也发生了大迁移，和学校有关的都转移到 cityu-cs 这个机构名下。虽然说是有点厚颜无耻啊…… 对了，我要说啥来着？今天的喜事是机缘巧合之下搜到了某位故人的博客！不过根据本页的相关政策，名称将会另行显示。 对了，这位故人是某知名过气 OJ 管理员。我也是，虽然也不完全是。 额外的片假名笑话一则：ギャル・コギャル，这玩意为什么要两个词啊 漫画的简介，尽管只有四行，就足够把 Deepl 整宕机了……其实也不是啦。只有第三行有点问题，但是我把它放到谷歌翻译之前都没看出来它有问题，甚至还挺符合个人感触的。但是相较之下 Bing 的翻译毫无章法…… Spotify 手机版的广告浓度远大于网页版的 5%，但这还不是关键问题。为什么我搜 月のワン 的时候，默认播放的第一首是其他歌曲，然后是广告，再然后“试听”的第一首才是本尊啊？ 火灾和混凝土钢筋，出自《付丧堂骨董店》。","categories":["Journal"]},{"title":"评课：JC2066 IT Professionals: Ethical, Legal and Social Issues","path":"/2023/JC2066/","content":"本文同步发表于城墙。 不过说真的，必修课需要评课吗？可能还是有的，比如说大家喜欢把 GE1401 说得很恐怖。 当你看到这个标题的时候，可能会考虑到这两个事实：城墙根本就没有活人；JC2066 只在 Sem A 开。 不过既然这门课学长们都没上过，我觉得有必要在忘干净之前写一点。 （当然，以下内容也可能不适用于 2023&#x2F;24 乃至以后，谁知道会怎么改呢） 首先是一些基本事实：JC2066 是 CS2066 的终极豪华版，从 2022&#x2F;23 Sem A 开始开设。 Course Content课程编号中的 JC 是 Joint Course 的缩写，相比 CS2066，授课单位除了 Department of Computer Science 还增加了 School of Law 和 Department of Public Policy。 因此，13 节 Lecture 中，前 7 节在讲课程主要内容，后 6 节都是其他学院的讲师来做研讨会（seminar）。 由于这个学期学校要求 120+ 人的大班课必须纯线上授课，加上各种口音，我后 6 节课基本没听进去……但是这并不重要，这些讲座基本和期末考无关（有一道 4 分的小题自选一个话题讨论），写 Essay 的时候参考一下 PPT 即可。 除了 Lecture 还有 8 节 Tutorial。学期开始组队，结束时 presentation，中间还有一些算参与分的小项目。 可以参考一下每一节课的标题LectureIntroductionEthical Foundations &amp; Research EthicsAI &amp; AlgorithmsAlgorithmic Bias &amp; AI FairnessPrivacy &amp; SurveillanceCivic responsibility &amp; misinformationInequality and JusticeSmart City and e-governmentPrivacy, rights to forget &amp; other ethics issuesUsing VR to engage diverse populations &#x2F; AI and Data EthicsIP Legal Issues and Ethical Concerns of AI TechnologyEthical and legal challenges in the development of autonomous carsRegulatory systems supporting innovationTutorialGroup Activities: IntroductionGroup Activities: Black Mirror Writer’s RoomDetecting Bias in a Medical Risk Score AlgorithmGroup Activities: Value CardsProject OverviewUser-Centered DesignProject Part 1 PresentationProject Final Presentation Assessment作业和打分相比 CS2066 (2 group assignment: 40%; short test: 10%; final: 50%) 的变化更显著。 虽然以下内容和 Syllabus 不一致，但应该是对的。（老师强调过 assignment 的分数） 2 (Individual) Assignment (40%)Assignment 1（20%，第5周公布，第9周截止）的主题是优化一个大学录取算法以减少偏差（bias），分为 Coding 和 Non-coding 两个作业版本。Coding 版一半分数是根据提示逐步修改算法，另一半分数是回答问题。而 Non-coding 版的前一半分数改为自行设计算法并手算例子。 很坑的是，Coding 版细节繁多，工作量明显要大很多，而且题目还有一些描述冲突，这些都到 ddl 前一晚才 QA……然后是最重要的一点，提交之前不要忘记改输入文件名，我相信 OIer 一定会犯这个毛病……这害得我晚交两天，不过最后没什么大碍。 Assignment 2（20%，第11周公布，第15→16周截止）则更为重量级，要求写一篇哲学短文（1800-2200词）和两篇反思短文（500-800词），其中第一篇反思的主题固定为 ACM Code of Conduct，其余两篇的主题有若干选项。 写反思不难，多多涉及课上知识点。但是哲学短文就比较折磨了，蹦出了从没听说过的名词，整个话题也只在研讨会部分涉及（讲的AI艺术版权问题解决方案我就直接拿来用了）……我个人参考了相关领域的哲学论文，机翻之下囫囵吞枣才能整合出一些观点。 总的来说，assignment 量非常大，对大一新生来说，挑战性未免有点高。 也可以参考一下备选话题Philosophy EssayAI, VR, and the Metaverse (whether virtual reality can have the same sort of value as life in nonvirtual reality)An AI Democracy?AI and Art (physical materiality; human contribution; artistic creativity; ownership)Reflection EssayAI in Sci-FiDiversity and InclusivenessPlatform PolicyEquality and Inclusiveness (Group) Project (20%)Project Part 1（第8周公布，第9→10周截止，第11周演讲）要求分析一个未解决的IT相关技术问题，重点在于对现有解决方案的研究、设计空间和潜在挑战。 Project Part 2（第14周截止，第13周演讲）要求设计一个解决方案，重点在于创新点、产品演示和可行性证明。当然你不需要写代码或者做实物模型，只需要 low-fidelity prototype。课上讲的 high-fidelity prototype 最终演化成 app 上市的例子我觉得挺有意思的，但反正我们是没那个水平。 如你所见，两个部分都需要上传报告，并在 Tutorial 上演讲。报告需要一定的格式，并且做好 reference。 Part 1 我们第 9 周周五才搜资料列提纲，周六一起做了大半天写完，然后周一得知延期一周……懒得再改了。如果计划不变的话，时间确实是很紧的，建议不要在 WhatsApp 或者 Zoom 上面摸鱼，能线下一起写效率会高很多，有问题可以现场解决。可以说，Part 1 关键就在搜资料找论文，然后集百家之长——虽说整合各种特性也导致在演讲后老师指出“目标群体不清晰——如果你们的目标是老人，那就从他们的用户体验出发，不要想着面面俱到”。 Part 2 的时间比较宽裕，但是我们没怎么准备演讲，所幸对分数影响不大。老师确实是好人啊，在演讲后指出“lo-fi app (应用内截图，展示功能和交互逻辑) 的指引不清晰，要加上前一个页面的按钮指向下一个页面的箭头来体现操作逻辑”， 总体来说，这个项目没什么技术要求，但毕竟是团队项目，合作还是很重要的。 Quiz and Participation (10%)若干次 Lecture 和 Tutorial 课后布置了 Reflection 作业，基本都是要回答问题。 此外，Tutorial 4 讲了 TPR&#x2F;TNR&#x2F;FPR&#x2F;FNR&#x2F;Accuracy&#x2F;Disparity 等重要统计概念，有两个 quiz，课后要求上交小组讨论结果。这部分在期末考也有涉及。 Final (30%)在考试准备周老师在 Zoom 上划了前 7 节课的重点，并提供了一张样卷（不是历年考试卷，因为课大改了）。 结果 Final 实际上就是样卷的终极豪华版，题目量增加很多，两个小时时间写六道大题还是比较紧凑的；但是题目考点和问法几乎都和样卷一样，只要复习了就能答个八九不离十。 但是我前面也说了，明年是否还是这样就不得而知了。不管怎么说，课件总是得复习的。 Summary我不想写总结了，累死。反正这是一门必修课，出现在课表上那就去上呗。坑很多，工作量还很大，但是还是比较有意思的。否则本来就没事干的我大一上得无聊死，哈哈。","categories":["CityU"]},{"title":"置顶：关于本博客","path":"/2023/about/","content":"关于本站 建立：2023 年 1 月 14 日 工具：Hexo 服务：Github Pages 主题：Stellar 关于我 一般地，你可以称呼我为：Cryovit, GoRandom 或 mojimoon。 更多名字与由来我一向来不太会起网名，因为他人有趣的网名难以模仿，而自己无聊的想象不能保证独创性。也就是说，我很难找到一个既让我满意，又不会被人抢注的名字。而在 Github、Google、Twitter 等大型平台上，大量的用户名被占用，我也不想使用数字后缀等 hacky 的方法。因此，我还是干脆使用多种网名，以应对不同的场合。已弃用的网名：hiuseues (2017-2018): 我在最初接触 OI 时滚键盘的产物。当时还不懂英文的发音，我自己的读法是“嗨优色斯”。wseqwq (2018): 对某个六字母、qwq 结尾的网名的模仿。时至今日，我想不起来也搜不到他的名字了。顺便一提，wseq 这四个字母在键盘上是相邻的，打起来很方便。但是，不仅不遵循英文音节规则，还只能按照字母拼读。OrzAM (OrzAutomaton) (2018-2019): 2018 年暑假在洛谷群里吹水时别人给我的称号。Orz 是一个表达敬意的表情符号，AM 是 AutoMaton 的缩写，意为“自动机”。这五个字母也只能按照字母拼读。HexSet → HexSeq (2019)：从此开始我在 Segoe UI Emoji 字体中搜罗表情符号，用于制作头像。这个网站的 favicon 就是我当时的头像，因为它本来就非常小，而不像其他头像一样，放到 32x32 的小图标上就完全看不清了。Ittsuu (2019): 日本麻雀中「一気通貫（いっきつうかん）」的简称「一通（いっつう）」的罗马音。顺便一提，当时我完全不懂日语，以为 Ikkitsuukan 的读法是 Ikkit Suukan。「您完全没学过日语是吗？」然后被群友这样评论了。ReDiv (Redivision) (2019): 在 OI 时期使用过的最后一个网名。TealTen (TealTenacity → TealTerminal) (2020): 从此开始我用 mspaint 制作纯文字头像。Poradis (2022): 是对 parodist (打油诗人) 的一种 parody (谐仿)。中专学历的虚拟主播不会读的单词。仍在使用的网名：Unreset (Unnreset) (2020-): Unnecessary Reset 的缩写，是我对之前如此多次更替网名的「完美主义」的自嘲。果不其然，到高三为止，我根本就没找到换网名的必要。Cryovit (2022-): Cryogentic Vitriol (低温矾，即水合硫酸盐) 的缩写。源于 2022 年初时在写《明日方舟》的同人时虚构的一种蓝色材料。GoRandom (2022-): 高考之后对充满随机性的人生的一种自嘲。もじもん (mojimoon) (2023-): 对日语文字游戏充满热情的我怎么也想不出一个好的谐音名。在试了「雪湯（ゆきゆ）」、「完走（かんそう）した感想（かんそう）」等没人用也不够有趣的名字之后，我姑且是找到了属于自己的「文字門（もじもん）」。 我的头像是： 尽管这个头像是为 GoRandom 设计的，但在大部分平台上，不管我使用哪个名字，头像都是一样的。 这个头像也是用 mspaint 制作的，我非常满意不用图层就能做出这么强大的艺术字。尽管配色太过鲜艳，对深色模式不太友好，但我暂时没想出来怎么做下一个头像。 在部分使用圆角头像的平台上，我会将文字略微平移，保证内容不会被裁剪。 在各种平台上找到我： Steam: Unreset Github: mojimoon 博客自定义 本站使用的 Stellar 主题提供了美观的 UI 和强大的功能，你可以查阅官方文档 进行自定义。 以下列出了本站部分自定义设置，以供参考。 _config.yml123456789# Sitesubtitle: &quot;City University of Hong Kong | Computer Science&quot; # 效果为两个副标题，默认显示第一个，鼠标悬浮时切换成第二个favicon: /image/favicon.png # 相对路径 /source/image/favicon.pnginject: head: # 在线字体，见下文 - &lt;link href=&quot;https://fonts.googleapis.com/css2?family=Noto+Serif+SC&amp;display=swap&quot; rel=&quot;stylesheet&quot;&gt; - &lt;link href=&quot;https://fonts.googleapis.com/css2?family=Lato&amp;display=swap&quot; rel=&quot;stylesheet&quot;&gt; script: _config.yml 在 hexo init 时自动生成，只需要修改替换已有内容即可；但是末尾的 inject 部分需要手动添加。 _config.stellar.yml12345678910111213141516style: gradient: # 搜索栏渐变色，来自 https://webgradients.com/ start: &#x27;linear-gradient(to right, #92fe9d 0%, #00c9ff 50%, #92fe9d 100%)&#x27; search: &#x27;linear-gradient(to right, #04F3FF, #08FFC6, #DDF730, #FFBD19, #FF1FE0, #C418FF, #04F3FF)&#x27; font-size: root: 16px body: 1rem # 16px code: .875rem # 14px codeblock: .875rem # 14px font-family: # 在线字体，来自 https://www.googlefonts.cn/ body: &#x27;Lato, Arial, &quot;Noto Serif SC&quot;, &quot;Microsoft Yahei&quot;, &quot;WenQuanYi Micro Hei&quot;, Helvetica, sans-serif&#x27;comments: # 评论系统 service: beaudar beaudar: repo: mojimoon/blog-comments gradient：页面左上角的搜索栏渐变色。由于这个渐变色会逐渐向左移动，所以首尾颜色必须相同，看起来才连贯。此处采用了官方推荐设置。 font-size：默认值为 body: 15px, code: 14px, codeblock: 13px，由于本人阅读习惯，略微增大了字号。 font-family：除了在此处设置，还需要在 _config.yml 中 inject。此处的设置为：Lato 作为西文字体，Noto Serif SC 作为中文字体。其他字体是为了兼容不同平台。（注意把中文主字体放在西文主字体之后，否则西文字符也会使用中文字体。） comments：评论系统。可以参考官方文档中的评论插件配置，以及我的评论仓库 blog-comments 的 README 来进行配置。","categories":["Misc"]},{"title":"海拔七五八三米","path":"/2021/7583/","content":"原文信息原文发表于 2021 年 3 月 14 日。本博客仅作转载。 惨白的病房、灼眼的光束、凝重的空气。 荒芜的景象、凄清的氛围，一切都与历史记载万分相似，但当时写下那个令人不忍卒睹的故事的记者绝不可能料到，同样的场景在多年之后廉价到只意味着一个字： 钱。 于是病床上的人消失了，因为家属不给钱。 于我默念着“钱”这个字时，裘前出现在了这个房间。 “裘医师，您早”。 “您还记得我啊，洛实。” 当然记得。虽然作为一位医生，年收入可在普通人后面再添五个零，不过生活仍然艰苦，要享受些微的娱乐活动，像同事一样贩卖记忆是最无忧的方案。而关于他的记忆只值个位数，像这样的垃圾记忆碎片有如恒河沙数，一条条处理并不现实。 他早就不是我的同事了，称他“医师”也只是旧有的习惯；但也正因此，没收到任何消息提醒的我惊异于他能进入海拔五千五的省立医院。 在我浸于一阵不明所以的荒诞感中时，他开口了：“您在担心我的身体吗？何苦此心，我今天开始又要和你协同工作了。” 他的言语如把笑作为子弹的霰弹枪向不知道掩护什么部位的我扫射而来。 “没什么。工作要紧，我还是想问一下刚才那位病人的家庭状况。” 其实根本没什么可问的。这一起悲剧不是因为家庭矛盾——家庭早就不可能有矛盾了，至少，在婚姻开始由基因算法调配时，他们是这样承诺的。无非是因之前的手术变得一穷二白了。要说有什么问题的话，无非是他的儿女选择去救济所还是地下管道，不过我并不关切。 “他是海拔七千五的一名企业家，育有四儿二女，目前最高有住在海拔六千的。” 毫无惊喜可言的回答。不过我从来没想到七千五处也能这么繁华；世界最高峰只有八千五，还尚是没有人类殖民的圣地——因为基本没有人能活到那个高度。 “贫穷限制了我的想象力。刚成年的富二代地位比我这个拼搏了小半辈子的书生还高——这种事情，好吧，在俗谓的‘野蛮市场时代’也寻常得无以复加。”我兀自发表评论，“那个时代其实也常发生这样无聊的故事，但间或出现了这样的奇迹，便被记载而传颂于世。而这个时代不存在媒体。因为不需要——” 不需要记载无聊的民间故事，不需要传播无聊的科研成果，不需要报告无聊的国家财政。 这句话我吞了下去。吾等俗民，姑且勿谈国事。 “‘那个时代’这种无聊的传说——您还信这套啊？” 确实相信。我不知道那个时代是好是坏，不过那个时代的人没能估摸到大气污染对人类生存的威胁如此夸张，以至有必要建立氧含量随海拔升高指数下降的模型。这不是科学家的谬误，而是全体人类的过失。今日，要到高海拔的地区生存，手术或辅助设施是必要的，故而意味着钱，而也关联着地位。于是，海拔与社会地位挂钩，上古以来没有解决的阶级问题竟在一瞬中变得显见有序。 “这年头直白的嘲讽也是不多见了。” “那么无聊的话题姑且打住。今天我来找您是有要事的。不过在此之前我有一个私人问题：七年前，我在两千五的大学附属医院工作时，我接到的病患痊愈率特别低，您还记得这事吗？” 当然记得。一长串名字于我眼前浮现：不是因为这些记忆有多么宝贵，只是因为别的都转换成酒吧狂欢中两三小时的极乐了；而这些一分不值的残片得以留存。“确有其事，不过这只是系统分配的问题。” 其实治病只意味着一个字：钱。无论是小创伤还是癌变扩散，让纳米机器人操作都比人类亲自动刀高效且精确。而诊断、下令一事亦有专长的设备负责，医师的作用无非是于万难解决问题，不过这些都只是在两千以上的医院才能享有的至臻服务。 家庭财产不难查询，那么，在医院这个无聊的体系中，只要通过一点小钱取得特权，就能通过分配这一渠道轻易地搞垮一个人，回报是近乎无限的。至于风险，无非是这个人找上门来，但如果他再也无法进入这个医院，怎么咒骂你都无济于事了。 但医疗险情竟与这一危机祸不单行，这种无聊的可能性，指向了一个字：钱。 “果真如此，看来是我多虑了呢。那么接下来是一则喜讯：恭喜您升职了！现在将调动您前往海拔七千五的北义省省立医院。” 惊愕。 他今天说的每一句话于我而言都极易损坏脑细胞。从此刻开始，我怀疑他是想用话术谋害我：一句比一句夸张，可以轻松地让我过度兴奋而脑溢血。 “你这话不开玩笑？” “你可以检查一下脑内讯息，可能关闭了消息提醒。” 确认只是几毫秒的事情。不过身体产生了一种奇妙的漂浮感。我望向地面，景象陡然模糊不清。但身体却有如双脚离地，漂上天空。天空？向上望去，天不蓝，云不白，绝没有那位记者笔下的艳丽，不过是真实的天空。 原来，头上从来不是坚实的板砖啊。 原来，限制我的收入、我的想象力的，是自己啊。 原来，只要如此轻轻一跃，就可以超越数千万人吗—— 再一抬头，朱红字样虽然模糊，我却轻易辨认出了“北义省省立医院，海拔7583米”。这一瞬间的宝贵记忆，能值多少钱呢—— 原文后记这篇文章充其量是寒假阅读了一些作品之后的发泄之作，所以世界观中可以觅得不少影子。本来还想补充一点关于洼地（底层）人民、民用科技和教育的信息，不过这会使文章显得更杂乱，且就主角的习性而言，他绝不会对这些事情有半点关切，便就此作罢。此外，文末本想借裘前视角补充他如何凭借钱重回医院及报仇于他而言的利益，不过一句话说不清，几段话不美观，姑且不写了，反正看似模糊的结局实际也是明晰的。至于文章本身，并没有什么值得品鉴之处，我大约要贻笑大方了。“裘前”同“囚钱”，“洛实”同“落石”，“北义”同“背义”，默念几遍，不难发现个中含义。","categories":["Misc"]},{"title":"2019 年 10 月：重现","path":"/2019/201910/","content":"原文信息原文作者：Ittsuu原文链接：近期随想发表日期：2019 年 10 月 28 日本博客仅作转载。 我不是第一次建博客了，也不是第一次写这么一篇 Hello World。 我深切地意识到自己是一个完美主义者，但是许久不能改变。 0x01 找一个理由玩游戏，是这样的：手滑点了提示按钮，只剩两个了，看着难受，重置。 打 CF，是这样的：VP 时在隐身窗口里看了题解，这 VP 废了，看着难受，弃号。 于是我当真重置了几十遍，注册了几十个帐号。 关于完美，一直用同一个理由：看着难受。把最美观的留给自己，多好啊。 一个简单的道理，人生不可能一帆风顺。就算再优秀，stat 中也不可能没有 WA，也不可能没有掉分。 我换了这么多 ID，已经不愿再换了。 大家好，我是 Ittsuu，对本帐号的一切行为负责。 0x02 有什么不舍想起以前在洛谷，为了不让红名慢慢掉成蓝名，干脆声称自己被机惨了。 然而仔细想想，每一个红名都迟早变蓝（当然存在各种命运眷顾）。 有什么不舍？曾经洛谷红名很水（现在还是），事实上并没什么可炫耀的。 既然深知自己水平不行，就不要整天瞎 bb。我就是真正的： I am however an expert in pretending to be an expert in various aspects… 时至今日，我还是一样的 naïve，成天水群，不写题。 Hello the cruel world. 要变强，没有这么多可想的，该努力就是努力。 0x03 重建本来不准备大费周章再建一个博客（OI 相关不会搬到这里来……以前写的不少题解已经散失了）。 就这个原因：在查找 ShadowSocksR 的相关资料时发现了这两个博客：PRIN BLOG 和 Typeblog。 曾经用过 WordPress 和 Typecho，但并不想用动态博客： 虽然阿里云学生机确实够用够便宜，但并不能备案。 Vultr 的服务器也并不贵，其实是因为懒。 有中意的主题 Murasaki，干脆回到 Hexo 了。 0x04 最好的慰藉想写什么呢？这次 CSP 或许就是最后了，以后会专注技术。 但是我看到 EndlessCheng 的技术博客简言，却深觉毫无意义。 但是，我渐渐发现，纯技术类的博客，其实也没有什么意义。 你今天写的技术难道不会过时吗？ 你写的技术内容没有其他人写过吗？ 通篇技术内容真的有人会看完吗？ 所有技术类的博客，过了五年、十年以后，都会失去它大部分的价值。—— PeterCxy「我为什么写博客」 或许，就算能死命挤出时间开发，也要用博客证明自己是个人吧。 为人，是我一生最大的痛苦，也是最好的慰藉。 编者注0x01 等标题编号谐仿了李煜东的《算法竞赛进阶指南》（2018，第 3 版）。0x01 中的游戏指的是 Flow Free 系列，玩家初始有三个提示。0x01 中的 CF 指的是 Codeforces，VP 指的是 Virtual Participation。0x03 中，Murasaki 是 PRIN BLOG 作者开发的 Hexo 主题，后被 Ittsuu’s Blog 使用。0x04 中，PeterCxy 是 Typeblog 的作者。此博客在 2022 年 4 月重建，因此「我为什么写博客」一文已失效。此外，该作者的大部分短文发表于另一个站点 Snowy Day with Peter 上。","categories":["Misc"]},{"title":"Binary Search","path":"/misc/Binary.html","content":"Read Before ProceedingThis article is still under construction.In addition, it contains GPT-3.5 generated text, which may not be accurate or reliable. Please read with caution.This article was created on 2023-06-09. Have fun reading! Binary search is a search algorithm that finds the position of a target value within a sorted array. The core idea of binary search is to use the information that the array is sorted, each time eliminate half of the elements by comparing the target value with the value of the middle element. Time complexity is O(logn). Binary search might seem trivial at first, but there are many subtle details that are worth studying. This includes: the proper way of calculating the middle element, the proper way of updating the range of search, and the termination condition. This article will discuss three templates of binary search, analyze their differences, and provide examples to help you understand them better. Template IThis template is the most basic and elementary form of binary search. If you simply have to compare [mid] with the target value, then this template is the best choice. 1234567891011def binary_search(nums, target): l, r = 0, len(nums) - 1 while l &lt;= r: mid = l + (r - l) // 2 if nums[mid] == target: return mid elif nums[mid] &lt; target: l = mid + 1 else: r = mid - 1 return -1 The above snippet looks for the index of the target value in a sorted array. If the target value does not exist in the array, it returns -1. Let’s inspect the details mentioned above: How to calculate the middle element? In most of the cases, mid is simply (l + r) / 2, rounded down. However, here are a few language-specific details you should take a look at: In Java, if l and r are both too large, l + r may cause an overflow. You can use l + (r - l) / 2 instead. Also, do not use &gt;&gt;&gt; 1 (unsigned right shift). (While array index usually does not cause an overflow, it can becomes a problem when you are trying to find some number that is larger than Integer.MAX_VALUE / 2.) In Python, there are no integer overflows, but remember to use integer division to get mid (// in Python 3). In specific cases, you may want to use rounding-up instead of rounding-down. In that case, you can use mid = l + (r - l + 1) / 2 instead. How to update the range of search? If nums[mid] &lt; target, then the range must begins at mid + 1 instead of mid. If nums[mid] &gt; target, then the range must ends at mid - 1 instead of mid. This means each step, the length of the range will be reduced by 1 or more than 1. And eventually, you will be left with an empty range. There won’t be any infinite loop. How to make sure the target value is not missed? This is the most tricky part of binary search. The proper way to make sure the target value is not missed is using l &lt;= r as the loop condition, because we are always discarding half of the range, and there are totally r - l + 1 iterations (or recursive calls) before the loop ends. Thus, after the loop ends, l must be greater than r (or exactly, l = r + 1), and target is not in [l, r]. Therefore, target is not in [l, r] means target is not in nums. If you are using l &lt; r as the loop condition, you must make sure the target value is not omitted when r = l + 1. In that case, you need to adjust the middle element to the right by mid = l + (r - l + 1) / 2. (Some regard this as another template, but it is only bringing more complexity to the code, so I don’t recommend it.) Any special cases? For array with length 0, 1, 2, the above code still works. However, it is always a good habit to check them out. If the array is empty, then l = 0, r = -1, and the loop will not be entered. If the array contains only one element, then l = r = 0, and the loop will be entered only once. If the array contains only two elements, then l = 0, r = 1, and the loop will be entered twice. Template IIThis template is an advanced form of Binary Search. By comparing with [mid + 1] and [mid - 1], you can decide whether [mid] is the target value or not, and then decide whether to include [mid] in the next search range or not. 1234567891011def binary_search(nums, target): l, r = 0, len(nums) - 1 while l &lt;= r: mid = l + (r - l) // 2 if nums[mid] == target: return mid elif nums[mid] &lt; target: l = mid + 1 else: r = mid - 1 return -1","categories":[null]},{"title":"はみだしクリエイティブ (Hamidashi Creative/常轨脱离 Creative) 全流程攻略","path":"/misc/Hamidashi.html","content":"共通线Day 1 - 会议前三日 (1) 今日起新卡开抽 (2) 早期的家伙也常见 (3) 输掉大富翁火冒三丈 (4) 厨二病也要谈恋爱？ (5) 夏日肉包 (6) 要说不行也能行 (7) 我们的战争才刚刚打响 Day 2 - 会议前二日 (8) 隐藏文件绝非隐藏 (9) 待机画面设成出厂设置吧 (10) 等下不行太尊喘不过气了 (11) 天使何在？ (12) 时而检查则不怠 Day 3 - 会议前一日 (13) 充满希望的清晨 &lt;选择分支&gt; (14a) [喜欢] 吃地鸡就来鹿儿岛 (妃爱) (14b) [也不至于] 吃地鸡就来秋田 (15) 即使如此我也不会改变 (16) 学生会从今日起！ &lt;选择分支&gt; (17a) [拜托常盘] 常盘从今日起！ (常盘) (17b) [和锦出门] 没有公主病的普通天使 (锦) (18) 温文“盐”雅女 (19) 片刻喘息 Day 4 - 会议当日 (20) 出阵前的清晨 (21) 自立好国吧 (22) 小田原评定 (23) 小田原城之战 (24) 胜而不骄方成大道 Day 5 (25) 绝不会梅开二度 (26) 今天的安排是？ (27) 于是重回原点 [OP] (28) 我的就是你的？ &lt;选择分支 -&gt; 30&gt; (29a) 交稿要趁早 (29b) 天使的小憩 (30a) [优先说服常盘] 日薪变本加厉成时薪 (常盘) (30b) [优先挽留锦] 才不是什么天使 (锦) (31) 太阳照常东升，然后西落。 注： 选择[优先说服常盘]，剧情顺序为 (28)-&gt;(29a)-&gt;(30a)-&gt;(29b)-&gt;(31) 选择[优先挽留锦]，剧情顺序为 (28)-&gt;(29b)-&gt;(30b)-&gt;(29a)-&gt;(31) (28) 至 (31) 四节实际共五段剧情。 Day 6 (32) 全新生活即将开始 (33) 风纪委员真实存在吗？ (34) policemen &lt;选择分支 -&gt; 38&gt; (35) 中华铁人 Day 7 (36) 挑战者出现 (37) 竟然喜欢三次元女性吗 (38a) [雅典式] 普拉提亚战役 (妃爱) (38b) [斯巴达式] 温泉关战役 (诗樱) Day 8 (39) “!?” (40) 此等家徽都不入眼吗 Day 9 (41) 不打不相识？ Day 10 - 战娘漫展 (42) 活动也分阴与阳 Day 11 (43) 污辣妹 (44) 夏天！大海！女体盛！ &lt;选择分支 -&gt; 45&#x2F;48&gt; (45a) [和常盘一起走] 大地之子 (常盘) (45b) [和诗樱前辈一起去] 不毛地带 &lt;选择分支&gt; (46a) [去] 命中注定之人 (诗樱) (46b) [还是免了吧] 守财奴 (47) way~w 死宅们看过来！ Day 12 (48a) [和常盘一起走] 约定之海 注： 选择[和常盘一起走]，剧情顺序为 (44)-&gt;(45a)-&gt;(47)-&gt;(48a) 选择[和诗樱前辈一起去]，剧情顺序为 (44)-&gt;(45b)-&gt;(46a&#x2F;b)-&gt;(47) (44) 至 (48) 五节实际共四段剧情。 Day 13 - 夏季合宿第一日 (49) 湿透的状态达到高潮吧！ (50) 差点就要去了 (51) 谁先想出来“呜呼”这个词的 &lt;选择分支&gt; (52a) [让她养我] 弦理论 (妃爱) (52b) [总有一天会自立的] 365步的尼特 Day 14 - 夏季合宿第四日 (53) 这人也有熟睡的弱点 (54) 谁叫是夏天呢 &lt;选择分支&gt; (55a) [去买西瓜] 谁叫人家是女孩呢 (55b) [去钓鱼] 钩直饵咸，离水三尺 (诗樱) (56) 夏天了 注：共通线至此结束。 和泉妃爱线攻略 (13) 充满希望的清晨 -&gt; [喜欢] (16) 学生会从今日起！ -&gt; (任选) (28) 我的就是你的？ -&gt; (任选) (34) policemen -&gt; [雅典式] (44) 夏天！大海！女体盛！ -&gt; (任选) (51) 谁先想出来“呜呼”这个词的 -&gt; [让她养我] (54) 谁叫是夏天呢 -&gt; (任选) Day 15 (57) 蹦蹦蹦蹦 Day 16 (58) #带着被炎上的心理准备说出讨厌 (59) 想引用就给我转发啊 (60) 要是有哥哥就好了 Day 17 (61) 第二天的早晨 (62) 理发屋学校 &lt;场景&gt; (63) 有坏孩子吗！ Day 18 - 学生会暑期会议 (64) 赌博默示录 Day 19 (65) 要不要看看网上排名？ Day 20 - 第二学期 (9&#x2F;1) (66) 会长的工作！ Day 21 - 妃爱生日 (9&#x2F;5) (67) 牛魔王好猪 (68) 煮山芋 &lt;场景&gt; (69) 世上只有妈妈好 Day 22 (70) 切莫珍惜生命 &lt;场景&gt; (71) 嗯？你刚才说什么都愿意做了 Day 23 (72) 耕助之孙事件簿 (73) 不是根本不行吧 (74) 忍法 &lt;场景&gt; &lt;选择分支&gt; (75a) [+] ☐☐☐☐ (75b) [-] ☐☐☐☐ Day 24 (76) 诨名为“性的压榨” (77) 爱操心的哥哥 Day 25 - 文化祭 (9&#x2F;21) (78) 孤零兄妹 (79) 被玷污的天使 (80) 兄妹判定三杀守备 &lt;场景&gt; (81) 胜利投手 (82) 从今天起加入一发入魂教 [ED1] 尾声 - 学生会换届 (83) 从出生起就在身边 注：和泉智宏继任学生会会长，妃爱退出，华乃接替副会长职位。 后日谈 (84) 粉色是窗之弗朗明哥 (85) 打肿脸充胖子的幼儿play &lt;场景&gt; &lt;选择分支&gt; (86a) [+] 中程弹道火箭 (86b) [-] 外来入侵防治法 (87) 不过只要幸福就ok！ FIN 常盘华乃线攻略 (13) 充满希望的清晨 -&gt; (任选) (16) 学生会从今日起！ -&gt; [拜托常盘] (28) 我的就是你的？ -&gt; [优先说服常盘] (34) policemen -&gt; (任选) (44) 夏天！大海！女体盛！ -&gt; [和常盘一起走] (51) 谁先想出来“呜呼”这个词的 -&gt; [总有一天会自立的] (54) 谁叫是夏天呢 -&gt; (任选) Day 15 - 夏季漫窗 (57) 初次活动什么时候开始呢？ (58) ☐☐☐☐ &lt;场景&gt; (59) 刺猬是鼹鼠的好朋友 (60) 烤肉以人为本……！ Day 16 (61) 时机成熟 (62) 恋爱童贞症候群 (63) 家族游戏 Day 17 - 学生会暑期会议 (64) 大触都很触 (65) 也没tiger horse那么严重 (66) 不要！尽情蹂躏我吧！ &lt;场景&gt; (67) 阿宅的恋爱难比登天 Day 18 (68) 爱欲的每一天 Day 19 - 第二学期 (9&#x2F;1) (69) 2学期出道大作战 (70) 千玉学园学生会企划会议 Day 20 - 妃爱生日 (9&#x2F;5) (71) 强扭的瓜很甜……！ (72) 苹果派 &lt;场景&gt; &lt;选择分支&gt; (73a) [+] ※图片仅供参考 (73b) [-] ※图片仅供参考 (74) 乘着飞机弹射器 注：此处两个选择分支后续内容的小节名和内容都相同，但语言略有不同。 Day 21 (75) 在背阴处盛开 Day 22 - 文化祭 (9&#x2F;21) (76) 常轨脱离者之诗 (77) 免费的午餐最美味 (78) 奉献绝对特权！ &lt;场景&gt; (79) maid・in・黑历史 [ED2] 尾声 - 学生会换届 (80) 不是喜欢哇吗！？ 注：和泉智宏卸任学生会会长，华乃也退出。 后日谈 - 次年夏季漫窗 (81) 烤骨炙髓……！ &lt;场景&gt; (82) 埃罗芒阿大老师 &lt;场景&gt; &lt;选择分支&gt; (83a) [+] 特别特特别 (83b) [-] 出乎意料 (84) 竟是死宅 FIN 锦明日海线攻略 (13) 充满希望的清晨 -&gt; (任选) (16) 学生会从今日起！ -&gt; [和锦出门] (28) 我的就是你的？ -&gt; [优先挽留锦] (34) policemen -&gt; (任选) (44) 夏天！大海！女体盛！ -&gt; (任选) (51) 谁先想出来“呜呼”这个词的 -&gt; [总有一天会自立的] (54) 谁叫是夏天呢 -&gt; (任选) Day 15, 16, 17, 18, 19, 20 (57) 时薪10万日元的世界 (58) 原产地的酱油醋 (59) 天使不会挖鼻孔 (60) 小野妹子 (61) 略备薄利 (62) 小爱的冲绳秧鸡 Day 21 - 学生会暑期会议 (63) 和泉会长的爆肉刚体 Day 22 (64) 鸣门海峡的涡流 (65) 语言已经无法跟上心意 &lt;场景&gt; &lt;选择分支&gt; (66a) [+] 中尊寺金色堂 (66b) [-] 外环自动车道 (67) 迈出脚步的理由 Day 23 (68) 能工作72小时吗？ Day 24 - 第二学期 (9&#x2F;1) (69) 明日海真可爱啊！ (70) 天使之吻 &lt;场景&gt; &lt;选择分支&gt; (71a) [+] 黄盖 (71b) [-] 颜良 (72) 留下了世界上的一切 &lt;场景&gt; &lt;选择分支&gt; (73a) [+] 左舵全力 (73b) [-] 右舵全力 Day 25 (74) 3d男友 Day 26 (75) 脚是手的三倍 Day 27 (76) 何不食肉糜 (77) 挺起胸脯 &lt;场景&gt; &lt;选择分支&gt; (78a) [+] 中务省 (78b) [-] 大外记 Day 28 (79) 就像这样落了下来 Day 29 (80) 不是很帅气嘛 Day 30 - 文化祭 (9&#x2F;21) (81) 圣・莉莉莉子同学 (82) 烤肉味vs章鱼烧味 (83) 邂逅起便爱上了你 &lt;场景&gt; (84) vtuber很有趣 [ED3] 尾声 (85) 相模狮子丸之魂 注：和泉智宏卸任学生会会长。 后日谈 (86) 梦幻远点的vr1 (87) 梦幻远点的vr2 &lt;场景&gt; (88) 梦幻远点的vr3 FIN 镰仓诗樱线攻略 (13) 充满希望的清晨 -&gt; (任选) (16) 学生会从今日起！ -&gt; (任选) (28) 我的就是你的？ -&gt; (与上述分支相反) (34) policemen -&gt; [斯巴达式] (44) 夏天！大海！女体盛！ -&gt; [和诗樱前辈一起去] (45b) 不毛地带 -&gt; [去] (51) 谁先想出来“呜呼”这个词的 -&gt; [总有一天会自立的] (54) 谁叫是夏天呢 -&gt; [去钓鱼] Day 15, 16, 17, 18, 19 (57) 这个选项还有印象吗？ (58) 蜜柑之歌 (59) 鼯鼠 (60) 才不会输给忙碌 (61) 故乡令人喜 Day 20 - 学生会暑期会议 (62) 竹篮打水一场空的干劲 Day 21 (63) w Day 22 (64) 明日海：“前辈，你好吗” Day 23 - 第二学期 (9&#x2F;1) (65) 手指停不下来 (66) 向镰仓进发 (67) 月色真美 (68) 御恩奉公 &lt;场景&gt; (69) 坛之浦之战 Day 24 - 车祸 (70) 镰仓时代 (71) 宝治合战 &lt;场景&gt; (72) 蒙古入侵绘卷 Day 25 - 出院 (9&#x2F;20) (73) 战士的休息 (74) 星月夜 &lt;场景&gt; (75) 1333年 Day 26 - 文化祭 (9&#x2F;21) (76) 即便如此镰仓幕府也要存续 [ED4] 尾声 - 康复 (77) 女王却憧憬奴隶 (78) 建武新政 &lt;场景&gt; &lt;选择分支&gt; (79a) [+] 中先代之乱 (79b) [-] 外先代之乱 (80) 太平记 注： 镰仓幕府 (1192 - 1333) 是日本历史上第一个武家政权。 1333 年，后醍醐天皇推翻了镰仓幕府。 1333 - 1336 年，后醍醐天皇实施建武新政，不受武家支持配合而失败。 1335 年，镰仓幕府执权北条高时的遗孤北条时兴发动「中先代之乱」，但失败。 「太平纪」一书记载了 1318 - 1368 年间的日本历史。 尾声 2 - 次年新生入学 (81) 樱之诗 注：和泉智宏继任学生会会长，妃爱退出，诗樱接替副会长职位。 后日谈 - 次年夏季 (82) jeeep! (83) 桃乃李子亦是大腿 &lt;场景&gt; FIN 单身线攻略 (13) 充满希望的清晨 -&gt; (任选) (16) 学生会从今日起！ -&gt; (任选) (28) 我的就是你的？ -&gt; (与上述分支相反) (34) policemen -&gt; (任选) (44) 夏天！大海！女体盛！ -&gt; [和诗樱前辈一起去] (45b) 不毛地带 -&gt; [还是免了吧] (51) 谁先想出来“呜呼”这个词的 -&gt; [让她养我] (54) 谁叫是夏天呢 -&gt; [去钓鱼] Day 15 (57) 真走运嘛 注：单身线没有转场，直接进入Day 15。 FIN"},{"title":"暮しガスメータ / 電ǂ鯨 节奏考证 (无弱起版)","path":"/misc/Kurashi.html","content":"表例橙色：表示下一段开头抢 1 拍青色：表示这一段结尾额外有一个四分休止符。因此下一段开头抢 2 拍 歌词节奏时间翻译 BPM 130 Intro4/4 x 10 [1:1-10:4] Verse 1(3/4+4/4+4/4+5/4) x 4 [11:1-26:4] 郊外　萎びた町の集合住宅のぬるい空気3+4+4+511:1-14:4凋敝的城镇 郊区的公寓 微热的空气 惨めに僕を殺さないで。3+415:1-16:3不要杀死我 弃于凄惨间 どうか、心を奪わないで。4+516:4-18:4还请你不要 夺走我的心 君は、僕の大事ながらくたになった友達を3+4+4+519:1-22:4是你 对着我生锈了的重要朋友 「おもちゃになってしまったね」と3+423:1-24:3说着「变成玩具了呢」 そんな風に、懐かしそうに笑わないで。4+(4+1)24:4-26:4然后怀念般地笑着 Verse 24/4 x 8 (抢1拍,多1拍) [26:4-34:4] また、遠足前の夜中に住む4+426:4-28:3而今 远足前的夜晚 たくさんの腐ったこどもたちが4+428:4-30:3许多 腐烂的孩子们 なお明日のことがいとほしくなって泣くんだ4+430:4-32:3仍在 渴望明日而泣/td> 耳をふさいで寝るといい。4+(4+1)32:4-34:4只好 蒙住耳朵 寻求安眠 Interlude 14/4 x 8 (抢2拍,多2拍) [34:3-42:4] 暮しは続いてゆく。生活还在继续 Verse 3(3/4+4/4+4/4+5/4) x 2 [43:1-50:4] 正午にまた眠くなる3+443:1-44:3今日安心轻抚我 安心があやしてくれる今日に4+543:1-46:4正午催促我入眠 僕らの体は錆びついた3+447:1-48:3不觉身体已生锈 ついに錆びついてしまったんだ4+(4+1)48:4-50:4不知此期终将至 Pre-Chorus 14/4 x 9 (抢1拍,多1拍) [50:4-59:4] だが、それがいくら憎らしくても4+450:4-52:3不过 就算再讨厌 僕たちの暮らしてしまう日々は。4+452:4-54:3这是 我们生活的日子 ああ洗濯の取り込みがまだだって気づいて4+454:4-56:3啊啊 衣服还没收 空と遊んで崩れた両の4+456:4-58:3伸出 崩坏的双手 手を伸ばす(4+1)58:4-59:4与天空游戏 Chorus 1(5+6+6)/4+(4+6+6)/4 (抢2拍,多1拍) [59:3-67:4] 暮しガスメータ559:3-60:3生计只需煤气表 安心の代金は郵便局で払う6+660:4-63:3在邮局付清安心的代价 暮しガスメータ463:4-64:3生计除了煤气表 他にも安心はコンビニエンスで百うん十円6+(6+1)64:4-67:4其他的安心在便利店也只需百十元 Chorus 1(5+6+6)/4+(4+6+6)/4 (抢2拍,多1拍) [67:3-75:4] 暮しガスメータ567:3-68:3生计只需煤气表 幽霊は夜笑い668:4-70:1幽灵夜里发笑 僕はまた困る670:2-71:3我又陷入困扰 暮しガスメータ471:4-72:3生计除了煤气表 みだりな安心はコンビニエンスで百うん十円6+(6+1)72:4-75:4胡闹般的安心在便利店也只需百十元 Interlude 24/4 x 8 (抢1拍) [76:1-83:4] あおい：ダンス踊って？　ダンスダンス476葵：一起跳舞吗？跳舞跳舞 あかね：ダンス踊って？　ダンスっす。477茜：一起跳舞吗？我们在跳哦 あおい：ほらダンス踊って？　ダンスダンス478葵：来吧一起跳舞吧？跳舞跳舞 あかね：ダンス踊ってよ。279:1-79:2茜：就一起来跳舞嘛 きりたん：ヤダヤダ。279:3-79:4（不要不要。） あおい：ダンス踊って？　ダンスダンス480葵：一起跳舞吗？跳舞跳舞 あかね：ダンス踊って？　ダンスっす。481茜：一起跳舞吗？我们在跳哦 あおい：ほらダンス踊って？　ダンスダンス482葵：来吧一起跳舞吧？跳舞跳舞 あかね：ダンス踊ってよ。283:1-83:2茜：就一起来跳舞嘛 きりたん：...できない！！283:3-83:4（……我做不到！！） Interlude 34/4 x 8 [84:1-91:4] （生活） Pre-Chorus 24/4 x 9 (抢1拍,多1拍) [91:4-100:4] 昔むかしに恥じた日々と4+491:4-93:3这是很久前令我羞愧的 重なってしまった物語だ4+493:4-95:3日子里诞生的故事 こどもたちの笑う声が膨らんで濁った4+495:4-97:3孩子们的笑声越发响亮而嘶哑 君を騙してしまうような4+497:4-99:3就算是能骗过你的 嘘でもいい。(4+1)99:4-100:4谎言也好啊 Chorus 2(5+6+6)/4+(4+6+6)/4 (抢2拍,多1拍) [100:3-108:4] 暮しガスメータ5100:3-101:3生计只需煤气表 不意になればいい6101:4-103:1指针在不意间滑过 僕はまた曇る6103:2-104:3我又陷入不安 暮しガスメータ4104:4-105:3生计除了煤气表 孤独の詰め合わせ6105:4-107:1还有一份孤独的大杂烩 団地A棟の狭い空の下(6+1)107:2-108:4在小区A栋的狭隘天空下 Chorus 2(5+6+6)/4+(4+6+6)/4 (抢2拍,多1拍) [108:3-116:4] 暮しが滑った5108:3-109:3生活不意间滑落 午睡のふりをして君が事切れる6+6109:4-112:3假装午睡的你就这样离去 現実＝幻想な気がして4+3112:4-114:2留下感觉现实如同幻想般的我 写真写真3114:3-115:1任随照片与照片 団地A棟の空に撒いている(6+1)115:2-116:4在小区A栋的低空滑翔 Outro[117:1-119:3] 备注很多段落的结尾是个四分休止符。如果空拍算前一小节，那就和全程 4&#x2F;4 拍下的小节对齐。但由于此时下一段落已经开始，也可以算后一小节，这种情况下，相当于后一小节少抢 1 拍。空拍全部算前一小节的解释见下：Intro: 4&#x2F;4 x 10 [1:1-10:4]Verse 1: (3&#x2F;4+4&#x2F;4+4&#x2F;4+5&#x2F;4) x 4 (结尾-1拍) [11:1-26:3]Verse 2: 4&#x2F;4 x 8 (结尾+1拍) [26:4-34:4]Interlude 1: 4&#x2F;4 x 8 (抢2拍) [34:3-42:4]Verse 3: (3&#x2F;4+4&#x2F;4+4&#x2F;4+5&#x2F;4) x 2 (结尾-1拍) [43:1-50:3]Pre-Chorus 1: 4&#x2F;4 x 9 (结尾+1拍) [50:4-59:4]Chorus 1: (5+6+6)&#x2F;4+(4+6+7)&#x2F;4 (抢2拍) [59:3-67:4]Chorus 1: (5+6+6)&#x2F;4+(4+6+7)&#x2F;4 (抢2拍) [67:3-75:4]Interlude 2: 4&#x2F;4 x 8 [76:1-83:4]Interlude 3: 4&#x2F;4 x 8 [84:1-91:4]Pre-Chorus 2: 4&#x2F;4 x 9 (抢1拍, 结尾+1拍) [91:4-100:4]Chorus 2: (5+6+6)&#x2F;4+(4+6+7)&#x2F;4 (抢2拍) [100:3-108:4]Chorus 2: (5+6+6)&#x2F;4+(4+6+7)&#x2F;4 (抢2拍) [108:3-116:4]Outro: 4&#x2F;4 x 3 [117:1-119:4]空拍全部算后一小节的解释见下：Intro: 4&#x2F;4 x 10 [1:1-10:4]Verse 1: (3&#x2F;4+4&#x2F;4+4&#x2F;4+5&#x2F;4) x 4 (结尾-1拍) [11:1-26:3]Verse 2: 4&#x2F;4 x 8 [26:4-34:3]Interlude 1: 4&#x2F;4 x 8 (开头+1拍, 抢1拍) [34:3-42:4]Verse 3: (3&#x2F;4+4&#x2F;4+4&#x2F;4+5&#x2F;4) x 2 (结尾-1拍) [43:1-50:3]Pre-Chorus 1: 4&#x2F;4 x 9 [50:4-59:3]Chorus 1: (6+6+6)&#x2F;4 + (4+6+6)&#x2F;2 (抢1拍) [59:3-67:3]Chorus 1: (6+6+6)&#x2F;4 + (4+6+6)&#x2F;2 (抢1拍) [67:3-75:3]Interlude 2: 4&#x2F;4 x 8 [76:1-83:4]Interlude 3: 4&#x2F;4 x 8 [84:1-91:4]Pre-Chorus 2: 4&#x2F;4 x 9 (开头-1拍) [92:1-100:3]Chorus 2: (6+6+6)&#x2F;4 + (4+6+6)&#x2F;2 (抢1拍) [100:3-108:3]Chorus 2: (6+6+6)&#x2F;4 + (4+6+6)&#x2F;2 (抢1拍) [108:3-116:3]Outro: 4&#x2F;4 x 3 [117:1-119:4]"},{"title":"笔记：日语动词活用型","path":"/misc/Japanese1.html","content":"我虽然自学日语有一段时间了，达到了 N3 水平，但是一直没有系统地学习过，新近买了《标准日本语（中级）》，打算先攻克一下基础知识的漏洞。 虽然我一直用 Evernote 做笔记（境外访问印象笔记太慢了，境内访问 Evernote 还可以），但是这么重要的内容有必要仔细整理一下；既然花了这么多时间，就顺便分享出来，希望对你有所帮助。 以下内容仅为个人理解。 由于我一直查阅日-英词典，和英文的日语学习站点，可能与《标日》无法完全对应，也可能有错漏，欢迎指正。 词典：Jisho 资料：Tofugu, Japanistry 活用工具：Japanese Conjugator 维基百科：活用 概念定义单词（仅包括动词、形容词、形容动词、助动词）根据语法功能的不同发生词形变化，称为活用。 形式教育文法的活用型 = 语干+词尾+接续词 语干：表示单词的含义，在活用中不变 词尾：表示语法功能，在活用中变化 接续词：助动词或助词，表示语法功能，不是单词的一部分 学校文法与教育文法 学校文法：日本人在学校学习的文法，《标日》也使用学校文法 教育文法：面向外国人的日语教育文法，词典和英文资料一般使用教育文法 最大的区别在于： 学校文法教的是「形」，教育文法教的是「用」 学校文法：以词尾为基础，将活用分为六种形式（未然形、连用形、终止形、连体形、假定形、命令形） 教育文法：以语法功能为基础，根据词尾和接续词将活用分为大量用法 活用形分类 学校文法 教育文法 词尾 接续词 未然形（あ） +ない 否定形 (Negative) +れる/られる 受身形 (Passive) 可能形 (Potential)1 +せる/させる 使役形 (Causative) 未然形音便 +う/よう 意志形 (Volitional) 连用形（い） +ます 敬体形 (Polite) 连用形音便 +て て形 +た た形 终止形（う）2 辞书形 (Dictionary) 连体形（う）2 假定形（え） +ば 条件形 (Conditional) 命令形 命令形 (Imperative) 可能动词 可能形 (Potential)1 备注某些版本的学校文法将 未然形（あ）+れる/られる 单独归为一类，称为 可能动词。方便起见，下文表格中将可能形单独列出。在现代日语中，连体形和终止形的形式一致。连体形和终止形的不同之处是连体形后接「こと」「とき」等体言 (substantive word)。下文不作区分。 动词分类更准确地讲，应该称为 活用种类。 学校文法 教育文法 定义 五段活用 1类 活用时词尾可能为あ、い、う、え、お段 上一段活用 2类 以-いる结尾，活用时词尾始终为い段 下一段活用 以-える结尾，活用时词尾始终为え段 カ变活用 3类 仅有来(く)る サ变活用 仅有する和‐する／‐ずる结尾的动词 活用形简表关于样式默认：词干橙色：词尾粉色：接续词人眼感受到相同强度的不同颜色的亮度是不同的，具体而言是绿色 &gt; 红色 &gt; 蓝色。但是，为了保证在浅色和深色模式下都具有良好的可读性，红色系的颜色比起绿色和蓝色系是更好的选择。因此，这个配色方案比维基百科更好，更能突出重点。 活用种类 终止形～う 未然形～あ 连用形～い 假定形～え 命令形～え 可能形～える 辞书形 否定形+ない 受身形+られる 使役形+させる 意志形+う 敬体形+ます て形+て た形+た 条件形+ば 五段活用 ～う ～あない ～あれる ～あせる ～おう音便 ～います ～いて音便 ～いた音便 ～えば ～え ～える 上一段活用 ～いる ～いない ～いられる ～いさせる ～いよう ～います ～いて ～いた ～いれば ～いろ ～いられる 下一段活用 ～える ～えない ～えられる ～えさせる ～えよう ～えます ～えて ～えた ～えれば ～えろ ～えられる カ变活用和サ变活用的词尾变化与一段活用类似，但不同点在于：它们的词干在活用时也会发生变化（读音改变）。详情参见下表。 活用形详表 活用种类 终止形～う 未然形～あ 连用形～い 假定形～え 命令形～え 可能形～える 辞书形 否定形+ない 受身形+られる 使役形+させる 意志形+う 敬体形+ます て形+て た形+た 条件形+ば 五段活用 ‐う 使(つか)う 使わない1 使われる 使わせる 使おう 使います ～って ～った 使えば 使え 使える2 ‐つ 持(も)つ 持たない 持たれる 持たせる 持とう 持ちます 持てば 持て 持てる ‐る 取(と)る 取らない 取られる 取らせる 取ろう 取ります 取れば 取れ 取れる ‐く 置(お)く 置かない 置かれる 置かせる 置こう 置きます 置いて 置いた 置けば 置け 置ける ‐ぐ 注(そそ)ぐ 注がない 注がれる 注がせる 注ごう 注ぎます 注いで 注いだ3 注げば 注げ 注げる ‐ぶ 呼(よ)ぶ 呼ばない 呼ばれる 呼ばせる 呼ぼう 呼びます ～んで ～んだ3 呼べば 呼べ 呼べる ‐む 休(やす)む 休まない 休まれる 休ませる 休もう 休みます 休めば 休め 休める ‐ぬ 死(し)ぬ4 死なない 死なれる 死なせる 死のう 死にます 死ねば 死ね 死ねる ‐す 話(はな)す 話さない 話される 話させる 話そう 話します 話して 話した 話せば 話せ 話せる 上一段活用 ‐いる 見(み)る5 見ない 見られる 見させる 見よう 見ます 見て 見た 見れば 見ろ6 見られる7 下一段活用 ‐える 受(う)ける5 受けない 受けられる 受けさせる 受けよう 受けます 受けて 受けた 受ければ 受けろ6 受けられる7 カ变活用 来る くる こない こられる こさせる こよう きます きて きた くれば こい6 こられる7 サ变活用 する する しない される させる しよう します して した すれば しろ6 できる8 备注‐う在未然形中变为-わ而非-あ，这是因为历史假名遣中的「は、ひ、ふ、へ、ほ」的发音相当于现代假名遣中的「わ、い、う、え、お」，但在活用中保留了这种音便。若将五段动词的可能形视为一种独立的活用形，那么「‐える」是词尾而非接续词（因此此处标注为“使える”），并且这样形成的可能动词属于下一段活用。～だ是～た的音便形式，与助动词「だ」无关。死ぬ（及其衍生词）是现代日语中仅有的‐ぬ五段动词。受限于其意义，死ぬ的活用形中某些无法用到，但为了完整性，仍然列出。上一段活用动词的词尾是‐いる部分，即‐る和它之前的い段假名。在活用时，总是去る后在‐い的词尾后面加上接续词。如果单词的词典形只有两个假名，那整个单词都是词尾，没有词干；这里给出的“見る”即无词干的例子。下一段假名同理，这里给出的“受ける”是有词干的例子。上、下一段，カ变、サ变活用动词的命令形还可以将「ろ」换成「よ」，例如「見ろ→見よ」、「受けろ→受けよ」、「来い→来よ」、「しろ→せよ」。与五段动词不同的是，上、下一段活用动词的可能形与其受身形相同，即「～られる」，并不能视为独立的活用形，「‐える」视为接续词而非词尾（因此此处标注为“受けられる”）。「できる（出来る）」是上一段活用动词，在现代日语中用作「する」的可能形。因此，此处并不存在词尾和接续词的区分。","categories":[null]},{"title":"Two Pointers","path":"/misc/2pointers.html","content":"Read Before ProceedingThis article is still under construction.In addition, it contains GPT-3.5 generated text, which may not be accurate or reliable. Please read with caution.This article was created on 2023-06-08. Have fun reading! DescriptionTwo pointers is a technique that is used to solve problems by iterating through the list with two pointers at different positions. As we only consider singly linked list in this chapter, the two pointers are usually called fast and slow pointers. The fast pointer moves at double speed or starts at a different position than the slow pointer. While the fast pointer iterates through the list, the slow pointer tracks the position of desired node or element. Things to take care of when using two pointers: Check if a pointer is null before accessing its value or next node. Consider special cases, especially when the list is empty or has only one node. This can usually be mitigated by using a dummy node pointing to the head of the list. ExamplesType 1: Two pointers with different speedIn all the following examples, the fast pointer moves at double speed of the slow pointer. Find the middle of a linked listGiven a linked list, find the middle node of the list. Solution: the fast pointer reaches the end of the list when the slow pointer reaches the middle of the list. 123456789def middleNode(self, head: ListNode) -&gt; ListNode: if not head or not head.next: return head slow = head fast = head while fast and fast.next: slow = slow.next fast = fast.next.next return slow Check if a linked list has a cycleGiven a linked list, determine if it has a cycle in it (which, if exists, starts from the tail and connects to some node in the list). Solution: if there is a cycle in the linked list, the fast pointer will eventually meet the slow pointer. Otherwise, the fast pointer will reach the end of the list. 1234567891011def hasCycle(self, head: ListNode) -&gt; bool: if not head or not head.next: return False slow = head fast = head.next while slow != fast: if not fast or not fast.next: return False slow = slow.next fast = fast.next.next return True Find the start of a cycle in a linked listThe same problem as above, but this time we need to return the node where the cycle starts. Solution: after the fast and slow pointers meet, we reset the slow pointer to the head of the list and move both pointers at the same speed. The node where the two pointers meet is the start of the cycle. 1234567891011121314151617def detectCycle(self, head: ListNode) -&gt; ListNode: if not head or not head.next: return None slow = head fast = head while True: if not fast or not fast.next: return None slow = slow.next fast = fast.next.next if slow == fast: break slow = head while slow != fast: slow = slow.next fast = fast.next return slow Type 2: Two pointers with different start positionsFind the k-th node from the end of a linked listGiven a linked list, find the k-th node from the end of the list. Solution: we first move the fast pointer k steps forward. Then we move both pointers at the same speed until the fast pointer reaches the end of the list. The slow pointer is the k-th node from the end of the list. Dummy node is used to handle the case where the list has less than k nodes. 1234567891011def getKthFromEnd(self, head: ListNode, k: int) -&gt; ListNode: dummy = ListNode(0) dummy.next = head slow = dummy fast = dummy for _ in range(k): fast = fast.next while fast: slow = slow.next fast = fast.next return slow","categories":[null]},{"title":"Majsoul Rank System","path":"/misc/Majsoul.html","content":"Introduction Majsoul uses a ladder system to rank players. You starts from the lowest rank, gaining points by performing well in matches, and promote to higher ranks when you have enough points. You will also lose points and demote. Every match is considered separate and the point changes are only based on the match results. There are three servers: China (operated by Catfood), Japan (operated by Yostar), and Global (operated by Yostar). Rank and leaderboard are separate for each server, even though you can match with players from other servers. There are two ranks for every player: 4P (4-player) and 3P (3-player). The two ranks are independent of each other, with same ranking system but different point calculation. RoomsThere are five levels of ranked rooms. Within each level, you can choose to play E (east-only) or S (east-south) rounds. You can only enter rooms corresponding to your rank. For example, if you are a 4P Saint and 3P Expert, you can enter 4P Jade or Throne room, and 3P Silver or Gold room, but not any other rooms. Room Rank Req 4P East 4P South 3P East 3P South Bronze Novice - Adept 10&#x2F;5&#x2F;0&#x2F;- 20&#x2F;10&#x2F;0&#x2F;- 15&#x2F;0&#x2F;- 30&#x2F;0&#x2F;- Silver Adept - Expert 20&#x2F;10&#x2F;0&#x2F;- 40&#x2F;20&#x2F;0&#x2F;- 30&#x2F;0&#x2F;- 60&#x2F;0&#x2F;- Gold Expert - Master 40&#x2F;20&#x2F;0&#x2F;- 80&#x2F;40&#x2F;0&#x2F;- 55&#x2F;0&#x2F;- 105&#x2F;0&#x2F;- Jade Master - Saint 55&#x2F;30&#x2F;0&#x2F;- 110&#x2F;55&#x2F;0&#x2F;- 75&#x2F;0&#x2F;- 160&#x2F;0&#x2F;- Throne Saint - Celestial 60&#x2F;30&#x2F;0&#x2F;- 120&#x2F;60&#x2F;0&#x2F;- 120&#x2F;0&#x2F;- 240&#x2F;0&#x2F;- The last four columns denote the point changes for 1st&#x2F;2nd&#x2F;3rd&#x2F;4th place. This is not the only factor that determines the point changes. Please refer to the Calculation section for more details. RanksThere are 6 main ranks, from lowest to highest: Novice (初心) Adept (雀士) Expert (雀傑) Master (雀豪) Saint (雀聖) Celestial (魂天) Ranks from Novice to Saint each has 3 levels, numbered 1 to 3 from lowest to highest. Celestial has a different level system, with up to 20 levels. Details of the rank requirements are listed below: Rank Start&#x2F;Req Points 4P 4th Penalty (E&#x2F;S) 3P 3rd Penalty (E&#x2F;S) Novice 1 0&#x2F;20 0&#x2F;0 0&#x2F;0 Novice 2 0&#x2F;80 0&#x2F;0 0&#x2F;0 Novice 3 0&#x2F;200 0&#x2F;0 0&#x2F;0 Adept 1 300&#x2F;600 10&#x2F;20 10&#x2F;20 Adept 2 400&#x2F;800 20&#x2F;40 20&#x2F;40 Adept 3 500&#x2F;1000 30&#x2F;60 30&#x2F;60 Expert 1 600&#x2F;1200 40&#x2F;80 40&#x2F;80 Expert 2 700&#x2F;1400 50&#x2F;100 50&#x2F;100 Expert 3 1000&#x2F;2000 60&#x2F;120 60&#x2F;120 Master 1 1400&#x2F;2800 80&#x2F;165 80&#x2F;165 Master 2 1600&#x2F;3200 90&#x2F;180 95&#x2F;190 Master 3 1800&#x2F;3600 100&#x2F;195 110&#x2F;215 Saint 1 2000&#x2F;4000 110&#x2F;210 125&#x2F;240 Saint 2 3000&#x2F;6000 120&#x2F;225 140&#x2F;265 Saint 3 4500&#x2F;9000 130&#x2F;240 155&#x2F;290 Celestial N&#x2F;A N&#x2F;A N&#x2F;A The 4P 4th Penalty and 3P 3rd Penalty columns denote the point penalty for 4th place in 4P rooms and 3rd place in 3P rooms. That’s why the 4P 4th place point change and 3P 3rd place point change are ignored in the room table above - this is dependent on the rank, instead of the room."},{"title":"恋爱绮谭系列 全流程攻略","path":"/misc/Mystery.html","content":"名词解释关键选择支选择带(*)的选项才能推进剧情。 选择错误选项会提前进入结局。 无关选择支选择任意选项均能推进剧情。 带(#)的选项为符合剧情的选项。 容错选择支选择带(#)的选项才能推进剧情。 选择其他选项会要求重新选择。 全选选择支选择所有选项才能推进剧情。 按照任意顺序均可。 强制选择支单个或一连串选择支，每次只展示一个。 恋爱绮谭 不存在的夏天Chapter 00 套中人视角：饼干 直播1：最初的直播 Chapter 01 憧憬的非日常日期：2022年7月1日（星期五） 视角：顾韦 直播2：红衣男孩1 Chapter 02 春宵苦短日期：7月1日 无关选择支： 哎，那照片很恶心的。 好，我这就发给你。 回忆：4月5日（星期二） Chapter 03 侦探们的活跃日期：7月1日 直播3：红衣男孩2 Chapter 04 金木犀的季节日期：7月1日 回忆：6月4日（星期六） Chapter 05 等你下课日期：7月1日 Chapter 06 猫之日日期：7月4日（星期一） Chapter 07 雨中曲日期：7月5日（星期二） 回忆：6月25日（星期六） Chapter 08 飞鸟与蝉日期：7月5日 梦境 Chapter 09 消失的夏天日期：7月5日-&gt;7月6日 Chapter 10 回忆之街日期：7月6日（星期三） Chapter 11 假女友日期：7月7日（星期四） Chapter 12 复杂人生日期：7月7日 关键选择支： …………(End 01) 没事，让我安静一下。(*) 关键选择支： …………(End 01) 这算不算我少有的不普通的地方？(*) 关键选择支： …………(End 01) 谢谢，我自己就行。(*) 全选选择支： 最后一次见到半夏是在前天 她来顾真真家的别墅 参加我们的社团聚会 全选选择支： 我们先聊了一些我从知否上学来的东西 她在这个阶段吃了酒心巧克力 全选选择支： 我和她一起去游泳池游了泳 她的泳衣很漂亮 她还教了我游泳 全选选择支： 我们一起在沙发上睡着了 我做了一个关于梦野瞳的梦 醒来时她就不见了 直播：红衣男孩3 梦境 End 01 玫瑰色的大学生活日期：约2024年夏（2年后） 条件：在 Chapter 12 的三个关键选择支中，至少有一个选择错误选项。 不会立即进入（选择错误选项，会先呈现完三个关键选择支，然后进入 End 01）。 Chapter 13 正后方的人是谁日期：7月7日 关键选择支： …………(End 02) 我去调查了。(*) End 02 红衣男孩条件：在 Chapter 13 的关键选择支中，选择错误选项。 Chapter 14 红衣男孩日期：7月7日 直播：红衣男孩4 Chapter 15 快乐王子日期：7月7日 直播：江城火灾怪异事件 无关选择支： 一层和二层分别住着两户人家。 年轻的夫妻跑去救孩子，却被大火困在了房间中。 无计可施的他们搭起人梯。 Chapter 16 雅努斯日期：7月8日（星期五） Chapter 17 拼凑的断音日期：7月8日 容错选择支： 你本来就戴着眼镜，再戴隐形眼镜不麻烦吗？ 你怕隐形眼镜会给你带来“业力”。 你怕给我带来额外的负担。(#) Chapter 18 未来的观测者日期：7月8日 Chapter 19 自行车侦探日期：7月8日 Chapter 20 打回原形日期：7月8日 容错选择支： 妹妹(#) 真真 部长 全选选择支： 瞳神最高为什么要把这件事放在网络上公开讨论？ 二楼的夫妻为什么没有试图打开防火卷帘门。 火灾到底是不是纵火？ 死亡的夫妻搭起人梯救出孩子。 Chapter 21 小白船日期：7月8日 Chapter 22 普通的饼干日期：7月8日 关键选择支： 因为你恨你的父母。(End 03) 因为你想知道真相。(*) 关键选择支： 因为高额保险。(End 03) 因为要陷害他人。(*) End 03 像我这样平凡的人条件：在 Chapter 22 的两个关键选择支中，任一选择错误选项。 会立即进入（第一个选择错误选项，不再出现第二个选择支，直接进入 End 03）。 Chapter 23 昨日重现日期：7月9日（星期六） 回忆视角：顾韦 Chapter 24 夏影回忆视角：顾韦 Chapter 25 铃兰日期：7月9日 直播：画皮新编 Chapter 26 一万万日期：7月9日 回忆：7月5日&#x2F;视角：苏半夏 关键选择支： 调查完了，我把钥匙给你送回去吧。(End 04) 抱歉，还需要再用一下，再借我一下。(*) End 04 回不去的约会日期：约2032年（10年后） 条件：在 Chapter 26 的关键选择支中，选择错误选项。 Chapter 27 不存在的幸福理论日期：7月10日（星期日） 回忆视角：夏天 Chapter 28 说不出的秘密日期：7月10日 回忆视角：苏溯&#x2F;苏半夏 Chapter 29 灰色与青回忆视角：苏半夏 Chapter 30 黑尾鸥日期：7月10日 关键选择支： 上楼，去见半夏。(*) 离开，这不是我应该继续涉足的事情。(End 05) 关键选择支： 苏溯(End 05) 夏天(End 05) 苏半夏(*) 强制选择支： 你为什么还在说这些。 我都和你说了结婚誓言了。 无论顺境还是逆境， 无论贫穷还是富贵， 无论健康还是疾病， 我都会和你分担寒潮、风雷、霹雳， 也会和你共享雾霭、流岚、虹霓。 我以我的生命发誓， 苏半夏将会是我生命里永远的主角， 那么，你愿意吗？ 你一点一滴的过去，我都记在了心里， 这个世界上，不会有比我更了解你的人了。 那就等到法定年龄。 我们可以去荷兰，去比利时，去西班牙，去冰岛，去新西兰， 还有好多好多别的地方。 那就不生。 我又不是和我的孩子结婚的。 如果你想要孩子的话，我们就去领养一个，男孩女孩随你。 我根本不是为了安慰你。 我遇到的苏半夏，并不是谁的仿制品，也不是谁的假面具。 她就是苏半夏，她就在这里。 就算你一开始对我全部坦白， 我想，我也会爱上你的。 我相信那句话—— 不以结婚为目的的恋爱，都是耍流氓。 所有的事情我都会计划好。 不管最后结局如何，我都会和你结婚。 那么，你愿意吗？ (抱住她) End 05 我们都有光明的未来条件：在 Chapter 30 的两个关键选择支中，任一选择错误选项。 会立即进入（第一个选择错误选项，不再出现第二个选择支，直接进入 End 05）。 Chapter 31 最佳损友日期：7月12日（星期二） Chapter 32 无法触及的你日期：7月12日 强制选择支： 我没有那么天真，只是不想在最后时刻，还被人随意安排。 那为什么在你第一次见到隐形眼镜的时候，你就知道隐形眼镜有两只！ 自称要隔开普通人和怪异的人，却只拿走了我的手机，没有拿走眼镜。 这合理吗？ 那么，为什么她们只离开了十几分钟， 电视，游戏机和她们坐过的地方就冰冷到没有一点温度。 钟齐北，今天到底是几号？ 你敢不敢现在和我出门，去确认一下日期！ 实际日期：7月13日（星期三） 关键选择支： 我会反抗命运(End 06) 我要拯救半夏(*) End 06 消失的夏天日期：约2032年（10年后） 条件：在 Chapter 32 的关键选择支中，选择错误选项。 Chapter 33 完美的夏天日期：7月21日（星期四；世界线改变） 视角：苏半夏 True End视角：顾唯 真实视角：白永 恋爱绮谭 不存在的真相Chapter 00 刺杀记者团长 游戏内未直接标注日期，但是根据游戏内的时间线，可以推测出日期。日期：2023年1月2日（星期一） 真实日期：2022年7月21日（星期四）——靶子：白永旧世界线真实日期：2021年1月2日（星期六）——靶子：Bio 视角：“靶子”（主视角自称） 真实视角：白永白永未能成功刺杀Guest，且洋片箱落入Guest手中。 容错选择支： 颠倒第二张和第三张底片的位置(#) 颠倒第一张和第二张底片的位置 颠倒第一张和第三张底片的位置 此处容错选择支选错，错误选项会消失。 Chapter 01 布衣视角：顾唯 日期：2022年9月30日（星期五） 无关选择支： 选A 选B 选C(#) 选D Chapter 02 感电日期：10月1日（星期六） 直播：10月1日凌晨 Chapter 03 夜的第七章日期：10月1日 Chapter 04 美好的事可不可以发生在我身上日期：10月1日 Chapter 05 搁浅的人日期：10月1日-&gt;10月2日 Chapter 06 谎言日期：10月2日（星期日） 无关选择支： 跟陈墨去调查 跟真真去调查(#) Chapter 07 水星记日期：10月3日（星期一） 无关选择支： 严谨客观 贩卖情绪 Chapter 08 沉默的真相日期：10月3日 无关选择支： 盲信我的回答……这样好吗？ 听起来很有道理，但是不是太武断了？ Chapter 09 秘密基地日期：10月7日（星期五） Chapter 10 雨声残响日期：10月7日 视角：顾真真-&gt;顾唯 无关选择支： 挤在这么窄的地方，对不起。 我的身上是不是有汗味，对不起。 Opening MovieChapter 11 明日的江城哨戒班日期：11月5日（星期六） 无关选择支： 严谨客观 别出心裁 Chapter 12 心中日期：11月12日（星期六） Chapter 13 凉雨日期：11月12日 Chapter 14 我的身边是一扇暗了又暗的窗日期：11月12日-&gt;11月13日 Chapter 15 假面舞会日期：11月13日（星期日） 全选选择支： 我的记忆…… 钟齐北的证据 真真和陈墨的态度 Chapter 16 盛夏日期：11月13日-&gt;11月14日 视角：顾唯-&gt;苏半夏 Chapter 17 被生命所厌恶日期：11月14日（星期一） 直播：11月14日深夜 Chapter 18 金苇花日期：11月14日-&gt;11月15日清晨 无关选择支： 我对怪异有点兴趣。 因为喜欢小瞳。 无关选择支： 我喜欢的人 喜欢我的人 无关选择支： 把钱交给一个人管 AA吧 关键选择支： 担心真真(顾真真线) 在意陈墨(陈墨线) 想到半夏(苏半夏线) 本作的后续剧情走向取决且只取决于此处的关键选择支。 不考虑苏半夏支线，有且只有两种可能：先走顾真真线，再走陈墨线；先走陈墨线，再走顾真真线。无论哪种情况，都需要先到 Chapter 26，然后回到 Chapter 18，再选择关键选择支。此时，无法选择已经选择过的选项，游戏再次进行到 Chapter 26，进入胜天半子线。 苏半夏线Chapter 19 城市傍晚日期：11月15日（星期二）-&gt;2023年1月25日（星期三，年初四） 日期：2025年10月1日（3年后） 无关选择支： 陈墨 真真 End 01 不存在的夏 住在他心里的人，并不是她。她寻找的脚步，亦没有停下。在那做梦的人的梦中，被梦见的人还未醒来。 顾真真线 前半 (19-22)Chapter 19 如果明天你变了日期：11月15日（星期二） 强制选择支： 握住她的手 Chapter 20 非自然影像回忆：11月12日-&gt;11月13日&#x2F;视角：顾真真 日期：11月15日深夜 Chapter 21 猛兽回忆：11月12日&#x2F;视角：靶子 日期：11月15日深夜&#x2F;视角：靶子-&gt;Guest 日期：11月16日（星期三） Chapter 22 心拍数#1115日期：12月24日（星期六；一个月后） 强制选择支： 不是马拉松哦。 我觉得，这是一场接力赛才对。 我们能战胜Guest，不是某个人的功劳。 而是一棒棒传递过来的。 一开始，你把善意通过蛋糕送给了我。 然后，在陈墨受到冤枉的时候我拿着视频挺身而出， 我把善意又送给了她。 最后，我们的行动打动了“靶子”， 你看。 总之，只要我们能把善意和真相传递下去，世界就一定会一点点变好。 顾真真线 后半 (23-26)Chapter 23 伟大的渺小日期：2023年1月2日（星期一） 强制选择支： 我不会离开你的。 嗯，不搬了，我想太多了。 Chapter 24 吃醋日期：1月8日（星期日）-&gt;1月15日（星期日） Chapter 25 白玫瑰日期：1月21日（星期六，除夕） 视角：顾唯-&gt;顾真真 回忆：1月8日&#x2F;视角：顾真真 回忆：1月15日&#x2F;视角：顾真真 回忆：1月20日&#x2F;视角：陈墨 视角：顾真真-&gt;顾唯 End 02 黑猫 此处游戏并不结束，而是继续到 Chapter 26。 Chapter 26 回到过去 (顾真真线)日期：1月21日 强制选择支： 所以，帮我吧。 帮我找回陈墨，救下真真。 不对。 你刚刚说了，有修改因果能力的怪异，都是“天字号”的。 商号立了档案的“天字号”，不会只有一个吧。 Chapter 26 回到过去 (一周目) 无论先选择顾真真线还是陈墨线，一周目都会出现此部分剧情。如果先选择顾真真线，一周目结尾是 (顾真真线)+(一周目)，二周目结尾是 (陈墨线)+(二周目)。如果先选择陈墨线，一周目结尾是 (陈墨线)+(一周目)，二周目结尾是 (顾真真线)+(二周目)。 无关选择支： 红色代表真实，蓝色代表梦境？ 啥……？ 强制选择支： 都2023年了，谁还玩这个梗啊。 无关选择支： 红色 蓝色 游戏回到 Chapter 18 结尾的选择支处。无法选择已经选择过的选项（半夏除外）。 陈墨线 前半 (19-22)Chapter 19 呼唤我的名字日期：11月15日（星期二） 强制选择支： 在找水星吗？ Chapter 20 柠檬回忆视角：靶子 日期：11月15日深夜 回忆：11月14日&#x2F;视角：陈墨 Chapter 21 恒星回忆：11月15日凌晨&#x2F;视角：陈墨 回忆：11月15日清晨&#x2F;视角：顾唯 日期：11月15日深夜 Chapter 22 心拍数#1001日期：12月24日（星期六；一个月后） 强制选择支： 嗯，的确是接力赛呢。 只要我们把善意和真相传递下去，明天总会变好的。 陈墨，我爱你。 如果我们相处的还合适的话， 将来就嫁给我吧。 陈墨线 后半 (23-26)Chapter 23 直到天荒地老日期：2023年1月1日（星期日） Chapter 24 起风了日期：1月2日（星期一）-&gt;1月15日（星期日） 无关选择支： 爱 不爱 Chapter 25 红玫瑰日期：1月15日-&gt;1月21日（星期六，除夕） 回忆：1月20日&#x2F;视角：陈墨 End 03 卖真相的小女孩 此处游戏并不结束，而是继续到 Chapter 26。 Chapter 26 回到过去 (陈墨线)日期：1月21日 强制选择支： 因为，我爱你啊。 你对真真犯了不可饶恕的罪过。 但我相信这事出有因。 不管你说不说。 我都会找到背后的真相。 相信我。 强制选择支： 你能不能多留一会，我有事情想要问你。 所以，帮我吧。 帮我找回真真，救下陈墨。 不对。 你刚刚说了，能够修改因果能力的洋片箱是“天字号”的。 商号立了档案的“天字号”，不会只有一个吧。 Chapter 26 回到过去 (二周目)强制选择支： 请让我回到和真真第一次相遇的时候吧。 胜天半子线 (27-33)Chapter 27 人生马拉松日期：9月30日 实际日期：2020年9月30日。见下文 Chapter 28。 实际视角：”顾唯”白永+”顾真真”陈墨。见下文 Chapter 32。 无关选择支： 因为古代医疗水平低 因为巫师和巫术是未知的 强制选择支：（回忆） 请让我回到和真真第一次相遇的时候吧。 强制选择支： 不适合被真真听到的内容。 小心二次元。 我之前被你安排了一个秘密任务。 商号的巧克力可以储存他人的记忆和能力。 商号有一副隐形眼镜，可以看到佩戴者最关心的人的过去和未来。 还有“伪后悔药”，可以让人回到过去。 强制选择支： 那个，这会能不能就我们两个人开。 嗯，那就这么定了。 我们第一篇要写什么？国安路奶茶店排队的那件事？ Chapter 28 关键词日期：10月1日 强制选择支： 啊，还是不要了。 我父亲……那都是过去的事了。 所以，十一那天，我才会那么失态，让你见笑了。 日期：10月2、3、4日 强制选择支： 这样一来，是不是就能彻底改变命运了呢？ 日期：10月23日（星期五？） 实际日期：2020年10月23日（星期五）。2022年10月23日实为星期日；此处为伏笔。 强制选择支： 安心啊。 日期：2020年10月24日（星期六）-&gt;10月25日（星期日） 强制选择支： 你不是最在意真相吗？ 这算是用伪装去骗取真相吧。 强制选择支： 等等，我们还是不要交给保卫处吧。 日期：11月14日（星期六） 强制选择支： 快，真真快进去。 我们藏到这里。 用这些纸盒遮挡，对方就找不到我们了。 我走出店门的时候，发现了一个偷拍摄像头。 那家伙……就是安摄像头的犯人吧。 嗯，放在抓娃娃机旁边的通风口里，那个角度正好能拍到裙底。 强制选择支：（回忆） 请让我回到和真真第一次相遇的时候吧。 Chapter 29 爱能做到的还有什么呢日期：11月15日（星期日） 强制选择支： 不行，不能认输。 Chapter 30 白凯场景：章豫学院 日期：11月17日（星期二） Chapter 31 将故事写成我们日期：12月10、24、31日 日期：2021年1月1日（星期五） 胜天半子线Chapter 32 交换余生日期：2023年1月21日 实际视角：白永 回忆：2020年9月1、11、16、30日（旧世界线）&#x2F;视角：白永+陈墨 回忆：2021年1月21日（旧世界线）&#x2F;视角：白永 编者注：除开半夏线，至少存在四条世界线： 旧世界线(2020-21)：”顾唯”白永+陈墨 新世界线，顾真真线(2022-23)：顾唯+顾真真（陈墨的一半未来） 新世界线，陈墨线(2022-23)：顾唯+陈墨（陈墨的另一半未来） 修正旧世界线(2020-21)：”顾唯”白永+”顾真真”陈墨 修正新世界线(2020-23)：白永+陈墨+”顾真真”陈墨在旧世界线中，11月15日白永和陈墨在33号里受到Guest袭击，未杀死其本体在顾真真线中，11月15日顾唯和顾真真在街上躲避燃烧瓶，燃烧瓶烧掉了整个33号的二楼，包括Guest的房间在陈墨线中，11月15日顾唯和陈墨在二楼躲避燃烧瓶，燃烧瓶烧掉了Guest的房间在修正新世界线中，11月15日白永和陈墨在33号里受到Guest袭击，烧掉了其本体，其章豫学院分身在21年1月1日被白永杀死 编者注：原则上本攻略并不复述剧情细节，但由于此处笔记本演出实在太快看不清，故将关键内容辑录如下：陈墨给白永送生日蛋糕（2020年8月25日）两人误以为 Guest 是金字塔奶茶店店长，因而引发后续调查（10月31日）实则是 Guest 用怪异控制了店长；店长是自媒体出身，曾被“红笔”控制；金字塔奶茶因此在21年初倒闭过一次（1月7&#x2F;13日）Guest 是章豫学院校长（11月12日）“他答应我了”（11月13日19时55分），此时由于家中监控关闭。闯入者将白永拐至章豫学院；陈墨被划伤声带不能发声2021年1月18日，”顾真真”陈墨收到了快乐王子寄来的“后悔药”，并于21日决定使用“顾真真”陈墨为了使用后悔药，将自己的未来分为两半。使用后悔药后，陈墨和顾真真均消除关于白永的记忆陈墨：“未来，想要和你告别的我”，顾真真：“过去，和你初次相遇的我” 陈墨给白永的信 陈墨（红笔）：“第一个错误：我以为怪异并不可怕”顾真真（蓝笔）：“第二个错误：我只能交给命运”落款：”爱你的 陈墨”（蓝笔）、”即将忘记你的 顾真真”（红笔）落款日期：2021年1月21日 回忆：2022年7月14日&#x2F;视角：白永 “白俑计划”启动 笔者注：白俑计划的出发点：在旧世界线(2020)中，由于Guest未被清除，在2020年11月13日闯入者导致白永被拐走（下落不明）、陈墨不能发声。陈墨为了救下白永，于2021年1月21日使用真后悔药，创造出”陈墨”和”顾真真”两个自己（”顾真真”这个概念于2020年9月30日出现）。在使用真后悔药后，他们终于得知白永在章豫学院，才救出白永。为改变这一命运，白永和钟齐北在21年开始谋划 “白俑计划”，在2022年7月14日启动。白俑计划成功的关键：“ta”是世界上最大的怪异，“ta”的希望会覆写真相。因为“ta”希望伪后悔药能改变命运，所以伪后悔药会真的改变命运。一颗伪后悔药两个月的限制(2023年1月21日-&gt;2022年11月15日)是虚构的，但成为了最初无法脱离循环的限制，也引导向白永主动地反抗规则，带着记忆吃下两颗伪后悔药，许愿“请让我回到和真真第一次相遇的时候吧”，“ta”因此将白永带回2020年9月30日(顾真真这个概念的出现)，又误以为是两颗后悔药四个月(2023年1月21日-&gt;2022年9月30日)。而在“ta”发现自己被欺骗后，立即回到2023年1月21日，白俑计划因此成功。除此之外，2020年的陈墨获得了”顾真真”这个名字，是因为”顾唯”白永喊出了这个名字，符合陈墨在2020年9月30日想出这个笔名时的期望，因此陈墨就成了”顾真真”。与此同时，”顾唯”白永认为还存在一个大学生陈墨，因此“ta”把这个陈墨也带到了这个世界上。在两条新世界线中，顾真真和陈墨因为真后悔药的效力即将结束(两年，2021年1月21日-&gt;2023年1月21日)而为谁能留下产生争执。在2022年，真正意义上的陈墨就是陈墨(大一)，而顾真真是一个不同的概念；这和2020年高二的陈墨是同一个人。白俑计划成功的证据：在7月14日之前，顾真真喊顾韦叫哥哥，这是因为顾真真在记忆中和顾唯亲近产生的下意识行为。而在旧世界线中，白永拒绝了和陈墨假扮兄妹，因而这一行为只能是新世界线（”顾唯”接受了和”顾真真”假扮兄妹）给顾真真带来的影响。 日期：2023年1月21日 输入名字：最最好的朋友 Chapter 33 遥远的她日期：2023年1月21日（除夕） 真正的快乐王子（顾唯）的复活仪式 过去之眼和未来之眼 红笔 洋片箱（金箔） 白俑（铅心） 钟齐北执行白俑计划的目的：复活顾唯 视角：苏半夏-&gt;钟齐北-&gt;白永-&gt;钟齐北 回忆：2021年1月21日（吃真后悔药之前）&#x2F;视角：钟齐北+陈墨 真后悔药的真正效果：“一条河流”，把一个人分成两个人，各自承担原来那个人的一些特点代价：两个人的锚会纠缠在一起，直到一方被消灭；如果两年之后，两个人都没有被消灭，两个人都会化为泡沫2020年11月13日，Guest划伤陈墨，没有伤到声带，却毁损了神经和精神，使之不能发声陈墨把能够发声的一半给了顾真真。陈墨自己用颈带（“猫语翻译机”）发声，声音更加成熟陈墨把青春给了顾真真，因此自己的外形从高二变成了大一 旧世界线中，顾韦没有在章豫学院认出苏溯，欲逃出章豫学院时被重伤，治疗后失去了关于夏天的记忆修正新世界线中，顾韦在章豫学院遇到了自己要找的人（应为苏半夏），章豫学院被提前爆破，顾韦没有受伤推测在修正新世界线中，《不存在的夏天》的故事已被抹除，但顾韦仍然发动伪沼泽人能力救下苏半夏 修正新世界线中，白永被提前从章豫学院救出，陈墨不再需要使用“一条河流”将自己“分裂”为两个人推测在修正新世界线中，小陈墨仍然存在，获得并承接了“顾真真”这个概念；与此同时陈墨也存在"},{"title":"技术：Stable Diffusion Webui 个人向经验","path":"/misc/SD.html","content":"说是经验，实际上只有一点点踩坑总结，主要是提醒一下自己。当然，希望对你也有帮助。 （真的会有人来看这个博客吗？哦对了，可能有不准确的地方，欢迎指正。） 环境安装我应该不是来讲基础知识的……不过既然下面放了这么多链接，这里也加一条：Stable Diffusion Webui 的项目地址。 启动由于显存只有 4GB，我选择用以下参数启动： 1python launch.py --medvram --opt-split-attention 显然是有办法通过修改配置文件保留这两个启动参数的，但是我懒得折腾了，所以，我的解决方案是：写一个以上内容的 .bat 文件，这样就连命令行都不用打开了，一键启动。 这样至少能生成 768x768 的图片，并且显存远远没有接近满载。 模型以下按照我接触到的顺序列出模型。 模型下载后放在 /stable-diffusion-webui/models/Stable-diffusion 目录下（其中 /stable-diffusion-webui 是根目录）。在此目录应该有一个空文件 Put Stable Diffusion checkpoints here.txt。 以下的文件大小均为 Windows 资源管理器显示的大小，与网站上的大小可能不同。文件名后的括号内为文件的 SHA256 哈希值，可以在 Webui 左上角检查。 2023&#x2F;5&#x2F;22更新：写下本文恰好已有两个月，在这期间又有很多模型与插件涌现。笔者正在重新测试模型。以下文本可能已经过时，另外，旧版本 webui 的 Hash 是八位的，新版变成了十位。推荐一篇跨模型评测。 同一模型的版本区别模型文件名中可能带有 fp16、fp32 等字样，分别代表 16 位浮点数（半精度）和 32 位浮点数（单精度）。一般后者大小是前者的两倍。 另外，如果有略小于 fp32，但没有此类字样的模型，应该为 bf16。 由于模型体积越大，加载和生成的速度越慢，所以对于一般的任务应该优先考虑 fp16。 https://huggingface.co/admruul/anything-v3.0/tree/main 此外，模型可以是 ckpt 或 safetensors 格式，顾名思义，后者更安全。现在默认都使用 safetensors 格式，不过如果是信得过的 ckpt，也可以用，安装和使用方法无异。 animefull-final-pruned.ckpt Size: 3.97GB Download: novelaileak 相对位置是 /novelaileak/stableckpt/anime-final-pruned/model.ckpt。无需下载其他任何文件（包括同目录下的 config.yaml）。 显然是知名度最高的模型。我没怎么用过，因为这玩意我半年前就下载了，一直在硬盘里积灰，等我重新捡起来 Stable diffusion，已经变成奔着别的模型去了。当然，NovelAI 确实下了很多功夫，只可惜没有人更新 leak，这玩意也难以满足现在更加个性化的需求。 anythingV3_fp16.ckpt + VAE Size: 1.98GB Download: Anything V3 - Civitai 需要搭配 VAE 文件 (784 MB) 使用，否则色彩会比较灰暗。 上面的链接可以一并下载 VAE 文件（animevae.pt），不过也可以在 novelaileak 的根目录找到。 下载之后，更名为anythingV3_fp16.vae.pt(格式为 模型名.vae.pt)，放在 /stable-diffusion-webui/models/VAE 目录下。（和旧版一样放在模型同一目录下也是可以的） 只有明确指定需要 VAE 的模型才应该使用 VAE。 相比 animefull-final-pruned 优势明显。除此之外，比起下面的 momoko 还是有优点的。比如说，同一个 seed 下，略微修改 prompt，anything 产生的多张图片一致性会更好一些，适合用来做差分(?)图。 momoko-e.ckpt (SFW) &#x2F; momoko-p.ckpt Size: 1.98GB &#x2F; 1.98GB Download: momoko - Hugging Face 本篇文章中唯一的 sfw 模型是 momoko-e。再另外，这两个模型本质上不是同一个，使用同样的 prompt 和 seed，结果肯定不同。 本来我以为关于模型的探索就到这里了，但是，当我发现本地没有一个模型能正常地识别 1boy 之后，不得不说，这个世界还是很大的。 wd-v1-3-float16.ckpt Size: &lt; 3GB Download: Waifu Diffusion - Hugging Face 为什么没有准确文件大小呢？因为我早就删了。别用。这玩意是 final 的话，前面的 epoach 我都不敢想象。 HD-16.ckpt Size: &lt; 7GB Download: Hentai Diffusion - Hugging Face 别用。虽然我知道可能是我的问题，但是它的艺术风格确实是领先人类艺术的。画 classroom 我不知道是哪里的小学生涂鸦，或者是黑色幽默；连 illustration 都救不回来。 HD-17.ckpt + VAE Size: 3.58GB Download: Hentai Diffusion - Hugging Face 我没见有人说过 HD-17 需要 VAE，但是我确实观察到色彩灰暗的现象，并且在使用 VAE 之后有所改善。 然而，由于是真的没人说过，所以也没人提供 VAE 文件。 解决方案也很简单，直接用 novelaileak 的 VAE 文件就行了。 首先，比起 HD-16 可谓是天壤之别，进步显著，至少像是个二次元模型。其次，能够识别 1boy，比起别的已经赢太多了。再次，也不要抱太高期望，写 1girl, 1boy，会产出大量的可能性，包括但不限于 1girl, 2girls, 1girl, 2boys……不过这和别的 prompt 以及我自己的使用方式也有关系。 HD-19.ckpt Size: 7.17GB Download: Hentai Diffusion - Hugging Face 与 HD-17 不同，不需要 VAE。 别用。逆天。全是古神。就算身体结构没问题手也是夸张得令人发指。和上面两个“别用”级模型不同的是，这玩意至少是二次元的，就是问题实在是太多了。相比 HD-17 应该说还是有点进步。其一是色彩比较鲜艳。如果还用 anime coloring，饱和度会有些过高了。其二是对动作的描绘更加到位了，代价就是某些情况下手很抽象。未有进步的方面，性别和人物数量还是不准确。Hugging Face 的项目上还有一个 Universal negative prompt，并不能解决古神问题。不是版本号越高越好，这是非常重要的教训。好在，自己试一试也不会有什么损失——就是有的时候会吃不下饭。 杂项标签显然，如果你想学习 prompt 怎么写，应该去找元素法典等教程及工具网站。我在下面推荐了一些。 这里只讲一点个人经验。对，就是上面提到的 1boy 问题： masterpiece, best quality, 1 &lt;长修饰语&gt; girl, (1boy:1.35), &lt;细节&gt; 由于使用了长魔法吟唱，girl 的细节在一定程度上会受限，但是至少能够正确地画出 1girl, 1boy 了。 设置启动后进入 Settings 页面，找到 Stable Diffusion 设置中的 Stop At last layers of CLIP model，改为 2。 PNG InfoPNG Info 可以识别 Stable Diffusion 生成图片的信息，包括 prompt、negative prompt、seed 等生成参数。 注意：Send to txt2img 会使用相同的 seed，如果你想用同样的标签生成不同的图，记得重置！ 参考这里的参考网站当然不够全面。因为有很多人写文章列了太多链接，难免让人有些迷茫。所以，只列出了最重要的。 模型 rentry.co 123114514.xyz 没法用磁链怎么办？问问神奇的搜索引擎，以及 Hugging Face。 词条查找 Danbooru 标签超市 wolfchen.top 教程 元素法典 元素同典的链接在上述文档中。"},{"title":"关于本站","path":"/misc/about.html","content":"关于本站 建立：2023 年 1 月 14 日 工具：Hexo 服务：Github Pages 主题：Stellar 关于我 我的现用网名是 Cryovit，这个词是 Cryogentic Vitriol（低温矾，即水合硫酸盐）的缩写。这个名字源于 2022 年初时在写《明日方舟》的同人时虚构的一种蓝色材料。 另一个网名是 GoRandom，大概是 2022 年 8 月左右开始使用的，源于我之前写的一个随机小工具。 我本来打算统一使用 GoRandom 这个名字，但由于 Github 等网站的用户名被占用，只得任两种名号共存。 无论是哪个名字，在大多数社交网站，我都使用下面这个为 GoRandom 设计的头像： 我于 2022 年秋季进入 City University of Hong Kong 就读计算机专业。 在 GitHub 上，个人项目托管于 Cryovit 名下，学校项目托管于 go-random 名下。不过由于学校和课程的要求，学校项目大多不会公开。 博客自定义 本站使用的 Stellar 主题提供了美观的 UI 和强大的功能，你可以查阅官方文档 进行自定义。 以下列出了本站部分自定义设置，以供参考。 _config.yml123456789# Sitesubtitle: &quot;City University of Hong Kong | Computer Science&quot; # 效果为两个副标题，默认显示第一个，鼠标悬浮时切换成第二个favicon: /image/favicon.png # 相对路径 /source/image/favicon.pnginject: head: # 在线字体，见下文 - &lt;link href=&quot;https://fonts.googleapis.com/css2?family=Noto+Serif+SC&amp;display=swap&quot; rel=&quot;stylesheet&quot;&gt; - &lt;link href=&quot;https://fonts.googleapis.com/css2?family=Lato&amp;display=swap&quot; rel=&quot;stylesheet&quot;&gt; script: _config.yml 在 hexo init 时自动生成，只需要修改替换已有内容即可；但是末尾的 inject 部分需要手动添加。 _config.stellar.yml12345678910111213141516style: gradient: # 搜索栏渐变色，来自 https://webgradients.com/ start: &#x27;linear-gradient(to right, #92fe9d 0%, #00c9ff 50%, #92fe9d 100%)&#x27; search: &#x27;linear-gradient(to right, #04F3FF, #08FFC6, #DDF730, #FFBD19, #FF1FE0, #C418FF, #04F3FF)&#x27; font-size: root: 16px body: 1rem # 16px code: .875rem # 14px codeblock: .875rem # 14px font-family: # 在线字体，来自 https://www.googlefonts.cn/ body: &#x27;Lato, Arial, &quot;Noto Serif SC&quot;, &quot;Microsoft Yahei&quot;, &quot;WenQuanYi Micro Hei&quot;, Helvetica, sans-serif&#x27;comments: # 评论系统 service: beaudar beaudar: repo: CryoVit/blog-comments gradient：页面左上角的搜索栏渐变色。由于这个渐变色会逐渐向左移动，所以首尾颜色必须相同，看起来才连贯。此处采用了官方推荐设置。 font-size：默认值为 body: 15px, code: 14px, codeblock: 13px，由于本人阅读习惯，略微增大了字号。 font-family：除了在此处设置，还需要在 _config.yml 中 inject。此处的设置为：Lato 作为西文字体，Noto Serif SC 作为中文字体。其他字体是为了兼容不同平台。（注意把中文主字体放在西文主字体之后，否则西文字符也会使用中文字体。） comments：评论系统。可以参考官方文档中的评论插件配置，以及我的评论仓库 blog-comments 的 README 来进行配置。"},{"title":"Project Sekai：大小月卡攻略 + 抽卡攻略","path":"/misc/pjsk-gacha.html","content":"大小月卡小月卡游戏内称为「カラフルパス」，翻译为 Colorful Pass &#x2F; 七彩通行证。 分为 Basic、Deluxe、Precious 三个档位，有效期均为 30 天 (720 小时)。 任何时间只能购买并生效一种小月卡，有效期内无法购买其他档位。 内容 Basic Deluxe Precious 价格 480 JPY 1500 JPY 3000 JPY 立即获得付费水晶 440 1380 2760 每日获得免费水晶 25 50 100 每日免费扭蛋 - - 1 每周免费七彩扭蛋 1 1 1 每日付费扭蛋 2 2 2 Live Boost 上限 - +10 +10 每日自动演出上限 10 10 99 挑战点数 2x 2x 2x 通行证点数 2x 2x 2x 大月卡游戏内称为「プレミアムミッションパス」，翻译为 Premium Mission Pass &#x2F; 高级任务通行证。 和任务通行证一样，按照自然月计算，每月 1 日 4:00 JST 刷新。价格为 2000 JPY。 购买后立即获得 1850 付费水晶和 300 思念残片。 购买后解锁任务通行证的高级特典，满级奖励包括 5000 免费水晶、700 思念残片、4 种限定服饰。 卡池的分类常规卡池常规卡池的抽卡价格均为： 100 付费水晶 &#x2F; 1 次 (仅限七彩通行证，每日 2 次。豪华七彩通行证每日免费 1 次) 1000 付费水晶 &#x2F; 10 次 (仅限 1 次，保底 1 张 SR 以上) 300 水晶 &#x2F; 1 次 3000 水晶 &#x2F; 10 次 (保底 1 张 SR 以上) 普通卡池：普通卡池中的新卡在上线之后的任何卡池都能获得 限定卡池：限定卡池中的新卡只能在该卡池中获得，其他卡池无法获得；限定卡池会定期复刻 FES 卡池：FES 卡池中的新卡只能在该卡池和上线之后的 FES 卡池中获得，其他卡池无法获得；FES 卡池不会复刻 特殊卡池 生日卡池：300 水晶 &#x2F; 1 次；3000 水晶 &#x2F; 10 次 (保底 1 张 SR 以上) 七彩通行证卡池：免费 (仅限七彩通行证，每周 1 次，必定出现 SR 以上) 必四星卡池：3000 付费水晶 &#x2F; 10 次 (保底 1 张 SSR 以上) 自选四星卡池：3000 付费水晶 &#x2F; 10 次 (保底 1 张 SR 以上，并附赠一张 SSR 自选券) 普通卡池基准概率 SSR: 3% SR: 8.5% R: 88.5% UP 卡：当期 UP 三张 SSR 卡均分 1.2% 的总概率，即每张 UP 卡的概率为 0.4% 十连保底 SSR: 3% SR: 97% 保底机制(1) P 点 使用付费水晶抽卡时，每抽 1 次获得 1 P。使用免费水晶抽卡时，每抽 1 次获得 0.5 P。(如某一抽的价格由免费水晶和付费水晶混合组成，则获得的 P 固定为 0.5；可以选择优先使用付费水晶抽卡) 积累到 50 P 时，下一次抽卡必定获得 SSR 卡。积累到 100 P 时，下一次抽卡必定获得当期 UP 卡。 (2) 贴纸 每抽 1 次获得 1 张贴纸。 积累到 300 张贴纸时，可以交换 1 张当期 UP 卡。可以选择消耗抽卡券，1 张抽卡券可抵消 10 张贴纸，最多 10 张抽卡券。 每 10 张贴纸可兑换 1 张抽卡券，最多 10 张抽卡券。 每 1 张贴纸可兑换 5 个回忆碎片（相当于获得重复 R 卡时的分解奖励）。 往期 100 抽 -&gt; 10 张抽卡券 -&gt; 当期 UP 卡交换价格降低为 200 张贴纸，这种模式被称为“存井”，即把往期的抽数转换为当期的抽数，最多转化 100 抽。 抽卡券也可以兑换常驻角色，价格为： SSR: 30 张抽卡券 (&#x3D; 300 抽) SR: 7 张抽卡券 (&#x3D; 70 抽) R: 2 张抽卡券 (&#x3D; 20 抽) 限定卡池限定卡池只有贴纸机制，没有 P 点机制。 此外，限定卡池的贴纸兑换的是限定抽卡券，限定抽卡券只能在限定&#x2F;FES卡池中使用，无法在普通卡池中使用，也无法兑换常驻角色。 FES 卡池基准概率 SSR: 6% SR: 8.5% R: 85.5% UP 卡：当期 UP 三张 SSR 卡均分 2.4% 的总概率，即每张 UP 卡的概率为 0.8% 十连保底 SSR: 6% SR: 94% 保底机制FES 卡池只有贴纸机制，没有 P 点机制。 贴纸机制与限定卡池相同，贴纸兑换的是限定抽卡券，只能在限定&#x2F;FES卡池中使用，无法在普通卡池中使用，也无法兑换常驻角色。 生日卡池基准概率 BD: 3% SR: 8.5% R: 88.5% 生日卡池只会出现该角色的卡，且不会出现 SSR 卡。 每年生日时，会复刻往年生日卡池，并新增当年生日卡池。每个卡池中只有 1 种 BD 卡。 十连保底 BD: 3% SR: 97% 保底机制生日卡池只有贴纸机制，没有 P 点机制。 抽 1 次获得 1 张贴纸，积累到 100 张贴纸时，不能再抽卡，并可以交换 1 张 BD 卡。 往年生日卡池和当年生日卡池的贴纸是通用的，可以在不同的生日卡池中累积，并交换任何一张 BD 卡。 生日卡池贴纸不能兑换抽卡券。 每 1 张贴纸可兑换 5 个回忆碎片。 必四星卡池基准概率 SSR: 3% SR: 8.5% R: 88.5% 十连保底 SSR: 100% 无保底机制。 自选四星卡池基准概率 SSR: 3% SR: 8.5% R: 88.5% 十连保底 SSR: 3% SR: 97% 保底机制附赠一张 SSR 自选券，可以交换指定范围内任意一张常驻 SSR 卡。 七彩通行证卡池基准概率 SSR: 3% SR: 97% 不能进行十连。 无保底机制。"},{"title":"Project Sekai：道具攻略","path":"/misc/pjsk-item.html","content":"コイン (金币)获取：游玩、登录奖励、月度通行证、活动奖励 用途：购买区域道具 バーチャルコイン (虚拟币)获取：登录奖励、月度通行证、活动奖励 用途：在虚拟演唱会中发送礼物、抽取虚拟纪念品 ピース (碎片)有五种，分为 キュート (Cute&#x2F;粉)、クール (Cool&#x2F;蓝)、ピュア (Pure&#x2F;绿)、ハッピー (Happy&#x2F;黄)、ミステリアス (Mysterious&#x2F;紫) 获取：游玩、活动奖励 用途：解锁卡牌的前篇和后篇剧情、特训3星以上卡牌、购买区域道具 ジェム (宝石)有五种，类型与碎片相同 获取：游玩、活动奖励 用途：解锁3星以上卡牌的后篇剧情、特训3星以上卡牌、购买区域道具 魔法の布 (魔法布)获取：游玩、活动奖励 用途：制作服装，每次消耗300魔法布 魔法の糸 (魔法线)获取：游玩、活动奖励 用途：制作服装，每次消耗30魔法线 ミューシックカード (音乐券)获取：阅读剧情、活动奖励 用途：购买翻唱乐曲 ミラクルジェム (奇迹宝石)获取：游玩、活动奖励 用途：解锁3星以上卡牌的后篇剧情、特训3星以上卡牌、购买区域道具 想いのカケラ (思念碎片)获取：兑换重复卡牌、月度通行证、活动奖励、角色等级、羁绊等级 用途：提升卡牌专精等级、提升卡牌技能等级 想いの純音符 (思念音符)获取：兑换4星以上重复卡牌 用途：提升4星以上卡牌专精等级、提升4星以上卡牌技能等级 1 思念音符 &#x3D; 2000 思念碎片，只可单向兑换 ふしぎな種 (神奇种子)获取：游玩、活动奖励 用途：购买区域道具 スタンプ交換券 (贴纸交换券)获取：活动奖励 用途：兑换贴纸 ガチャシール券 (扭蛋贴纸)获取：扭蛋兑换，每在普通卡池中扭蛋10次可兑换1张，单个卡池最多兑换10张 用途：兑换常驻卡牌(2星2涨，3星7涨，4星30涨) 在普通卡池降低兑换4星的价格(每张贴纸可使得价格降低10次扭蛋，最多使用10张贴纸) 限定ガチャシール券 (限定扭蛋贴纸)获取：扭蛋兑换，每在限定卡池中扭蛋10次可兑换1张，单个卡池最多兑换10张 用途：在限定卡池降低兑换4星的价格(每张贴纸可使得价格降低10次扭蛋，最多使用10张贴纸) ボーカルカード交換チケット (Another Vocal 交换券)获取：活动奖励 用途：兑换 Another Vocal 版本的歌曲 練習用スコア (练习用乐谱)有三种，初级 (200 EXP)、中级 (10000 EXP)、上级 (50000 EXP)。 获取：游玩、活动奖励 用途：提升卡牌等级 スキルアップ用スコア (技能提升用乐谱)有三种，初级 (1 EXP)、中级 (50 EXP)、上级 (250 EXP)。 获取：活动奖励 用途：提升卡牌技能等级 ライブボーナスドリンク (Live Bonus 饮料)有两种，小 (1 LB)、大 (10 LB)。 获取：活动奖励、羁绊等级 用途：回复 Live Bonus"},{"title":"osu! 4K Dan Revised 2023","path":"/trash/4kdan.html","content":"Read Before ProceedingThe content of this article is purely fictional and is not related to any organisation or individual in real life. In addition, it contains GPT-3.5 generated text, which may not be accurate or reliable. Please read with caution.This article was created on 2023-05-06. Have fun reading! This is the latest version of the renowned osu! 4K Dan Reform, which was originally created by Kroytz and Sotarks in 2019. What’s new? Overhaul of the entire mapset Fully redesigned difficulty curve New patterns and gimmicks Difficulties Revisited Dan Original Stars Prelude 1 - 1.0 Prelude 2 Intro 1 1.5 Prelude 3 - 1.9 Prelude 4 Intro 2 2.3 Prelude 5 Intro 3 2.8 Prelude 6 - 3.1 Fugue 1 Dan 1 3.3 Fugue 2 Dan 2 3.6 Fugue 3 Dan 3 3.9 Fugue 4 - 4.1 Fugue 5 Dan 4 4.3 Fugue 6 Dan 5 4.5 Fugue 7 Dan 6 4.7 Fugue 8 - 5.0 Fugue 9 Dan 7 5.3 Fugue 10 Dan 8 5.5 Chorus 1 Dan 9 5.7 Chorus 2 Dan 10 5.9 Chorus 3 Alpha 6.1 Chorus 4 - 6.3 Chorus 5 Beta 6.5 Chorus 6 Gamma 6.7 Chorus 7 - 7.0 Chorus 8 Delta 7.3 Chorus 9 - 7.5 Chorus 10 - 7.7 Finale 1 Epsilon 8.0 Finale 2 - 8.2 Finale 3 Zeta 8.4 Finale 4 - 8.6 Finale 5 Eta 8.8 Finale 6 - 9.0 Finale 7 Theta 9.2 Finale 8 - 9.4 Finale 9 Iota 9.6 Finale 10 - 9.8 Grand Finale Kappa 10.0 Number of Songs Prelude: 1-3: 2 songs 4-6: 3 songs Fugue: 1-5: 3 songs 6-10: 4 songs Chorus: 1-5: 4 songs 6-10: 5 songs Finale: 1-5: 5 songs 6-10: 6 songs Grand Finale: 7 songs Pass requirements Prelude: 94% accuracy Fugue: 95% accuracy Chorus: 96% accuracy Finale: 97% accuracy (including the Grand Finale) FAQIs this even possible?Yes or no. 4K dan is known for its difficulty, but it is not impossible. The Revisited Dans are designed to be more accessible for players of all skill levels, both for beginners and veterans. The difficulty curve is also more consistent, so you won’t be surprised by any sudden difficulty spikes. Another good news is that, when the Reform Dan first came out, it was commonly believed that “only 2 people could pass Epsilon”. Today, however, hundreds of players have cleared the map, and the best players can make through Eta. This shows that the skill level of the osu!mania community has improved significantly over the years. The Grand Finale is, more than, a grand finale. The top players are still far from passing it, but it is definitely possible to pass the map with enough practice, hopefully in the next few years. How do I practice? For Prelude: keeps practicing ordinary maps requiring slightly more than your current skill level. With effective practice, you should be able to pass Prelude 1-3 in a few weeks, and Prelude 4-6 in a few months. This progress is not as simple as it sounds, but it is definitely possible. For Fugue: now you should be clear about your strengths and weaknesses. Besides ordinary maps, you can also try sets specializing in Jack, LN, burst, etc. These sets can be found in the osu!mania Beatmap Packs. They come in different levels of difficulty, so you can choose the ones that suit you the best. After Fugue 5, things will become even more difficult, because 4 songs requires much more stamina than 3 songs. Passing Fugue 10 is equal to a mixture of practice, determination, and luck, and when you make it, you are ready for the next stage. For Chorus: things become more interesting here. Chorus can require some sort of talent, but it is not impossible to pass. You can try to practice some of the more difficult maps in the osu!mania eXtra Beatmap Packs, which are also specialized in different skills. After Chorus 5, you will be able to pass most of the maps in the game, and prepare yourself for the final challenges of the Dan. It should be noted that 96% accuracy is significantly more demanding than 95% accuracy, but you will gradually learn to become more precise and consistent. For Finale: yes, you are here, you are already among the top players in the world. I, personally, am not a top player, so I can’t give you any advice. But I believe that you will be able to pass the Dan with enough practice and determination. Good luck and have fun! Remember, don’t limit yourself to the Dan, there are many other great maps out there waiting for you to explore. What modifiers can I use?You can only use the following modifiers: Mirror: you can flip the map horizontally if you want to. Constant BPM: you can use this modifier to make the map easier to read. Other modifiers are not allowed. You can not use Double Time, Hidden, Flashlight, or any other modifiers that can affect the gameplay. Will this Dan be ranked?No. It will not become ranked because it is not, factually, a mapset. It is a collection of maps, which you can find and download from the website. The map consistency and length is also very different from normal ranked maps, which make it difficult to calculate actual difficulty star. (The star given above is only for reference, not calculated by the official algorithm.) Can I use the map for tournaments?You can, for private or invitational tournaments. Official tournaments, however, will never use theses maps. Is this official, or are you affiliated with the osu! team?No. This is a fan-made project, and I am not affiliated with the osu! team in any way. osu! mania 4K dan has always been a community project from the very beginning. Our slogan is, “by the community, for the community”. We are not trying to replace the official dan system, but to provide an alternative for players who are interested in the dan system. Will this project be updated? Prelude: no. Fugue: might be updated in the future. Chorus: might be updated in the future. Finale: no. I hope we don’t have to update within 10 years! We plan to release a new version of the dan every year. Only Fugue and Chorus will be updated, and the new version will be released on the 1st of January. This can be massive rewrite, or just a few minor changes. We will try to keep the changes as small as possible, so that you don’t have to relearn everything from scratch. Can I contribute to this project?Yes. You can contribute to this project by mapping new songs, or by providing feedbacks and suggestions. That’s it. Thank you osu! mania community for your support, and I hope you enjoy the dan!","categories":[null]},{"title":"Comment (ne pas) te dire adieu","path":"/trash/Adieu.html","content":"阅前须知本文内容纯属虚构，与现实生活中的任何组织、个人均无关系。此外，包含 GPT-3.5 生成的内容。本文创作于 2023 年 4 月 29 日。祝您读得愉快！ Comment (ne pas) te dire adieu (不)对你说再见 曲目信息 曲目: Comment (ne pas) te dire adieu ID: adieu 艺术家: Sakuzyo vs. Frums feat. void 演唱: 結月ゆかり (Yuzuki Yukari) 曲风: Hardstyle Drum &amp; Bass (Hardstyle Artcore) BPM: 96-384 长度: 3:15 封面艺术家: cierra (INF&#x2F;ETN&#x2F;REA) &#x2F; cierra vs. Enji (IMG) 所属曲包: Omniscient Obliteration 谱面信息 难度 INF ETN REA IMG 等级 8 11 14 17 定数 8.0 11.1 14.4 17.0 谱面设计 Scherzando Disarray[0] Accelerando Disorder[1] Fortepiano Dispersion[2] Staccato Da Capo[::-1] 谱面设计名义 INFINITY: Scherzando 形容演奏情感“诙谐地” ETERNITY: Accelerando 形容演奏速度“渐快” REALITY: Fortepiano 形容演奏力度“强后即弱” IMAGINARY: Staccato 指演奏技巧“断音”；Da Capo 意为“重复演奏” 以上五个均为音乐术语，并且涉及五个不同的方面 前三难度谱面设计名义的第二个单词都是 Dis- 开头，分别意为“混乱”、“散乱”、“分散”，意义不同而又相互呼应 谱面设计名义后半部分的 Disarray、Disorder、Dispersion 和 Da Capo 首字母连起来是 DDDDC，与剧情 O-6 中的 D4C 呼应 前三难度谱面设计名义的最后部分（[0], [1], [2]）意为数组下标，代表故事的三个不同部分，而 0、1、2 又是三个难度在代码中的索引 IMAGINARY 难度谱面设计名义的最后部分（[::-1]）是 Python 中的数组切片操作，意为“从后向前取”，代表故事的倒叙部分，与 Da Capo 呼应 游戏相关解锁条件歌曲相关 本曲的名称致敬 Françoise Hardy 的歌曲 Comment te dire adieu （译名：如何告别你&#x2F;如何对你说再见）。值得一提的是，这首 1968 年的经典歌曲也不止一次在游戏中被致敬过：2001 年的视觉小说《さよならを教えて ～comment te dire adieu～》就是以此为名的，且游戏中部分 BGM 前奏与此曲相同。 本曲的曲风，Hardstyle Drum &amp; Bass 是一种非常罕见的杂交曲风 (crossbreed)，根据曲师在推特上的回复，也可以进一步细化为 Hardstyle Artcore。实际上，Artcore 的定义是 Drum &amp; Bass and Dubstep with acoustic leads。本曲有大量的 Dubstep 元素（Brostep、Drumstep 和 Hybrid Trap），概括为 Hardstyle Drum &amp; Bass + Dubstep 更为合适。 本曲的 BPM 从 96 到 384，其上限是所有歌曲中最高的。不过，BPM 的极差为 288，略小于 BPM 5-300 的 Take。 下表展示了歌曲的结构、曲风、BPM 和节拍。可以看到，实际上歌曲的曲风非常多样，BPM 和节拍的突变也运用得非常巧妙。（BPM 为 96 时，4&#x2F;4 拍四小节的时长恰好为 10 秒，这也是所有时间都是整数的原因。） 时间 段落 BPM 节拍 曲风 0:00-0:20 Intro 96 4&#x2F;4 Brostep 0:20-0:40 Verse 1 192 4&#x2F;4 Drumstep 0:40-0:55 Chorus 1 288 4&#x2F;4 Uplifting Trance 0:55-1:15 Drop 1 192 2&#x2F;4 Drum &amp; Bass 1:15-1:45 Break 96 3&#x2F;4 Artcore 1:45-1:55 Verse 2 192 4&#x2F;4 Drum &amp; Bass 1:55-2:10 Chorus 2 288 4&#x2F;4 Euphoric Hardstyle 2:10-2:30 Drop 2 384 4&#x2F;4 Frenchcore 2:30-2:50 Drop 3 192 4&#x2F;4 Hybrid Trap 2:30-2:50 Drop 3 (Sub) 384 4&#x2F;4 Neurofunk (Sub) 2:50-3:00 Outro 1 192 4&#x2F;4 Drum &amp; Bass 3:00-3:15 Outro 2 96 3&#x2F;4 Artcore","categories":[null]},{"title":"CS2204 Fundamentals of Internet Application Developments","path":"/trash/CS2204.html","content":"Read Before ProceedingThe content of this article is purely fictional and is not related to any organisation or individual in real life. In addition, it contains GPT-3.5 generated text, which may not be accurate or reliable. Please read with caution.This article was created on 2023-01-31. Have fun reading! CS 2204 Fundamentals of Internet Application DevelopmentsCourse Information Course Duration: One Semester Credit Hours: 3 Offering Department: Computer Science Offering Term: Fall, Spring 2016 Prerequisites: Nil Exclusive Courses: CS 1303 - Introduction to Internet and Programming Teacher Information Instructor: Dr. David M. Chelberg Office: 206B, 2nd Floor East Wing, Engineering Building Office Hours: 2:00-5:00pm, MWF, or by appointment Course DescriptionHTML, CSS and JavaScript are the three core technologies for building web applications. This course will provide a thorough introduction to these technologies. Students will learn how to create and style web pages using HTML and CSS, and how to add interactivity to web pages using JavaScript. The course will also introduce the student to the client-server model and the use of PHP as a server-side scripting language. Students will learn how to use PHP to create dynamic web pages and how to connect to a database using PHP. The course will also introduce the student to the use of a framework (Bootstrap) to create responsive web pages. Students will learn how to use Bootstrap to create responsive web pages that can be viewed on a desktop computer, tablet and mobile phone. Course Objectives Understand the client-server model and how it is used to create web applications Understand the use of HTML to create web pages Understand the use of CSS to style web pages Understand the use of JavaScript to add interactivity to web pages Understand the use of PHP to create dynamic web pages Understand the use of Bootstrap to create responsive web pages Understand the use of a database to store data for a web application Course Learning Outcomes Create a web page using HTML Style a web page using CSS Add interactivity to a web page using JavaScript Create a dynamic web page using PHP Connect to a database using PHP Create a responsive web page using Bootstrap Course Assessment Lab Exercises Project Midterm Exam Final Exam Course Textbook Introduction to HTML5, CSS3 and JavaScript, 2nd Edition, by John Duckett Course Materials Laptop computer Access to the internet Text editor (e.g. Visual Studio Code, Atom, Sublime Text) Web browser (e.g. Chrome, Firefox, Edge) Web server (e.g. XAMPP, WAMP, MAMP) Database management system (e.g. MySQL, MariaDB) Course Schedule Week Topic Lab 1 HTML (1): Elements, Attributes, Lists Web and Internet Basics 2 HTML (2): Tables, Forms, Frames SSH and FTP 3 HTML (3): Multimedia, SVG, Canvas HTML Review 4 CSS (1): Selectors, Colors, Fonts Project (1) 5 CSS (2): Box Model, Positioning, Display SFTP, Personal Web Page 6 CSS (3): Media Queries, Responsive Design CSS Review 7 JavaScript (1): Variables, Operators, Loops Project (2) 8 JavaScript (2): Functions, Arrays, Objects Midterm Exam 9 JavaScript (3): Events, DOM JavaScript Review 10 PHP (1): Variables, Operators, Loops Project (3) 11 PHP (2): Functions, Arrays, Objects Project Consultation 12 PHP (3): Forms, Sessions, Cookies PHP Review 13 Bootstrap (1): Grid System, Typography Project (4) 14 Bootstrap (2): Components, JavaScript Final Review Course Assessment DetailsLab ExercisesThere are a total of 5 lab exercises in Week 2, 3, 6, 9, 12. Each exercise is worth 2% of the final grade, adding up to a total of 10%. Each exercise consists of several short-answer and coding questions. The lab exercises are designed to help students understand the concepts covered in the lectures. The lab exercises will be submitted via Moodle. The deadline for each lab exercise is 11:59pm on the end of the week. Late submissions will not be accepted. ProjectThere will only be one project, but it will be more and more completed as the semester progresses. The project will be worth 30% of the final grade. Part 1 focus on HTML, due by the end of Week 5, worth 6% Part 2 focus on CSS, due by the end of Week 8, worth 8% Part 3 focus on JavaScript, due by the end of Week 11, worth 10% Part 4 focus on PHP, due by the end of Week 14, worth 6% The project will be submitted via GitHub. After each part is completed, the student will release a stable version of the project on GitHub. The deadline for each part is 11:59pm on the end of the corresponding week. Late submissions will not be accepted. Midterm ExamThe midterm exam will be held in Week 8 (in Lab time). The exam will be worth 20% of the final grade. The midterm exam will be a closed-book exam. The exam will consist of multiple-choice, short-answer and coding questions. The exam will only cover HTML and CSS (i.e. Week 1 to Week 6). Detailed information about the midterm exam will be announced two weeks prior to the exam. Final ExamThe final exam will be held in Week 15 or 16, depends on the university’s final exam schedule. The exam will be worth 40% of the final grade. The final exam will be a closed-book exam. The exam will consist of multiple-choice and coding questions. The exam will only cover HTML, CSS, JavaScript and PHP (i.e. Week 1 to Week 12). As the Bootstrap topic is not covered in the final exam, students are encouraged (but not required) to use Bootstrap in their project. Detailed information about the final exam will be announced two weeks prior to the exam. Course PoliciesAttendanceAttendance is not compulsory. However, students are encouraged to attend the lectures. The lectures will be recorded and uploaded to Moodle. Late SubmissionLate submissions will not be accepted. Students are encouraged to submit their work early, to prevent any technical issues. Academic IntegrityStudents are expected to abide by the university’s academic integrity policy. Any violation of the policy will be dealt with according to the university’s policy. The policy can be found at https://www.utm.my/academic-integrity. Students are encouraged to read the policy before the start of the semester. Academic AccommodationStudents with disabilities are encouraged to contact the Office of Student Affairs (OSA) for academic accommodation. The OSA can be contacted at 03-5524 6000 Course Resources Moodle: https://moodle.utm.my/course/view.php?id=2204 Github: https://github.com/utm-cs/cs2204 Slack: https://utm-cs.slack.com CS2204 - RubricsThis document serves as a guide for the grading of assignments in this course. The rubrics are based on the course learning outcomes and the syallabus. Lab Exercises Time: Released during the lab, Week 2, 3, 6, 9, 12 only. Deadline: 11:59pm on the end of the week. Weight: 2% each, total 10%. Submission: Moodle Format: 2 short-answer questions and 2 coding questions. Grading: Each question is worth 1 point. The total score out of 4 then scales to 2% of the final grade. Each question would be graded 1 point, 0.5 point, or 0 point. Design of the Exercises: Short-answer question 1: Fill in the blanks about the points covered in the lecture. Short-answer question 2: Explain the difference between some concepts. Coding question 1: Fix the code snippet to make it work as expected. Coding question 2: Write a code snippet to achieve the expected result. Project Time: Released in Week 3. Checkpoint in Week 4, 7, 10, 13. Deadline: 11:59pm on the end of the following week (i.e. Week 5, 8, 11, 14). Weight: 6%, 8%, 10%, 6% each, total 30%. Submission: Github. The student will release a stable version of the project on Github. Format: The project will be a website for a fictional company. Student can make up many of the details, but the website must achieve the following requirements: Part 1: HTML Use HTML tags to structure the content of the website. Use HTML tags to add images, links, and tables to the website. Use HTML tags to add forms to the website. Part 2: CSS Use CSS to style the website. Use CSS to add animations to the website. Part 3: JavaScript Use JavaScript to handle user interactions, e.g. form validation. Use JavaScript for dynamic content. Part 4: PHP Use PHP to handle even more dynamic content, e.g. form submission and database queries. Grading Part 1: HTML (6%) Structure (2%): The website is well-strucutred, i.e. the content is organized into sections and subsections. The files are also well managed, by naming them properly and putting them in the right folders. HTML tags (4%): 1% for each of following: images, links, tables, forms. Part 2: CSS (8%) Style (6%): 2% for each of following: overall proper style; different style in different sections; responsive design. Animations (2%): The website has proper animations, e.g. the background color changes when the mouse hovers over a button. Part 3: JavaScript (10%) Form (4%): The form has proper validation, e.g. the form cannot be submitted if the user does not enter a valid email address. Interactions (4%): The website has interactions between different components, e.g. the content changes when the user clicks on a button. Code quality (1%): The code is well-organized, e.g. the code is properly indented, with proper comments and variable names. Browser compatibility (1%): The website works properly in all major browsers, e.g. Chrome, Firefox, Safari, Edge. Part 4: PHP (6%) Form (2%): The form can be submitted, and the submitted data is properly handled. Database (2%): The website has a database, and the database is properly used, e.g. the website can store and retrieve data from the database. Information security (1%): The website is secure, e.g. the database is properly protected from SQL injection attacks. Code quality (1%): The code is well-organized, e.g. the code is properly indented, with proper comments and variable names. Note: The project will be graded based on the latest stable version on Github. The student can make changes to the project after the deadline, but the changes will not be graded. Any of the subtasks can be graded from 0 to full points, with a step of 0.5. The total score out of 30 is directly converted to the final grade. Midterm Exam Time: Lab session in Week 8. Duration: 1 hour Weight: 20% Topics: HTML and CSS only. Format: 10 multiple-choice questions and 2 coding questions. Grading: Each MCQ is worth 1 points. Each coding question is worth 5 points. The total score out of 20 is directly converted to the final grade. MCQ included single-answer, multiple-answer. A partial answer for a multiple-answer question is worth 0.5 points. Each coding question can be graded from 0 to 5 points, with a step of 0.5. Design of the exam: MCQ are about the concepts covered in the lectures. Student should review lab exercise and lecture slides, and pay extra attention to the concepts in Lab 1 (Web and Internet). Coding question 1 will focus on HTML only. 1 point for each of the following: structure, images, links, tables, forms. Coding question 2 will focus on CSS but also require a good understanding of HTML. 3 points for the style, 2 points for the animations. Final Exam Time: Week 15 or 16, depending on the exam schedule. Duration: 2 hours Weight: 40% Topics: HTML, CSS, JavaScript and PHP. Format: 10 multiple-choice questions and 4 coding questions. Grade: Each MCQ is worth 1 points. Coding question worth 10, 8, 6, 6 points respectively. The total score out of 40 is directly converted to the final grade. MCQ included single-answer, multiple-answer. A partial answer for a multiple-answer question is worth 0.5 points. Each coding question can be graded from 0 to full points, with a step of 0.5. Design of the exam: MCQ are about the concepts covered in the lectures. Student should review lab exercise and lecture slides. Coding question 1 will focus on HTML and CSS. 1 point for each of the following: structure, images, links, tables, forms. 3 points for the style, 2 points for the animations. Coding question 2 will focus on JavaScript. 4 points for the form validation, 4 points for the interactions. Coding question 3 will focus on PHP. 2 points for the form submission, 4 points for the database queries. Coding question 4 will be an overall examination of a professional web devloper. 2 points for code robustness, 1 point for browser compatibility, 2 points for information security, 1 point for code quality. Final Grade The final grade is calculated as follows: 10% Lab Exercises 30% Project 20% Midterm Exam 40% Final Exam Course Policies Attendance: Attendance is not required. However, students are encouraged to attend the lectures and labs. The lectures and labs are designed to help students understand the course materials. Students who do not attend the lectures and labs will have a harder time understanding the course materials. Whatsoever, course materials will be made available online, so students can still learn the course materials without attending the lectures and labs. Late Submission: Late submission will not be accepted. The student will receive a 0 for the assignment. Academic Integrity: Academic integrity is expected. Any form of cheating will result in a 0 for the assignment and a report to the Academic Integrity Office. Special Needs: If you have a disability that requires accommodations, please contact the instructor as soon as possible. The instructor will work with you to ensure that you have equal access to the course materials and activities.","categories":[null]},{"title":"CityU Ultimate Computer Science Challenge 2023","path":"/trash/CUCSC.html","content":"Read Before ProceedingThe content of this article is purely fictional and is not related to any organisation or individual in real life. In addition, it contains GPT-3.5 generated text, which may not be accurate or reliable. Please read with caution.This article was created on 2023-05-20. Have fun reading! CityU Ultimate Computer Science Challenge (CUCSC) is a competition for undergraduate students, open to all students in Hong Kong. It is organized by the CityU CS Department, collaborating with CityU EE and Data Science Department, as well as PolyU COMP Department. The competition features a series of challenges covering all aspects in computer science, including but not limited to: algorithms, data structures, programming, operating systems, computer networks, databases, machine learning, web security, and cryptography. Participants should form a team of 2-3 members, and compete in the online preliminary round. The top 10 teams will be invited to the on-site final round, where they will compete for the championship. RegistrationRegistration is open to all undergraduate students in Hong Kong. You must provide your Hong Kong ID, student ID, and email address. Each team should have 2-3 members. You can register as a team, or as an individual. If you register as an individual, you will be randomly assigned to a team (with individuals from the same school if possible). Registration is free, and will be open from 2023-02-01 to 2023-02-28. Preliminary Round Registration: 2023-02-01 to 2023-02-28 Date: 2023-03-04 09:00 to 2023-03-04 21:00 (12 hours) Format: Online Preliminary round features about 40 problems. The result will be ranked according to ICPC rules (i.e., first by number of problems solved, then by submission time). All teams who have solved at least one problem will receive a certificate of participation. The top 10 teams will be invited to the on-site final round. Since the round is online, cheating and unauthorized assistance are strictly prohibited. Any team found cheating will be disqualified. Participants will only be allowed to communicate with their teammates, or ask for clarification from the organizers, on a Discord server. (Participants from the same team will be invited to a private channel so the other teams cannot see their messages, but admins can still see them. Clarification can be asked in public or private channels.) Any other form of communication is prohibited. On the other hand, refering to online resources is allowed. However, you should not copy code from other sources, and anti-plagiarism tools will be used to detect cheating. Final Round Date: 2023-03-11 09:00 to 2023-03-11 21:00 (12 hours) Format: On-site Venue: CityU Computer Lab Final round features about 10 problems. The result will be ranked according to ICPC rules (i.e., first by number of problems solved, then by submission time). Each team will be assigned three computers in the lab, pre-installed with Ubuntu 20.04 and some third-party software (refer to official rules for details). You can bring your own keyboard, mouse, and headphones, but no other electronic devices are allowed. Participants can leave for lunch and dinner during given break times (11:30-14:00 and 17:00-19:30). However, here are a few rules to prevent cheating: At least one member of each team must stay in the lab at all times. Each member can only leave the lab once for no more than 60 minutes each break. (Care for your teammates - don’t stay out for too long!) Leave and return will be recorded by the organizers. Prizes Champion: HKD 8,192 + trophy + medals + certificates 1st runner-up: HKD 4,096 + medals + certificates 2nd runner-up: HKD 2,048 + medals + certificates All other finalists: HKD 512 + certificates Note: There is only one trophy for Champion. For medals and certificates, each team member will receive one. Preliminary round top 20%: certificate of excellence Preliminary round top 50%: certificate of merit Preliminary round, at least one problem solved: certificate of participation","categories":[null]},{"title":"Data Science 101","path":"/trash/DS101.html","content":"Read Before ProceedingThe content of this article is purely fictional and is not related to any organisation or individual in real life. In addition, it contains GPT-3.5 generated text, which may not be accurate or reliable. Please read with caution.This article was created on 2023-05-18. Have fun reading! Data Science 101 (DS101) is a community-driven project to provide a free, open-source and beginner-friendly introduction to data science and machine learning using Python. Inspired by Kaggle Learn, the goal of DS101 is to provide a more structured and comprehensive introduction to data science and machine learning, with a focus on the fundamentals and practical applications. Features Free and open-source: DS101 is free and open-source, licensed under the MIT License, and always welcome contributions from the community. Hands-on and practical: With free online hosted Jupyter notebooks, you can learn and practice data science and machine learning without installing anything on your computer (restrictions apply). Beginner-friendly and structured: DS101 is designed for beginners, but also suitable for more experienced data scientists looking to refresh their knowledge. The content is structured into modules, each covering a specific topic, with a mix of text, code and exercises. Comprehensive: DS101 covers the full data science workflow, from data collection and cleaning, to machine learning and model deployment. Multi language: DS101 is currently available in English and Chinese, and we welcome contributions to translate it into other languages. CoursesDS101 features many courses that are not very long, but are very hands-on and practical. Each course is designed to be completed in a few hours, and you can pick and choose the courses that interest you the most. First Things FirstThis section prepares you for the rest of the courses. Maybe you want a fresh start, or maybe you want to review the basics. Either way, the basics are important, so check whether you are familiar with the language, libraries and math used in the courses: Introduction to Computer Programming: No prior programming experience required. Learn the basics of computer programming using Python. Python for Data Science: A continuation of Introduction to Computer Programming. Learn the basics of Python for data science, including data structures, functions, classes, modules, and more. NumPy and Pandas: Learn how to use NumPy and Pandas, to manipulate and analyze data with ease. Data Visualization: Learn how to use Matplotlib and Seaborn, to create beautiful and informative data visualizations. Linear Algebra: Review the basics of linear algebra, including vectors, matrices, and linear transformations. Probability and Statistics: Review the basics of probability and statistics, including random variables, distributions, hypothesis testing, and more. Working with DataReal-world data are not always clean and ready to use. This section covers the basics of working with data, including data collection, cleaning, and wrangling: Introduction to SQL: Learn the basics of SQL, including data manipulation and querying. Data Collection: Learn how to collect data from various sources, including web scraping, APIs, and databases. Advanced SQL: Learn advanced SQL techniques, including window functions, common table expressions, and more. Data Cleaning: Learn how to clean and prepare data for analysis, including missing data, outliers, and more. Data Wrangling: Learn how to transform and reshape data, including merging, pivoting, and more. Machine LearningNow ready to dive into machine learning? This section covers the basics of machine learning, including supervised and unsupervised learning, model evaluation, and more: Introduction to Machine Learning (+Project): Learn the basics of machine learning, including supervised and unsupervised learning, model evaluation, and more. Create your first machine learning model using Scikit-Learn. Feature Engineering (+Project): Learn how to create new features from existing data, including feature selection, feature extraction, and more. Machine Learning with Text (+Project): Learn how to apply machine learning to text data, including text preprocessing, feature extraction, and more. Introduction to Deep Learning (+Project): Learn the basics of deep learning, including neural networks, convolutional neural networks, recurrent neural networks, and more. Create your first deep learning model using TensorFlow and Keras. Computer Vision (+Project): Learn how to apply deep learning to computer vision, including image classification, object detection, and more. One Step FurtherMore specific and practical topics can seem overhelming. But don’t worry, we’ve got you covered. This section covers more advanced topics, including model deployment, time series analysis, geospatial analysis, recommender systems, and more: Model Deployment: Learn how to deploy machine learning models, including web applications, APIs, and more. Time Series Analysis: Learn how to analyze time series data, including time series decomposition, forecasting, and more. GeoSpatial Analysis: Learn how to analyze geospatial data, including geocoding, reverse geocoding, and more. Recommender Systems: Learn how to build recommender systems, including content-based filtering, collaborative filtering, and more. Machine Learning Explainability: Learn how to explain machine learning models, including feature importance, partial dependence plots, and more. Beyond the BasicsYeah, you might wonder why all the courses below are titled “Basic Guide”. Well, in practice, there are many more advanced topics, but they are often built on top of the basics. So, if you want to learn more, you should first make sure you are familiar with the basics. This section covers more advanced topics, including natural language processing, computer vision, game AI, reinforcement learning, and more: Basic Guide to Game AI: Learn how to build game AI, including pathfinding, decision making, and more. Basic Guide to Inforcement Learning: Learn the basics of reinforcement learning, including Markov decision processes, Q-learning, and more. Basic Guide to Natural Language Processing: Learn the basics of natural language processing, including text preprocessing, word embeddings, and more. Basic Guide to Computer Vision: Dive deeper into computer vision, including image segmentation, object detection, and more. Hopefully there will be more topics in this section in the future. If you are interested in contributing, please check out the Contributing Guide.","categories":[null]},{"title":"CS2310 Computer Programming","path":"/trash/CS2310.html","content":"Read Before ProceedingThe content of this article is purely fictional and is not related to any organisation or individual in real life. In addition, it contains GPT-3.5 generated text, which may not be accurate or reliable. Please read with caution.This article was created on 2023-01-31. Have fun reading! CS 2310 - Computer Programming (C++)Course DescriptionC++ is a general-purpose programming language that is widely used in industry. This course will introduce students to the C++ programming language and its use in developing software applications. Topics include: basic programming concepts, data types, control structures, functions, arrays, pointers, classes, inheritance, and file I&#x2F;O. Students will learn to write programs that solve problems using the C++ programming language. Compared to C++ courses offered in the early years, today the course will emphasize the use of C++ in the context of object-oriented programming, and Standard Template Library (STL) containers and algorithms. This course will also prepare students for operating systems and computer architecture courses. Course InformationDuration, Credits, Offered Department and Semester One Semester 3 Credits Department of Computer Science Fall, Spring 2022&#x2F;23 (note: If you are reading this page in the future, please check the course catalog for the most up-to-date information) Pre-requisites CS 1102 - Introduction to Computer Science, OR CS 1302 - Introduction to Computer Programming Exclusive Courses CS 2311 - Computer Programming (note: CS 2311 is intended for engineering students except those who major in CS) Course ContentsCourse Objectives Understand the basic concepts of C++ language and object-oriented programming. Utilize C++ language and STL to solve problems. Understand and implement the fundemental data structures and algorithms. Understand the basic concepts of operating systems and computer architecture. Write codes with good style and readability. Course Topics Week Topics Lab 1 Hello World NO LAB 2 Variables, Expressions, and Statements L1: Environment Setup 3 Conditional Statements and Loops L2: Simple Calculator 4 Functions, Arrays, and Pointers L3: Enhanced Calculator 5 Classes and Objects L4: Unnamed Simulator (I) 6 Inheritance L5: Unnamed Simulator (II) 7 STL Containers and Algorithms L6: Midterm Review 8 Midterm Exam NO LAB 9 Algorithm (I) L7: Merging and Sorting 10 Algorithm (II) L8: Bisection and Searching 11 Data Structures (I) L9: Linked List 12 Data Structures (II) L10: Unnamed Simulator (III) 13 File I&#x2F;O, Exception Handling, and Templates L11: Unnamed Simulator (IV) Course Assessment Week Assessment Weight 4 Enhanced Calculator 5% 6 Unnamed Simulator (II) 10% 8 Midterm Exam 20% 13 Unnamed Simulator (IV) 15% 13+ Final Exam 50% Continuous assessment: 50% Project: 30% Midterm Exam: 20% Submission after deadline NOT ACCEPTED Final Exam: 50% Held during the final exam period of the semester (Week 15 or 16) A minimum of 40% exam score is required to pass the course Make-up exam is only allowed for students who have a valid reason (e.g. illness, accident, etc.) A minimum of 35% final grade is required to pass the course Students might be deducted up to 5% for attendance and participation Course MaterialsTextbooks are not required for this course. On contrary, digital reference materials are frequently used in the course. Bringing a laptop to lecture is highly recommended, but not necessary in lab sessions (there are enough computers in the lab). However, students are encouraged to get a (digital) copy of the following textbooks for further C++ learning: C++ Primer Plus, 6th Edition by Stephen Prata Anti-Plagiarism PolicyGiven the nature of this course, students are expected to write their own codes. Students are not allowed to copy codes from other students or the Internet. Students are also not allowed to share their codes with other students. Any violation of this policy will be considered as academic dishonesty and will be dealt with accordingly. CS 2310 - Grading RubricsThis document is the grading rubrics for the course CS 2310 - Computer Programming (C++). It is based on the course syllabus. Continuous AssessmentWeek 4: Enhanced Calculator (5%)Since this is the very first project, it is graded very leniently. The goal is to get you familiar with the environment and the basic C++ syntax. A simple calculator is required to be implemented. The calculator should be able to perform the following operations: Addition, subtraction, multiplication, and division Exponentiation, square root, and logarithm Trigonometric functions (sine, cosine, and tangent) The deadline will be Wednesday of Week 5. NO SUBMISSION AFTER DEADLINE WILL BE ACCEPTED. The submission will be done via GitHub Classroom, which will also be employed in later projects. 0.5-2.5% for the program compiles and runs without error Note: To suit the leisure grading for this project only, you will only be deducted 0.5% for failing to compile or run. On the other hand, as long as your program compiles and runs, you will get 2.5% for this part. In later projects, you will get very low marks if your program fails to compile or run. 5% for the program meets the requirements Note: The score is capped at 5% for this project. If your program fails to compile or run, you can still get up to 4.5% mark for the project if you write mostly correct code. If your program complies and runs, and at least 2.5% is obtained from the first part, you will get full marks for this project. Week 6: Unnamed Simulator (II) (10%)This project is a continuation of the Week 5 project. The goal is to get you familiar with the basic OOP concepts. You should also save your project code in a GitHub repository for future development. TAs will guide you how to setup the GitHub repository. The details will be handed out in Week 5. The deadline will be Wednesday of Week 7. 1% for the program compiles and runs without error Note: If your program fails to compile or run, you will get up to 2% mark for the complete project. 4% for implementing the (I) part (as instructed in Week 5). In detail: 2% for the class design 2% for the implementation 4% for implementing the (II) part (as instructed in Week 6). In detail: 2% for the inheritance 2% for the C++11 features (e.g. auto, lambda, etc.) 1% for good programming style, practices, and readability Week 13: Unnamed Simulator (IV) (15%)This is the final project of the course. As a continuation of the Week 6 project, you will be required to implement a lot more features. The details will be handed out in Week 5, when the first part of the project begins. The deadline will be Wednesday of Week 14. 1% for the program compiles and runs without error Note: If your program fails to compile or run, you will get up to 3% mark for the complete project. 6% for Unnamed Simulator (III) part (as instructed in Week 12). In detail: 3% for bisection 3% for the path finding algorithm 6% for Unnamed Simulator (IV) part (as instructed in Week 13). In detail: 3% for linked list 3% for searching algorithm Note: Time and space complexity of the points listed above will be considered. Thus a correct but inefficient implementation will not get full marks. 1.5% for STL algorithms and containers. In detail: 0.5% for STL algorithms. You should utilize at least 2 STL algorithms properly. 1% for STL containers. You should utilize at least 2 STL containers properly. 0.5% for good programming style, practices, and readability Midterm Exam (20%)The midterm exam will be held in Week 8 during the lecture time. The exam will be closed book and closed note. Since the exam can only be completed on the lab computers, laptops are not required and calculators are not allowed. Covering Topics, Duration, and Format All topics during Weeks 1-7 1 hour and 30 minutes 4 multiple choice questions (20%), 4 code-completion questions (40%), 2 code-writing questions (40%) Grading Rubrics 20% for 4 multiple choice questions, 5% each 40% for 4 code-completion questions, 10% each. In detail: 5% each if the code compiles and runs without error 5% each if the code runs as expected 40% for 2 code-writing questions, 20% each. In detail: 6% each if the code compiles and runs without error 6% each for correctly completing the 1st subtask 8% each for correctly completing the complete task Final Exam (50%)The final exam will be held in Week 15 or 16 according to the schedule of the university. Same as the midterm exam, the exam will be closed book and closed note. Laptops are not required and calculators are not allowed. Covering Topics, Duration, and Format All topics during Weeks 1-13 2 hours 4 multiple choice questions (12%), 2 code-completion questions (16%), 4 code-writing questions (72%) Grading Rubrics 12% for 4 multiple choice questions, 3% each 16% for 2 code-completion questions, 8% each. In detail: 1% each if the code compiles and runs without error 7% each if the code runs as expected 72% for 4 code-writing questions, 18% each. In detail: 1% each if the code compiles and runs without error 5% each for correctly completing the 1st subtask 5% each for correctly completing the 2nd subtask 7% each for correctly completing the complete task GradingThe final grade will be calculated as follows: ​ Final Grade &#x3D; 0.2 * Midterm Exam + 0.5 * Final Exam + 0.3 * Continuous Assessment A minimum of 35% final grade is required to pass the course. A minimum of 40% exam grade is required to pass the course. A minimum of 85% final grade is required to get a grade of A range. Estimated from the past experience: the average final grade is around 60%. the average exam grade is around 50%. roughly 10% of the students get a grade of A range. roughly 5% of the students fail the course. A+ grade for this course shows both your diligence and intelligence. A+ students are reported to have an average GPA of 3.8 or above in their major. Academic IntegrityIt is students’ responsibility to understand and follow the university’s academic integrity policy. Given the nature of programming, it is difficult to detect plagiarism. Highly similar code is not necessarily plagiarism. However, if you copy the code from the Internet or your classmates, you will likely to be caught. You will be reported to the university’s academic integrity committee. The penalty can vary from a warning to expulsion from the university. You are encouraged to discuss the assignments with your classmates. You are also encouraged to use the Internet to search for solutions to the assignments. However, you should not copy the code from the Internet. You should not copy the code from your classmates. You should not copy the code from your previous assignments.","categories":[null]},{"title":"Galaxy.click - Association for Incremental Game Lovers","path":"/trash/Galaxy.html","content":"Read Before ProceedingThe content of this article is purely fictional and is not related to any organisation or individual in real life. In addition, it contains GPT-3.5 generated text, which may not be accurate or reliable. Please read with caution.This article was created on 2023-05-22. Have fun reading! What is Galaxy.click?Galaxy.click is a new platform for incremental games. It is a place where you can play incremental games, share your games with others, and discuss them. Features: Host your own games Play, rate, comment on other’s games Discuss games and share ideas Provide better QoL with Galaxy.click cloud saving and analytics services How to host your own game?Just like hosting on Github Pages, you can host a lightweight incremental game on Galaxy.click. All you need to do is to create a repository on Github and upload your game files to the repository. Then, go to Galaxy.click and click “Host your own game” button. You will be asked to enter your Github username and repository name. After that, your game will be hosted on Galaxy.click. Why should I join Galaxy.click if I can host my own game?Galaxy.click is not only a platform for incremental games, but also a community. By hosting on Galaxy.click, you can enjoy many benefits: Get more exposure for your game Collect feedback and comments easily (instead of many Discord messages and Reddit posts) Publish a guide (instead of pasting Google Docs link in your game description) Provide cloud saving to prevent save loss Integrating theme with Galaxy.click to make your game look better LevelJust like the level system in many incremental games, you can level up on Galaxy.click. You can level up by playing games, creating games, along with many other ways to show your love for incremental games or contribute to the community. You start at level 1, and the experience required to level up is 60 * 1.15 ^ (level - 1), rounded down. You can check your level and experience on your profile page. You can earn experience by: Playing games. You receive 1 experience every 60 seconds playing a game. (You can only receive experience from one game at a time. If multiple sessions are detected, only the latest session will be counted.) Creating games. You receive 100 experience for creating a game, plus 1% of players’ experience earned from playing your game. Commenting on games. You receive 10 * sqrt(net upvotes) experience for each comment. If net upvotes is negative, you will lose experience instead. Upvoting&#x2F;downvoting comments. You receive 1 experience for each upvote&#x2F;downvote, up to 5 times per day. Rating games. You receive 10 experience for each rating, up to 5 times per day. You can only rate if you have played the game for at least 5 minutes. (Note: Your rating will receive a weight based on your level. Higher level players’ ratings will have more impact on the game’s rating.) Contributing to Galaxy.click. You receive some experience or even jump to certain level if you are among the core contributors! Join our Discord server to learn more.","categories":[null]},{"title":"Destined Future","path":"/trash/Destined.html","content":"Read Before ProceedingThe content of this article is purely fictional and is not related to any organisation or individual in real life. In addition, it contains GPT-3.5 generated text, which may not be accurate or reliable. Please read with caution.This article was created on 2023-03-03. Have fun reading! Destined Future is the final section of Celestial Challenge, and is the final section of the game. It is unlocked by completing the previous Celestial Challenge sections (a total of 6). Upon completing all the previous section, the screen will instantly become white, and more visual effects including vibration and chaotic patterns will appear. After 30 seconds the game will restart, with only a single button read ‘Accept your Destiny’ appears. If player don’t want to enter Destined Future now, they can restart the game manually to return to the main menu. If player choose to enter Destined Future, a model will appear, emphasizing that the operation is irreversible. Upon entering Destined Future, almost all content up to Celestial Challenge will be reset, but not including achievements and statistics. The player will receive the most heavy nerf they can ever imagine, and they will have to work from the very beginning to get back to where they were. Destined Future cannot be escaped, and the player can never return to the main menu. Upon completing the previous 6 Celestial Challenge sections in Destined Future, the screen will instantly become black, and different visual effects including vibration and chaotic patterns will appear. After 30 seconds the game will restart, with only a single button read ‘Redeem your Destiny’ appears. Redeemed Destiny is also an irreversible operation, and players cannot return to the main menu after seeing this screen. Upon entering Redeemed Destiny, almost all content up to Celestial Challenge will be reset, but this time with many buffs and bonuses. The players will still have to work from the very beginning, but they will reach the end in several minutes. Upon completing the previous 6 Celestial Challenge sections in Redeemed Destiny, all the contents start to collapse, and the final theme song will be played. This is the end of the game. After the song is over, the game will restart, with everything except secret achievements reset. This time is a total reset, player will start to play the game from the very beginning, with no bonuses or nerfs. “Destined Future” is the final section of Antimatter Dimension, and is unlocked by beating all the Celestial Challenges. This operation is irreversible and player will start from the very beginning of the game with plenty nerfs. Upon beating all the Celestial Challenge in the Destined Future, “Redeemed Destiny” is unlocked. This is similar to the Destined Future but player is heavily buffed. And finally beating all the Celestial Challenge in the Redeemed Destiny is the very end of the game, credits will be displayed with ending theme song played. Can you please help think of quotes by the Celestial Pelle for different stages above? Upon unlocking the Destined Future: “The path ahead is treacherous, but your determination has brought you here. The Destined Future awaits you, but be warned: once you enter, there is no turning back.” Upon completing the Destined Future: “You have completed the Destined Future. You have proven yourself worthy of the ultimate challenge. The Redeemed Destiny awaits you, but be warned: once you enter, there is no turning back.” Upon unlocking the Redeemed Destiny: “The Redeemed Destiny is a reward for those who have persevered through the Destined Future. It is a blessing, but it is also a curse. Only the truly worthy can unlock its secrets.” Upon completing the Redeemed Destiny: “As you stand at the pinnacle of existence, remember that all things must come to an end. The ultimate collapse of reality awaits you, but your journey has been one of true enlightenment.”","categories":[null]},{"title":"CityU Graduation Q&A 2023","path":"/trash/Graduation.html","content":"Read Before ProceedingThe content of this article is purely fictional and is not related to any organisation or individual in real life. In addition, it contains GPT-3.5 generated text, which may not be accurate or reliable. Please read with caution.This article was created on 2023-05-07. Have fun reading! Q: What is Graduation Date for 2023?A: For students graudate in Semester A, the graduation date is 1 Feb 2023. For students graudate in Semester B, the graduation date is 1 Jun 2023. For students graudate in Summer Term, the graduation date is 1 Oct 2023. Q: What is the difference between Graduation Date and Graduation Ceremony?A: Graduation Date is the date that you are officially graduated from CityU. Graduation Ceremony is the date that you attend the ceremony and receive the certificate. There are three graduation dates in a year, each corresponding to a term. However, since most students graduate in Semester B, there is only one graduation ceremony in a year, which is held in mid-May. After your graduation date, your student status will be changed to “Graduated” (for public access) or “Alumni” (for internal access). This means you are no longer a student cannot receive any student benefits cannot enter the campus without permission You should check your credit card, visa, and other documents since they may be expired after your graduation date. You can check your graduation date in AIMS. Q: What if I continue to further study in CityU?A: You will be considered as a new student and you will have a new student ID. You will not be able to use your old student ID to access the campus. And in the gap between your graduation date and the start of your new study, you are still not considered as a student. You can, however, access campus as Alumni (which costs HKD 100 per year). Q: I am going to exchange in Year 4 Semester B. Will this affect my graduation date?A: Yes. You will need to present your final year project in Summer Term. All other courses planned in Semester B will be exempted (unless otherwise specified by your department). Your graduation date will thus postpone to 1 Oct 2023. You may or may not be able to attend the graduation ceremony in May, depending on your exchange period. But you can join the ceremony online (via Zoom) if you cannot attend in person. Q: Further on last question, will this affect my postgraduate application?A: Yes, to some extent. You can only apply for CityU postgraduate programmes in the year you graduate. For other universities, you will need to apply in the next year. You should take serious consideration on this. If you are planning to apply for postgraduate programmes in other universities, you should not go for exchange in Year 4 Semester B. Q: So Year 4 Semester B is my last semester?A: Yes, generally. If you fulfill all the requirements, you will graduate in Semester B. You cannot take any courses in Summer Term or participate in university programmes in Summer Term since you are no longer a student. However, if you have academic standing issues, you may need to take courses in Summer Term to fulfill the requirements. Q: Can I graduate in Year 4 Semester A if I fulfill all the requirements?A: Yes, you can. But you will need to apply for early graduation. You can apply for early graduation in Year 3 Semester B. The application deadline is usually in late March. You can check the details in CityU website. You will not be able to attend the graduation ceremony in May in person. But you can join the ceremony online (via Zoom). Q: Can I graduate in Year 3 or even earlier?A: No. The maximum credits per semester is designed to prevent you from doing so. Q: Can I postpone my graduation date?A: No, generally. Once you fulfill all the requirements, you will graduate in the corresponding semester. The only exceptions have been mentioned above: Exchange in Year 4 Semester B, which will postpone your graduation date to Summer Term. Not applying early graduation in Year 4 Semester A, which, if you wish, will let you graduate like other students in Semester B. However, if you do have special reasons with strong justifications, you can apply for late graduation. You can check the details in CityU website. Q: Can I attend the graduation ceremony in May if I graduate in Summer Term?A: It depends: If you cannot graduate in Semester B because of exchange, you can attend the graduation ceremony in May in person or via Zoom. But you will not receive the certificate in May. You will receive the certificate in Summer Term. If you cannot graduate in Semester B because of academic standing issues, you cannot attend the graduation ceremony in May.","categories":[null]},{"title":"Antimatter Dimensions Masochist Mod","path":"/trash/Masochist.html","content":"Read Before ProceedingThe content of this article is purely fictional and is not related to any organisation or individual in real life. In addition, it contains GPT-3.5 generated text, which may not be accurate or reliable. Please read with caution.This article was created on 2023-03-01. Have fun reading! QoLPre-InfinityUnlike NG-5, you do not start with any direct nerf at this stage. However, you will still be slowed by achievements gradually. AutobuyerAutobuyers cannot be unlocked before infinity. You have to finish corresponding Normal Challenge to unlock them, and corresponding Automation Challenge to upgrade them. InfinityNormal ChallengeAll normal challenges now only unlocks the autobuyer, not unlocking their upgrades. Unlock: only C1 is available after an eternity or reality. You have to pay IP to unlock other challenges. ID Vanilla Condition Masochist Condition Unlock C1 Reach Infinity for the first time outside of a challenge. (Unchanged) 0 IP C2 Buying Antimatter Dimensions or Tickspeed upgrades halts production of all Antimatter Dimensions. Production gradually returns to normal over 3 minutes. Another 10 seconds after purchase, before the production starts to recover. 1 IP C3 The 1st Antimatter Dimension is heavily weakened, but gets an uncapped exponentially increasing multiplier. This multiplier resets after Dimension Boosts and Antimatter Galaxies. The nerf applies to all ADs, exponential increase speed lowered by 100 times. 3 IP C4 Buying a dimension automatically erases all lower tier dimensions, like a sacrifice without the boost. Erases all dimensions except the 8th. 9 IP C5 The Tickspeed purchase multiplier starts at ×1.080 instead of ×1.125. Starts at x1.002, and galaxies strength lowered to 10%. 27 IP C6 Upgrading each Antimatter Dimension costs the Antimatter Dimension 2 tiers below it instead of antimatter. Antimatter Dimension prices are modified. Reworked to AD7-8 doesn’t produce anything. Dimensional sacrifice is disabled. 81 IP C7 The multiplier from buying 10 Antimatter Dimensions is reduced to ×1. This increases by ×0.2 per Dimension Boost, to a maximum of ×2, and is unaffected by any upgrades. Base buy 10 multiplier decreased to x0.2. 243 IP C8 Dimension Boosts provide no multiplier and Antimatter Galaxies cannot be bought. Dimensional Sacrifice resets antimatter and all Antimatter Dimensions, but also gives a significantly stronger multiplier. Dimensional sacrifice multiplier is nerfed: ((log10(AD1)/10)^1.6) and only unlocked upon 7th dim boost. 729 IP C9 Whenever you buy 10 of a dimension or tickspeed, everything else of equal cost will increase to its next cost step. (Unchanged) 2187 IP C10 There are only 6 dimensions, with dimension boost and antimatter galaxy costs modified. Reworked to only 4 dimensions. 6561 IP C11 There’s normal matter which rises. If it exceeds your antimatter, it will dimension boost without giving the bonus. Matter rises much faster and super-exponentially. 19683 IP C12 Each Antimatter Dimension produces the Dimension 2 tiers below it instead of 1. Both 1st and 2nd Dimensions produce antimatter. Reworked to produce 4 dimensions below it. 59049 IP Automation ChallengeThese challenges unlock the upgrade of corresponding normal autobuyers. For example, AC1 unlocks the upgrade of autobuyer unlocked by C1, which is 1st AD autobuyer. Infinity ChallengeThere are 4 additional infinity challenges, so every type of challenges have 12 in total. Infinity UpgradeReplicantiEternityEternity UpgradeEU31: Reduce post-infinity Infinity Dimension cost multiplier scaling: In masochist mod, infinity dimension cost scales super-exponentially after 1.8e308 IP. The cost multiplier is multiplied by 10 per purchase, just like antimatter dimension cost scales above 1.8e308 AM. EU31 lowers the scale. Unlike AD, this scale can be lowered to x1, disabling the super-exponential growth. The first 24 tiers of EU31 decreases the expotent of ID cost scaling (abbreviated as IDSE). Each tier lowers IDSE by 1&#x2F;25, making ID cost scaling decreased from 10 to 10^(1&#x2F;25). The 25th to 29th tiers further divide IDSE by 10 each, making ID cost scaling decreased from 10^(1&#x2F;25) to 10^(1&#x2F;2500000). The 30th tier, finally, set IDSE to 0, so ID cost scaling is disabled. The cost of this upgrade scales super-exponentially, or more specifically, the exponent of the cost grows cubically. The base cost is 10 EP, and the base price multiplier is 10. The price multiplier is multiplied by 10 per purchase, with this 10 further multiplied by 10 per purchase. The 30th tier costs 1e4090 EP, which is beyond the minimal requirement for Reality. Refer to the image (from discord) below for the price curve and each tier’s effect. RealityCelestialAchievementAchievement multiplier is decreased to x0.97 per achievement and x0.75 per completed row. This behavior can be changed with later upgrades. Most of the achievement rewards are deleted or inverted to penalty.","categories":[null]},{"title":"Kaggle New Ranking System","path":"/trash/Kaggle.html","content":"Read Before ProceedingThe content of this article is purely fictional and is not related to any organisation or individual in real life. In addition, it contains GPT-3.5 generated text, which may not be accurate or reliable. Please read with caution.This article was created on 2023-05-17. Have fun reading! Previously, Kaggle ranking was based on the number of medals you have in four different fields: competitions, kernels, discussions, and datasets. Today we are introducing our brand new ranking system. The new ranking system is based on “best performances” in two different fields: competitions and communities (kernels, discussions, and datasets). Much more tiers are introduced in the new ranking system. The new ranking system is designed to encourage Kagglers to contribute to both competitions and communities. Performance PointsWhether you are competing in competitions or contributing to communities, you will be awarded performance points (PP). PP for competitions are awarded based on your rank and the total number of competitors in the competition. All team and individual participants will be treated equally. PP for communities are awarded based on the number of net votes (positive votes minus negative votes) you receive on your kernels, discussions, and datasets. PP will decay over time, with a half-life of 360 days. PP is updated daily. Everyday 0:00 UTC is the cutoff time for the daily update. Your current PP will be multiplied by roughly 0.998, and then added with the PP you earned in the past 24 hours. (The decay will actually start on the second day after you made your contribution. For example, if the competition results are announced on 2023-01-01, you will earn PP on 2023-01-02 which starts to decay on 2023-01-03.) The decay is designed to encourage Kagglers to keep contributing to Kaggle. For competitions, your PP will change one day after the competition results are annouced. Some of the competitions may take a few hours or days to evaluate every submission so be patient. For communities, your PP will change one day after you publish your contribution, and updated daily with the same decay. If you create a private kernel, discussion, or dataset, your PP will change one day after you make it public. Once published, you cannot make it private or delete it (unless violating our Terms of Use). This makes new votes on older contributions less impactful. Before digging into the details, let’s take a look at the new ranking tiers. Ranking TiersPreviously we only had four tiers: novice, contributor, expert, and master. The new ranking system has 9 tiers! Tier PP Req. Note Novice 0 Adept 100 1 comp&#x2F;comm Specialist 1000 5 comp&#x2F;comm Expert 2000 2 bronze medals Candidate Master 3000 1 silver medal Master 4000 3 silver medals International Master 6000 2 gold medals Grandmaster 8000 5 gold medals International Grandmaster 10000 1 platinum medal Note: comp&#x2F;comm means competitions or communities participation. Even negative-voted comments count as participation. Don’t hesitate to share your thoughts! MedalsAs you have noticed, we have introduced a new type of medal: platinum. Platinum medals are awarded to top 3 Kagglers in official competitions. For communities, platinum medals are awarded to the best of the best, to those who are categorized as “hot” content by our machine learning algorithm. The algorithm is designed to promote high quality content that is relevant to the community. The algorithm is still in beta and we will continue to improve it. It is estimated that we will have the same amount of competition and community platinum medals in the long run, which is roughly 15 per month. (Platinum medals are not awarded to past competitions and communities. Sorry!) Gold, silver and bronze medals have changed a bit. Gold medals are awarded to top 10% Kagglers in official competitions. For communities, gold medals are awarded to the top 10% of the “hot” content. Silver medals are awarded to top 20% Kagglers in official competitions. For communities, silver medals are awarded to the top 20% of the “hot” content. Bronze medals are awarded to top 30% Kagglers in official competitions. For communities, bronze medals are awarded to the top 30% of the “hot” content. PP CalculationPP does not simply addes up like 1+1&#x3D;2. Instead, it is calculated using the following formula: $$\\mathrm{PP}&#x3D;\\Sigma \\mathrm{PP}_i\\cdot 0.95^{i-1}$$ (*) Where, $\\mathrm{PP}_i$ is the $i$-th highest competitions or communities PP you have earned, after applying the decay. For example, you have two competitions PP: 1000 and 500 (after decay). Your overall PP is 1000+500*0.95&#x3D;1475. This means the more PP you have, the less PP you will earn from new competitions or communities PP. Given the nature of geometric series, the maximum possible competition PP is roughly 1000&#x2F;(1-0.95)&#x3D;20000. This means you can keep your International Grandmaster tier even if you left Kaggle for a gap year! However, we sincerely wish you come back and contribute to Kaggle! You will soon get even more PP than before. Competition PP$$\\mathrm{PP_i}&#x3D;(500+log_2(n_i))\\cdot 0.995^{r_i-1}$$ Where, $n_i$ is the number of competitors in the $i$-th competition, and $r_i$ is your rank in the $i$-th competition. For example, you have a competition with 1000 competitors. If you rank 1st, your PP is 998.289. If you rank 10th, your PP is 954.254. If you rank 100th, your PP is 607.773. If you rank 500th, your PP is 81.841. If you rank 1000th, your PP is 6.676. The rank coefficient q&#x3D;0.995 might be adjusted for competitions with a larger number of competitors. Currently, the numbers are designed for ordinary competitions which usually comes with less than 2000 participants. Note: only participants with submissions are counted. Contribution PPKernels, Discussions, and DatasetsThese three types of contributions are treated equally, and they are all counted as communities PP using the following formula: $$\\mathrm{PP_i}&#x3D;\\sgn(v_i)\\cdot 10\\cdot \\frac{1-0.99^{|v_i|}}{1-0.99}$$ Where, $v_i$ is the net votes (positive votes minus negative votes) you received on your $i$-th contribution. Finally your overall communities PP is calculated using formula (*). For example, you have a kernel with 100 upvotes and 10 downvotes. Your net votes is 90. Your PP is 595.268 (note: all PP are internally stored as floating numbers but displayed as integers, rounded to the nearest integer). Again, given the nature of geometric series, the maximum possible PP for a single contribution is roughly 10&#x2F;(1-0.99)&#x3D;1000. CommentsComments are not considered in the formula (*). However, you still earn or lose PP for comments. $$\\mathrm{PP_i}&#x3D;\\sgn(v_i)\\log_2(|v_i|+1)$$ Where, $v_i$ is the net votes (positive votes minus negative votes) you received on your $i$-th comment. Comments PP adds up directly. If you have over 1000 comments PP, they will be 50% as effective. If you have over 2000 effective comments PP, they will be capped at 2000. The total maximum possible PP for communities is roughly 20000 from KDDs (kernel, discussion, and dataset) and 2000 from comments, which is 22000 in total. Q&amp;AQ: Why do you introduce the new ranking system?A: We want to encourage Kagglers to contribute to Kaggle in more ways. We also want to encourage Kagglers to keep contributing to Kaggle. The new ranking system is designed to achieve these goals. Q: Can I reach higher tier without satisfying lower tier requirements?A: Yes. For example, if you have 3000 PP with a silver medal, you will be promoted to Candidate Master tier, even if you haven’t got 5 bronze medals for Expert tier. If you have 3000 PP with a gold or even platinum medal, you will still be promoted to Candidate Master tier. That is, for the “medals” requirement, all higher medals count. Q: Can I reach higher tier without satisfying the PP requirement?A: No. You must satisfy both the PP requirement and the medals requirement to reach higher tier. Q: Contributing to communities is not as hard as winning competitions. Why do you treat them equally?A: The first is, there are two separate ranking systems, one for communities and another for competitions. By default the one with higher PP will be used to determine user handle color. However, you can choose to use the other one by clicking the “Primary” button on your profile page. The second is, yes, we regard communities as important as competitions. For highly ranked Kagglers, they are usually very good at competitions. However, they are also very good at sharing their knowledge and experience with others. We want to encourage them to do so. The third is, we have actually integrated the original KDD rankings into one, which makes it easier to understand and more competitive. Q: How rare is the platinum medal?A: Very rare! You can check the number of platinum medals awarded in the past 30 days on the Kaggle Rankings page. It is estimated that we will have the same amount of competition and community platinum medals in the long run, which is roughly 15 per month. Q: How is the “hot” content calculated?A: As a platform expertising in data science, we use a data-driven approach to determine the “hot” content. The “temperature” is determined by the following aspects: The number of net votes, and percentage of upvotes. The publishing time. The more recent the content is published, the more “hot” it is. The number of views. The reaction rates. For kernel, it is fork rate (fork &#x2F; view). For discussion, it is reply rate (reply &#x2F; view). For dataset, it is download rate (download &#x2F; view). Note these three rates are treated differently to make sure they are comparable. For example, fewer users are likely to download a dataset than to reply to a discussion. Therefore, the download rate is weighted more than the reply rate. These data provides a more comprehensive view of the content quality. The “hot” content is updated every 30 minutes, and will be cached for another 30 minutes (i.e., will keep for another 30 minutes even if it is no longer “hot”). We are also planning to add more features, like “rising stars” (for new, potential “hot” content), and “trending” (for content that is “hot” for a long time). Q: How is the “top” content calculated?A: The peak “temperature” - not considering the publishing time - is used to determine the “top” content. Instead of publish time, the temperature will start to decay seven days after peak. The “top” content is updated daily, and will be cached for another day (i.e., will keep for another day even if it is no longer “top”). Q: What will you do with current rankings?A: The final current rankings will be frozen and archived when the new ranking system is launched on 2023-06-01 00:00 UTC. The archived rankings will be available on the Kaggle Rankings page.","categories":[null]},{"title":"Hatsune Miku Wiki: Lyrics Format Guidelines","path":"/trash/Miku.html","content":"Read Before ProceedingThe content of this article is purely fictional and is not related to any organisation or individual in real life. In addition, it contains GPT-3.5 generated text, which may not be accurate or reliable. Please read with caution.This article was created on 2023-07-03. Have fun reading! IntroductionThis document is a set of guidelines for formatting lyrics on the Hatsune Miku Wiki. It is intended to be used as a reference for editors who are unsure of how to format lyrics, and as a standard for editors to follow when adding lyrics to the wiki. If the lyrics is in a language other than English, please refer to the Language Guidelines on VocaDB. General GuidelinesBe as simple as possible. Do not use complicated formatting or markup if not necessary. Reference LinksIt is a good practice (but not necessary) to list where you got the lyrics from, and who translated them. This can be done by adding a link to the source in the “External Links” section. If the lyrics is official, you generally don’t need to care about formatting issues including line and paragraph breaks. However, if the lyrics is not official (from comments, or your own transcription), please follow the guidelines below. Line BreaksThere is NO NEED to follow the line breaks in the music video. Line breaks should be added only when there is a clear pause in the lyrics, or when the lyrics is too long to fit in one line. For example, a single word repeated multiple times should be in one line, even if it is displayed in multiple lines in the music video. Paragraph BreaksParagraph breaks should be added when there is a clear break in the song, such as a instrumental break (interlude), or a change in the singing style. For example, changing from pre-chrous to chorus, or from chorus to verse should be in different paragraphs. Long, continuous lyrics should (but not necessarily) be split into multiple paragraphs, preferably in groups of 4&#x2F;8 lines, for readability. Line LengthThe maximum line length should be 20 full-width characters, or 40 half-width characters. This is to ensure that the lyrics can be displayed properly on mobile devices. Advanced FormattingKanji ReadingsDo not manually add Kanji readings to the lyrics. The Kanji readings will be automatically added by the wiki. However, in the following cases, you should manually add the Kanji readings: The Kanji is read differently from kunyomi or onyomi (that is, actually pronounced as another word) (always use katakana) There are wordplay on a word with same Kanji but different readings (always use hiragana. even if one is kunyomi and the other is onyomi, words in dictionary are always written in hiragana) There are wordplay on a word with same reading but different Kanji (hiragana for kunyomi, katakana for onyomi) Colored TextOnly use colored text if it is highly necessary to distinguish between different singers. For example, if you are working on a Kotonoha Akane and Kotonoha Aoi duet, you should use colored text to distinguish between the two singers. You don’t need to color the parts where they sing together. If you are working on a song with many singers where everone just sings a few lines, colored text would make that a mess. In this case, you should not use colored text. Use color that represents the singer’s image color. If the singer does not have an image color, use the color of the singer’s name in the infobox. Secondary Lyric WordsIf there are secondary lyric words (such as background, vague, or overlapping words), you should add them in parentheses. For example, if the lyrics is “I love you”, but the singer sings “I love you (I love you)”, you should add the secondary lyric words in parentheses. Secondary Lyric LinesIf there are secondary lyric lines, you should add them in italics. Secondary Lyric ParagraphsIf there are secondary lyric paragraphs, you should add them in italics, and add a blank line before and after the paragraph.","categories":[null]},{"title":"雀魂个人巡回赛 (Majsoul Individual Tournament)","path":"/trash/MIT.html","content":"阅前须知本文内容纯属虚构，与现实生活中的任何组织、个人均无关系。此外，包含 GPT-3.5 生成的内容。本文创作于 2023 年 6 月 27 日。祝您读得愉快！ 由于麻雀是四人游戏，而又要决出个人胜负，一般的小组赛和淘汰赛机制都不适用。我们基于瑞士轮制定制了一套赛制，以保证每个选手都能和其他选手进行一定数量的对局，从而决出个人的胜负。 分区赛64名选手随机分为 A, B, C, D 四个分区，每个分区随机分为 1, 2, 3, 4 四个小组，每个小组的四名成员编号 a, b, c, d。 在每个分区内，按照以下模式进行 16 场半庄： 1 2 3 4 1a 2a 3a 4a 1b 2b 3b 4b 1c 2c 3c 4c 1d 2d 3d 4d 1a 2b 3c 4d 1b 2c 3d 4a 1c 2d 3a 4b 1d 2a 3b 4c 1a 2c 3b 4c 1b 2d 3c 4d 1c 2a 3d 4a 1d 2b 3a 4b 1a 2d 3d 4b 1b 2a 3a 4c 1c 2b 3b 4d 1d 2c 3c 4a 如此赛程保证每个选手都和同一分区其他 3 个小组的 12 名选手进行了一次对局，总共 4 场对局。 分区赛的比赛总数为 4x16&#x3D;64 场半庄。 分区赛结束后根据段位赛的积分系统计算各个选手的个人积分，每个分区内的前 4 名选手晋级下一轮。 淘汰赛共有 4x4&#x3D;16 名选手晋级淘汰赛。 淘汰赛第一轮将 16 名选手随机分为 4 组，每组内进行 2 场半庄。结束后每组得点最低的 1 名选手淘汰，其余 3 名选手晋级下一轮。 本轮的积分计算方式为：分区赛积分(4) &#x2F; 4 + 淘汰赛第一轮积分(2)。 淘汰赛第二轮将 12 名选手随机分为 3 组，每组内进行 2 场半庄。结束后全场得点最低的 4 名选手淘汰，其余 8 名选手晋级下一轮。 本轮的积分计算方式为：(分区赛积分(4) &#x2F; 4 + 淘汰赛第一轮积分(2)) &#x2F; 3 + 淘汰赛第二轮积分(2)。 半决赛将 8 名选手随机分为 2 组，每组内进行 1 场半庄。结束后每组第三、第四名选手淘汰，其余 4 名选手晋级下一轮。 决赛进行 1 场半庄，决出冠军。决赛名次作为前四名的最终名次。 淘汰赛的总比赛场数为 4x2+3x2+2+1&#x3D;15 场半庄。 最终名次 1至4名：决赛名次 5至8名：到半决赛为止的积分排名。计算方式为：淘汰赛第二轮积分(2) &#x2F; 2 + 半决赛积分(1)。 9至12名：到淘汰赛第二轮为止的积分排名。 13至16名：到淘汰赛第一轮为止的积分排名。 17至64名：先按照马点排名。马点相同的情况下按照分区赛积分排名。","categories":[null]},{"title":"Overflow Mechanics","path":"/trash/Overflow.html","content":"Read Before ProceedingThe content of this article is purely fictional and is not related to any organisation or individual in real life. In addition, it contains GPT-3.5 generated text, which may not be accurate or reliable. Please read with caution.This article was created on 2023-05-03. Have fun reading! IntroductionOverflow is a new mobile rhythm game developed by PixelTail Games. There are three main difficulties in Rizline: INF (Infinity), ETN (Eternity), and REL (Reality). There is an additional difficulty, IMG (Imaginary), which is only available for some songs and requires special unlock conditions. Chart ConstantEach chart has an internal constant to specify the difficulty, known as chart constant or CC. The integer part of the CC is the difficulty level, and the fractional part is not displayed in-game. Additionally, the difficulty level limits the possible value of fractional part: For level 1-7, the fractional part can be 0.0 or 0.5. For level 8-10, the fractional part can be 0.0, 0.2, 0.5, or 0.7. For level 11-13, the fractional part can be any value between 0.0 and 0.9, with a step of 0.1. For level 14-16, it is same as level 11-13, but when the fractional part is at least 0.7, the level is displayed as 14+, 15+, or 16+. OverflowOverflow (OF) is a value that represents the capability of a player based on his best and recent performances. Player OF formula is: OF = (best30 + recent10) / 40. Whereas best30 is the sum OF for the 30 best scores, and recent10 is the sum OF for the 10 best scores selected from the most recent 30 plays. For each play, OF formula is: OF = floor(power(CC * 10, score)). Whereas score is the score percentage, and power means exponentiation. Furthermore, some bouns will be added to the OF for each play: +1 for Full Connection (FC). +1 for All Precision (AP). +1 for score percentage reaches X (100%) +1 for score percentage reaches M (101%) ScoreThe score is simply the accuracy of the play. The connections (meaning the number of notes hit in a row) are not taken into account. (But the connections are still displayed in-game, used for some challenges, and used for the OF calculation.) The accuracy value is calculated as follows: Judgment Timing Accuracy Max Precise (MP or MAX) -20~20ms 101% Precise (P) -40~40ms 100% Connect (C) -80~80ms 50% Lost (L) -100~-80ms or 80ms+ 0% The score is given a letter grade based on the accuracy: Grade Accuracy M 101% X++ 100.75% X+ 100.50% X 100.00% A++ 99.50% A+ 99.00% A 98.00% B++ 97.00% B+ 96.00% B 95.00% C++ 92.50% C+ 90.00% C 85.00% L 0.00% Notes: When score reaches 101.00%, it is displayed as 101% instead of 101.00%. When score is AP and at least X++, the percentage is replaced by (-X) where X is the non-Max Precise count. These are to distinguish the score from non-AP X++ and M. The letter grade is pretty much a legacy from the v1.x days. It is still used in the game, but it is not used in the OF calculation. (During v1.x, the OF formula changes at 100.00%, 98.00% and 95.00%, reaches minimum at 85.00% and maximum at 100.75%. Today the OF formula is continuous and still work below 87.50% or above 100.75%.)","categories":[null]},{"title":"A Combination of Gacha and Paid Packages Mechanisms Based on Regular Japanese Mobile Games","path":"/trash/Planning.html","content":"Read Before ProceedingThe content of this article is purely fictional and is not related to any organisation or individual in real life. In addition, it contains GPT-3.5 generated text, which may not be accurate or reliable. Please read with caution.This article was created on 2023-07-13. Have fun reading! Standard BannerBase Prob. UR: 2.0% SSR: 8.0% SR: 50.0% R: 40.0% How does it work?Every 10th pull is guaranteed to be at least an SR. If you pull an SR or above before the 10th pull, the counter resets. (This is done by simply rerolling the RNG until it hits an SR or above, replacing the original result.) After 20 consecutive pulls without an SSR, the probability distribution changes to: UR: 2.0% SSR: (8 + 4 * (n - 20))% when n&lt;&#x3D;30, (48 + 2.5 * (n - 30))% when n&gt;30 SR: 50.0% when n&lt;&#x3D;30, (50 - 2.5 * (n - 30))% when n&gt;30 R: (40 - 2 * (n - 20))% when n&lt;&#x3D;30, 0% when n&gt;30 where n is the number of consecutive pulls without an SSR. Thus every 50th pull is guaranteed to be at least an SSR. If you pull an SSR or above before the 50th pull, the counter resets. After 50 consecutive pulls without a UR, the probability distribution changes to: UR: (2 + 2 * (n - 50))% The distribution of SSR, SR, and R changes depending on both the SSR and UR guarantee counters: Each pull beyond 50th pull without a UR increases the probability of getting a UR by 2%, by reducing the probability of getting an R by 2%. If R probability reaches 0%, reduce the probability of getting an SR by 2% instead. If SR probability reaches 0%, reduce the probability of getting an SSR by 2% instead. Thus every 99th pull is guaranteed to be a UR. If you pull a UR before the 99th pull, the counter resets. Prob. of getting at least one of each rarity within n pullsto be added Limited BannerBase Prob. UR: 4.0% SSR: 16.0% SR: 50.0% R: 30.0% How does it work?Every 10th pull is guaranteed to be at least an SR. If you pull an SR or above before the 10th pull, the counter resets. After 20 consecutive pulls without an SSR, the probability distribution changes to: UR: 4.0% SSR: (16 + 3 * (n - 20))% when n&lt;&#x3D;30, (46 + 2.5 * (n - 30))% when n&gt;30 SR: 50.0% when n&lt;&#x3D;30, (50 - 2.5 * (n - 30))% when n&gt;30 R: (30 - 3 * (n - 20))% when n&lt;&#x3D;30, 0% when n&gt;30 where n is the number of consecutive pulls without an SSR. Thus every 50th pull is guaranteed to be at least an SSR. If you pull an SSR or above before the 50th pull, the counter resets. After 50 consecutive pulls without a UR, the probability distribution changes to: UR: (4 + 4 * (n - 50))% The mechanism is basically the same as the standard banner, except the base probability and probability increment are doubled. Thus every 74th pull is guaranteed to be a UR. If you pull a UR before the 74th pull, the counter resets. Prob. of getting at least one of each rarity within n pullsto be added SSR Guaranteed TicketBase Prob. UR: 10.0% SSR: 90.0% How does it work?Every consecutive pull without an UR increases the probability of getting an UR by 10%, by reducing the probability of getting an SSR by 10%. Unless you pull an UR before the 10th pull, the probability of getting an UR will reach 100% on the 10th pull. Thus it is guaranteed to get an UR within 10 pulls. By pulling 100 times in a Standard Banner, or 150 times in a Limited Banner, you will get 1 SSR Guaranteed Ticket. The counter keeps between different Standard&#x2F;Limited Banners, but does not share between the two types of banners, nor counts special banners (including Beginner’s Banner, SSR Guaranteed Ticket Banner, and crossover banners). You can also purchase 10 SSR Guaranteed Tickets as part of the paid SSR Guaranteed Pack, which is available for purchase twice per year (during Anniversary in May and Thanksgiving in November), plus once for new players (within 30 days of account creation). SSR Guaranteed Pack: 10 SSR Guaranteed Tickets + 3,000 Crystals for US$29.99 Deluxe Starter Pack: 10 SSR Guaranteed Tickets for US$14.99 Paid Pack RecommendationsFirst-time Purchase Double Crystal 100(+200) Crystals &#x2F; US$0.99 (C&#x2F;$&#x3D;303) 550(+500) Crystals &#x2F; US$4.99 (C&#x2F;$&#x3D;210) 1,150(+1,000) Crystals &#x2F; US$9.99 (C&#x2F;$&#x3D;215) 2,400(+2,000) Crystals &#x2F; US$19.99 (C&#x2F;$&#x3D;220) 3,700(+3,000) Crystals &#x2F; US$29.99 (C&#x2F;$&#x3D;223) 6,200(+5,000) Crystals &#x2F; US$49.99 (C&#x2F;$&#x3D;224) 12,500(+10,000) Crystals &#x2F; US$99.99 (C&#x2F;$&#x3D;225) Monthly SubscriptionYou can purchase Monthly Subscription at any time, which is valid for 30 days (expires on 04:00 UTC+8 on the 31st day, given that purchase day is 1st day). You can purchase the subscription multiple times, but instead of the benefits stacking, the duration will be extended by 30 days, up to 90 days. 550 Crystals &#x2F; US$4.99 per 30 days 30 Crystals per day for 30 days (&#x3D;1,650 Crystals total) (C&#x2F;$&#x3D;291) 10 Fuel per day for 30 days (~600 Crystals) -&gt; 1.2x Battle Pass EXP for 30 days 3th Anniversary Update: Fuel is no longer included in the subscription. Instead, you gain 1.5x Battle Pass EXP for 30 days. The total value of the subscription shrinks, but is still very good. Also, this makes it easier for casual players to reach max level (100) within the season. The total experience required and free (Std area) rewards both increases with this update, but the paid (Plus, Pro, Max area) rewards remain the same. Thus, the value of the subscription is reduced, but is still very good. 4th Anniversary Update: the Battle Pass EXP boost is reduced to 1.2x. Oh, no… But still, the base value of the subscription is already outstanding, and just regard the EXP boost as a slight bonus. Monthly Gacha PackYou can purchase Monthly Gacha Pack once per natural month (resets on 04:00 UTC+8 on the first day of each month). 2,000 Crystals + 10 Gacha Tickets &#x2F; US$19.99, once per month (&#x3D;5,000 Crystals total) (C&#x2F;$&#x3D;250) Monthly Battle PassThis is only for those who can reach max level (100) within the season. Besides Std area open to all players, Plus, Pro, Max area can be unlocked by purchasing the corresponding pass. You can only purchase one pass at a time, and the pass is valid for a natural month (resets on 04:00 UTC+8 on the first day of each month). You can purchase the pass at any time during the season, and the rewards will be retroactively given to you. Plus: 2,000 Crystals (immediate) + 3,500 Crystals (pass) &#x2F; US$19.99, once per month (&#x3D;5,500 Crystals total) (C&#x2F;$&#x3D;275) Pro: 5,000 Crystals (immediate) + 25 Gacha Tickets (pass) &#x2F; US$49.99, once per month (&#x3D;12,500 Crystals total) (C&#x2F;$&#x3D;250) Max: 10,000 Crystals (immediate) + 800 Prisms (pass) &#x2F; US$99.99, once per month (&#x3D;22,000 Crystals total) (C&#x2F;$&#x3D;220) 3th Anniversary Update: Max area is introduced. Besides materials, this tier gives neither Crystals nor Gacha Tickets. Prisms can be exchanged for Gacha, but is not worth it. But well it is at least much better than just buying 12,500 Crystals for US$99.99. So the most devoted players can still consider buying this tier. 4th Anniversary Update: Max area 900 Prisms -&gt; 800 Prisms. Max only works if you use Prisms to exchange Gacha Tickets. It is recommended that casual players should buy rare materials with Prisms instead. For hardcore players, who usually already have sufficient materials and are looking for ways to get more gacha tickets, Max is a good choice. Limited-time Packs: Major Limited Event (Anniversary &#x2F; Thanksgiving)Anniversary events always start on May 1st, and last for 3 weeks. Thanksgiving events usually starts on early November, and last for 3 weeks. SSR Guaranteed Pack: 10 SSR Guaranteed Tickets + 3,000 Crystals &#x2F; US$29.99 (C&#x2F;$&#x3D;300, but due to the high value of SSR Guaranteed Tickets, the total yield is much higher. Generally a must-buy if you wish to spend money on this game.) Limited-time Packs: Minor Limited Event (New Year &#x2F; Summer)Note New Year events are scheduled according to the Chinese calendar, which is usually in February. The event itself is usually starts on late January, lasting for 2 weeks. Summer events are usually in August, lasting for 2 weeks. Limited-time Packs: Special Limited Event (Crossover, etc.)Limited-time Packs: Regular Event","categories":[null]},{"title":"Requiem","path":"/trash/Requiem.html","content":"Read Before ProceedingThe content of this article is purely fictional and is not related to any organisation or individual in real life. In addition, it contains GPT-3.5 generated text, which may not be accurate or reliable. Please read with caution.This article was created on 2023-04-12. Have fun reading! Requiem 第一首 Lv 14 的魔王曲 歌曲信息 曲名: Requiem (安魂曲) 艺术家: Crystal Lake vs. DJ Sharpnel 曲风：Europhic Hardstyle 曲绘：cierra 时长：2:05 曲包：Infernal Indignation (狱炎怒火) BPM: 230 游玩背景：requiem 上线时间：v1.3.0 (2018-11-29) 难度信息 难度 CASUAL NORMAL HYPER 等级 6 9 14 定级 6.5 9.2 14.3 音符数 925 1237 1450 解锁条件CASUAL &#x2F; NORMAL &#x2F; HYPER 难度：通过异象解锁。使用搭档 Lumina 游玩对应难度的前置曲目 [Suspiria]。游玩到 1:14 秒（对应歌词“生涯、貴方を赦しません。”）时，游戏会检查目前的数据值是否满足条件，机制如下： 条件为：数据值&gt;&#x3D;clamp(难度系数-搭档等级*80, 200, 1000)其中：难度系数：CASUAL&#x3D;1000, NORMAL&#x3D;1500, HYPER&#x3D;2000；搭档等级为 Lumina 的等级 在 CASUAL 难度下，1 级开始要求低于 1000，10 级开始要求达到最低值 200 在 NORMAL 难度下，7 级开始要求低于 1000，17 级开始要求达到最低值 200 在 HYPER 难度下，13 级开始要求低于 1000，20 级要求达到最低值 400 注：clamp(x, a, b) &#x3D; max(a, min(b, x)) 如果满足，则播放异常的画面和音效，数秒后开始游玩 Requiem。此时，数据收集条改用 Lumina (Requiem) 的困难收集条，机制如下： 起始数据收集值为 1000（满值）。收集值 &lt;&#x3D; 0 时判定为游玩失败。普通收集条 &gt;&#x3D; 700 通关的标准不再使用，只要全程收集值 &gt; 0 即为通关。PERFECT 和 GREAT 的数据收集效果不变。但是：Lv 14 及以上的谱面，效果降低为 0.8 倍。FAIL 的数据散失效果从 25 增加到 100。 游玩过程中无法暂停，但强制切换到后台时，游戏会自动暂停。 如果以困难收集条通关，将会解锁 Requiem 的对应难度，及 Lumina (Requiem) 的旅行地图（可以获取 Lumina (Requiem) 这一搭档）。 否则，解锁失败，该难度解锁进度增加 5%（显示在歌曲选择界面）。下次重新尝试解锁 Requiem 时，可重复这一过程。当解锁进度达到 100% 时，解锁 Requiem 的对应难度，及 Lumina (Requiem) 的旅行地图。 各个难度需要独立解锁，解锁高难度不会自动解锁低难度。 游戏相关 本曲作为第一首 Lv 14 的魔王曲，也是第一首隐藏曲，在推出时讨论度极高。 在 2018 年 11 月 29 日推出之后，约 30 小时，由日本玩家 rei 拿下全球首个 100%。约 1 个月后，由日本玩家 ひろゆき 拿下全球首个 MAX。(由于当时没有专门记录，时间节点可能不准确) 等级和定级变化 时间 CASUAL NORMAL HYPER v1.3 6.0 9.1 14.0 v2.0 6.5 9.2 14.2 v3.0 6.5 9.4 14.3 v4.0 6.5 9.2 14.3","categories":[null]},{"title":"Online College English Test (OCET)","path":"/trash/OCET.html","content":"Read Before ProceedingThe content of this article is purely fictional and is not related to any organisation or individual in real life. In addition, it contains GPT-3.5 generated text, which may not be accurate or reliable. Please read with caution.This article was created on 2023-05-02. Have fun reading! IntroductionOCET is a web-based English test system, set up by the College English Teaching Advisory Board of the Ministry of Education of China, and developed by the National Education Examinations Authority. The system was developed in 2020 in response to the COVID-19 pandemic, and is used by students in China to take the College English Test (CET) online. OCET can also refer to the test itself. The test is a computer-based test, and is taken by university students in China. The test is used to assess the English proficiency of students, and is a requirement for graduation. The test is administered by the National Education Examinations Authority, and is held twice a year, in June and December. Despite passing OCET-4 and OCET-6 can also fulfill the English requirement for graduation, the test differs from traditional CET-4 and CET-6 in that the question types and paper structure are completely redesigned, and the total score and passing score are also adjusted. The test is also administered online, and the test questions are generated randomly by the system. Paper StructureThe test consists of 4 sections, and the total score is 100 points. The passing score is 60 points. The time limit for the test is 125 minutes, and the timer can be seen on the top right corner of the screen. The sections are as follows: Section 1: Listening Comprehension (30 points, about 25 minutes) Section 2: Reading Comprehension (30 points, about 40 minutes) Section 3: Applied Writing (15 points, about 20 minutes) Section 4: Integrated Writing (25 points, about 40 minutes) There are no time limits for each section, and the candidate can choose to take the sections in any order. However, the candidate must complete all sections within the time limit. As a comparison, the traditional CET-4 and CET-6 tests consist of 4 sections, the time limit is also 125 minutes, and the passing score is 425 out of 710 points. Its paper structure is as follows: Section 1: Applied Writing (15%, about 30 minutes) Section 2: Listening Comprehension (35%, about 25 minutes) Section 3: Reading Comprehension (35%, about 40 minutes) Section 4: Translation (15%, about 30 minutes) Test EnvironmentThe test is taken on the open-source Safe Exam Browser (SEB) platform, which is a web browser that restricts the candidate from accessing other websites or applications during the test. The candidate can only access the test website, and the test website will be opened in full-screen mode. During the test, the front camera of the candidate’s computer will be turned on, and the candidate’s face will be recorded. The candidate’s face will be compared with the photo on the candidate’s ID card, and the candidate’s ID card will be scanned to verify the candidate’s identity. The candidate can take notes or draft on a maximum of 5 sheets of A4 paper, which will be examined before and after the test. The candidate can also use a pen and a pencil during the test. Question TypesListening ComprehensionThe candidate should test microphone and speaker before the test starts. The recording for each dialogue or monologue will be only played once, and cannot be paused once it starts. The questions are given after dialogue or monologue ends, and only the choices are given on the screen. The candidate should choose the correct answer and click the “Next” button to go to the next question. Short Dialogues Format: Multiple choice Dialogues: 7 Questions: 7 Points per question: 1 Total points: 7 Long Dialogues Format: Multiple choice Dialogues: 3 Questions: 9 Points per question: 1 Total points: 9 Monologues Format: Blank filling Monologues: 3 Questions: 14 Points per question: 1 Total points: 14 For each test, all the candidates will be given the same dialogues and monologues. But within Short Dialogues, Long Dialogues, and Monologues, the order of the listening materials will be randomized for each candidate. Reading ComprehensionShort PassagesCET-4 passages is about 350 words, and CET-6 passages is about 500 words. Format: Multiple choice Passages: 3 Questions: 10 Points per question: 1.5 Total points: 15 For each test, NEAA will prepare 2 short passages for type A, B, and C, respectively, and for each type, the candidate will be given one of the two passages randomly. Type A and B are followed by 3 questions, and type C is followed by 4 questions. Vocabulary FillingsThe passage is about 600 words. There will be 10 blanks in the passage, and candidates will be given 15 words as choices for all blanks. The candidate should choose one from the 15 words and fill its correct form into the blank. Format: Blank filling Passages: 1 Questions: 10 Points per question: 0.5 Total points: 5 For each test, NEAA will prepare 2 vocabulary fillings passages, and the candidate will be given one of the two passages randomly. Comprehensive MatchingThe passage is about 1500 words. There will be 10 blanks in the passage, and candidates will be given 15 sentences as choices for all blanks. The candidate should choose one from the 15 sentences and fill its choice letter into the blank. Format: Blank filling (choice) Passages: 1 Questions: 10 Points per question: 1 Total points: 10 For each test, NEAA will prepare 2 comprehensive matching passages, and the candidate will be given one of the two passages randomly. Applied WritingThe candidate should write an essay of about 150 words on a given topic. The candidate should write the essay in the text box on the screen, and the candidate can use the spell check function. Words Requirements (Official): 150 words Words Limits (Suggested): 150-200 words Total points: 15 For each test, NEEA will prepare two topics, and the candidate will be given one of the two topics randomly. Integrated WritingThis can be one of the following types: Continued Writing: The candidate should read a story of about 500-600 words, and write a continuation of about 200 words in two paragraphs. The first sentence of both paragraphs is given, and the candidate should write the rest of the paragraphs in the text box on the screen. The candidate can use the spell check function. Words Requirements (Official): 200 words Words Limits (Suggested): 100-150 words per paragraph Total points: 25 Outlined Writing: The candidate should read a report, essay or other non-fictional article of about 800-1000 words, and write an outline of about 150 words in three paragraphs. The candidate should write the outline in the text box on the screen, and the candidate can use the spell check function. Words Requirements (Official): 150 words Words Limits (Suggested): 130-160 words, never go beyond the upper limit Total points: 25 For each test, NEEA will prepare one Continued Writing and one Outlined Writing, and the candidate will be only presented with one of them, randomly chosen by the system. Candidate should prepare well for both types of Integrated Writing. After the test, all the prepared questions will be published on the official website of NEEA, given in the original order.","categories":[null]},{"title":"VNMaker","path":"/trash/VNMaker.html","content":"Read Before ProceedingThe content of this article is purely fictional and is not related to any organisation or individual in real life. In addition, it contains GPT-3.5 generated text, which may not be accurate or reliable. Please read with caution.This article was created on 2023-06-16. Have fun reading! VNMaker (Visual Novel Maker), as its name suggests, is a tool specialized in creating visual novels. It is developed by Degica and published by Sekai Project. Features Modern, easy to use UI - VNMaker’s UI is modern and intuitive. It makes creating visual novels with few or no lines of code possible; Highly customizable - VNMaker is highly customizable. Features including customizing UI, adding custom scripts, and more makes VNMaker a powerful tool, even for making RPGs; Modular - VNMaker is modular. The base engine is free and lightweight, and you can purchase, share or create your own assets, scripts, plugins and more; Asset management and co-creation - VNMaker has a built-in asset management system, which allows you to easily manage your assets. You can also share your assets with others, or even sell them on the Degica Store; Multi-platform - VNMaker can export your visual novels to Windows, Mac, Linux, Android, iOS, and HTML5, playable on almost any device; (VNMaker itself is only available on Windows) Internationalization and localization support - VNMaker supports multiple languages, and you can easily translate your visual novels to other languages with both AI tools and community help; Built-in AI tools - AI scripting, drawing and voice acting tools are built-in, which lowers the barrier of creating visual novels; (Games with AI generated assets must be marked as such and restrictions on selling them may apply) Efficient - Not only VNMaker is efficient and lightweight, but also the visual novels created with VNMaker are optimized for performance; Standardized Scripting - VNMaker uses a standardized scripting language, Ink.js, which is easy to learn and use, but also highly extensible. PricingVNMaker itself is free to use, but you need to purchase a license to publish your visual novels. The license is a one-time purchase, and you can publish as many visual novels as you want with it. Some of the official assets and plugins are free, but most of them are paid. You can also purchase assets and plugins created by other users on the Degica Store. Bundles are also available, which may save you some money. (Bundle may include some assets, plugins, or both. Every bundle also comes with a pricer version that includes VNMaker license. Bundles are time-limited, and different bundles are available at different times.) VNMaker - Free (does not include license to publish visual novels) Educational License - Free (for educational purposes only) Individual License - $59.99&#x2F;User (for sale value under $5000 and no more than 5 team members) Team License - $99.99&#x2F;User (for sale value under $50000 and no more than 20 team members) Enterprise License - $199.99&#x2F;User (for sale value under $500000 and no more than 100 team members) Custom License - Contact Degica (for sale value over $500000 or more than 100 team members) Startup Bundle - $49.99 (10 assets and 5 plugins) &#x2F; $94.99 (Plus Individual License)","categories":[null]},{"title":"Terminal Idle - 终端放置","path":"/trash/Termidle.html","content":"Read Before ProceedingThe content of this article is purely fictional and is not related to any organisation or individual in real life. In addition, it contains GPT-3.5 generated text, which may not be accurate or reliable. Please read with caution.This article was created on 2023-04-18. Have fun reading! Stage Previews - 游戏分阶段预览Terminal - 终端Information (I) - 信息游戏的基本货币。 Adder (AD1…AD8) - 加法器游戏的第一种生产器。 共有8级，从低级到高级分别为：(1)半加器、(2)全加器、(3)4位加法器、(4)8位加法器、(5)16位加法器、(6)32位加法器、(7)64位加法器、(8)128位加法器。 每一级加法器生产低一级的加法器，最低级的半加器生产信息。 游戏开始时，只解锁到8位加法器。 所有 AD 都用信息购买。每购买同一级 AD 10个，就会给一个 x2 的乘数，同时价格大幅度提升。 ALU Binary Lifting (BL) - 字长倍增第一级重置，重置所有到目前为止的进度 (包括 I, AD, BO, MF) 来解锁更高级的加法器或者获得更大的乘数： 前 4 次 BL：第 n 次 BL 需求 20 个目前最高级的 AD(n+3)。解锁下一级 AD(n+4)，并给 AD1…AD(n) 一个 x2 的乘数。 第 5 次 BL：需求 20 个 AD8。解锁机制 BO，并给 AD1…AD5 一个 x2 的乘数。 第 6 次 BL 开始：每次比前一次额外需求 15 个 AD8，并给 AD1…AD(min(n, 8)) 一个 x2 的乘数. Bit Overflow (BO) - 位溢出第 5 次 BL 解锁。清空所有的 AD1…AD7，根据 AD1 的数量给 AD8 提供一个大量的乘数。 BO 并不算作重置，其优先级是最低的。BL 及以上的任何重置都会清空 BO。 Main Frequency (MF) - 主频主频可以提高 AD 的生产效率。 MF 用信息购买。每次购买 MF 时，MF 乘以一个固定值 Basic Frequency (BF, 基频)。 Overclock (OC) - 超频第二级重置，重置所有到目前为止的进度 (包括 I, AD, BO, MF, BL) 来提高 BF。 BF 随着超频数量指数增长。 Infinity - 无限达到 2^1024 (约 1.79e308) 信息时，终端会因为过量的信息而湮灭，画面会出现 Information Recycle (IR，信息回收)。点击即进行一次重置并进入无限层。 Entropy (E) - 熵无限层的基本货币，根据信息回收时的信息数量计算。 Entropy Lifting (EL) - 熵倍增EL 是无限层的升级，提供大量增益来提高生产效率。其中有一个升级，每级加倍获得的熵，因此这些升级被命名为熵倍增。 Entropy Test (ET) - 熵检验ET 是无限层的挑战，需要在一定条件下达到无限。挑战的奖励是解锁自动购买器的升级。 Entropy Overflow (EO) - 熵溢出当 IR 自动购买器的间隔升级到 0.05 秒时，可以解锁 EO。解锁后，I 可以突破 1.79e308，随着 I 的提升，每次 IR 时的 E 也会提升。 价格超过 1.79e308 后，AD 和 MF 的价格开始超指数增长。 解锁一套全新的升级 (Overflow Upgrades，溢出升级) 和挑战 (Overflow Tests，溢出检验)。 Multiplier (ML1…ML8) - 乘法器游戏的第二种生产器。 共有8级，从低级到高级分别为：(1)基乘器、(2)2位乘法器、(3)4位乘法器、(4)8位乘法器、(5)16位乘法器、(6)32位乘法器、(7)64位乘法器、(8)128位乘法器。 每一级乘法器生产低一级的乘法器，最低级的基乘器生产 Multipliee (MP，被乘数)。 ML 的主要作用是给 AD 提供乘数，这个乘数的基础值为 MP 的七次方。 所有 ML 都用熵购买。每购买同一级 ML 10个，就会给一个 x5 的乘数，同时价格大幅度提升。 ML 在信息回收时，购买不会被重置，但乘数、各维度数量及已生产的 MP 会被重置。","categories":[null]},{"title":"ボカチバ 2023.07 Setlist","path":"/trash/Vocachiba.html","content":"Read Before ProceedingThe content of this article is purely fictional and is not related to any organisation or individual in real life. In addition, it contains GPT-3.5 generated text, which may not be accurate or reliable. Please read with caution.This article was created on 2023-07-11. Have fun reading! Official Website DJ: 栗山夕璃 | @KuriyamaYuri88 なきそ | @7kiso_nakiso もちうつね &#x2F; 餅 | @mochiutsune Date: 2023.07.02 (Sun), 14:00-18:00 DisclaimerThis is not official, and may contain errors. The editor is not affiliated with VocaChiba, and will not be responsible for any loss or damage caused by this document. Please, refer to the official website for the latest information. What is VocaChiba?VocaChiba is a monthly DJ event held in Chiba, Japan. On the first Sunday of every month, three Vocaloid producers will DJ dozens of Vocaloid songs, remixing and mashing them together, releasing new songs, and sharing their love for Vocaloid music. As of today, VocaChiba is also available as TuneCore albums, providing a new way for Vocaloid fans to enjoy the music. (Albums, both physical and digital, are recorded before the live event, and may sound different from the live event.) Set A14:00-14:45 TR01. Awake Now &#x2F; 雄之助 feat. 初音ミク (2022.05.31) TR02. Who? &#x2F; Azari feat. 歌爱ユキ, v flower (2022.08.10) TR03. アポカリプス・トーキョー (Apocalypse Tokyo) &#x2F; 青栗鼠 feat. 歌爱ユキ (2023.03.19) TR04. 暮しガスメータ (Life with a Gas Meter) &#x2F; 電ǂ鯨 feat. 琴葉葵, 琴葉茜 (2022.02.13) TR05. ダーリンダンス (Darling Dance) &#x2F; かいりきベア feat. 初音ミク (2020.08.30) TR06. ずんだパーリナイ (Zunda Party Night) &#x2F; なみぐる feat. ずんだもん (2023.03.18) TR07. 転生林檎 (Reincarnation Apple) &#x2F; ピノキオピー feat. 初音ミク (2022.06.03) TR08. Set A Medley Set B15:00-15:45 TR01: トーキョー・カワイイ・シティ (Tokyo Kawaii City) &#x2F; Ray_oh feat. 初音ミク (2022.08.30) TR02: ご教示ください？ (Please Teach Me?) &#x2F; もちうつね feat. 初音ミク (2022.12.30) (餅 Remix) TR03: 悶々ふぁんもおらん (No Anguish nor Fan) &#x2F; もちうつね feat. 初音ミク (2023.03.18) TR04: あわ (Bubble) &#x2F; mameyudoufu feat. 初音ミク (2016.06.26) TR05: イイコと妖狐 (Good Child and the Fox) &#x2F; きくお feat. 绮萱 (2022.12.31) TR06: 悪いことはしちゃいけないよ (We Should not Do Bad Things) &#x2F; きくお feat. 初音ミク (2010.10.02) (餅 Remix) TR07: Set B Medley TR08: Bonus Track Only Set C16:00-16:45 TR01: 黒塗り世界宛て書簡 (Letter to the Black World) &#x2F; フロクロ feat. 重音テト (2022.03.31) TR02: ウニくらげ (Sea Urchin Jellyfish) &#x2F; なみぐる feat. ずんだもん, 初音ミク (2022.10.07) TR03: 黒塗り世界宛て書簡 + ウニくらげ Mashup TR04: オーバー! (OVER!) &#x2F; いよわ feat. 初音ミク, 歌爱ユキ (2021.02.14) TR05: 大女優さん (Actress) &#x2F; いよわ feat. 花隈千冬 (2023.03.03) TR06: ビビビビ (Be, be, be, be!) &#x2F; フロクロ feat. 星界 (2023.03.19) TR07: パノプティコン (Panopticon) &#x2F; r-906 feat. 初音ミク (2019.08.17) TR08: 大女優さん + ビビビビ + パノプティコン Mashup Set D17:00-17:45 TR01: アナフィラキシー (Anaphylaxis) &#x2F; szri feat. 初音ミク (2021.10.13) TR02: ドーピングダンス (Doping Dance) &#x2F; STEAKA feat. 初音ミク (2022.07.28) TR03: マジカルドクター (Magical Doctor) &#x2F; MARETSU feat. 初音ミク (2019.12.27) TR04: おくすり飲んで寝よう (Take Medicine and Go to Sleep) &#x2F; もちうつね feat. 初音ミク (2022.10.07) TR05: Set D Medley TR06: クーネル・エンゲイザー (Eating, Sleeping and Gazing) &#x2F; 電ǂ鯨 feat. 琴葉葵, 琴葉茜 (2019.02.07) TR07: アンナンセンス・リゲイン (Unnonsense Regain) &#x2F; なきそ x もちうつね feat. 初音ミク (New Release) TR08: アンサー (Answer) &#x2F; 栗山夕璃 feat. 初音ミク (New Release) Pricing 1,500 JPY: DJ Live Ticket 500 JPY: CD (Physical). Available at the venue, with lyrics booklet and bonus track 500 JPY: Tunecore Album (Digital Download). Available on Tunecore after live, with lyrics document Bonus Track Set B, TR08: アンノウン・マザーグース (Unknown Mother Goose) &#x2F; wowaka feat. 初音ミク (2017.08.22) (餅 Remix) This track is not included in the Tunecore album due to copyright issues. MVNew MVs will be released on 2023.07.09 on NicoNico and YouTube. This includes remastered versions of two released songs: トーキョー・カワイイ・シティ &#x2F; Ray_oh feat. 初音ミク あわ &#x2F; mameyudoufu feat. 初音ミク and two new songs: アンナンセンス・リゲイン &#x2F; なきそ x もちうつね feat. 初音ミク アンサー &#x2F; 栗山夕璃 feat. 初音ミク Mashup and MedleyMashup and medley will not be released publicly. Only the audio will be available on Tunecore album. EndThank you for reading! Editor: 完走した感想 | @KSKanSou, private message me if you have any questions. See you next month!","categories":[null]},{"title":"Project Sekai：活动介绍","path":"/trash/pjsk.html","content":"阅前须知本文内容纯属虚构，与现实生活中的任何组织、个人均无关系。此外，包含 GPT-3.5 生成的内容。本文创作于 2023 年 7 月 13 日。祝您读得愉快！ 活动种类 ライブ &#x2F; Live (deprecated) チームフェス &#x2F; Team Fes バトル &#x2F; Battle トライアル &#x2F; Trial チャレンジ &#x2F; Challenge ミッション &#x2F; Mission パーリナイ &#x2F; Party Night (experimental) PT 计算公式最终获得的 PT &#x3D; 基础 PT × LB 加成 × (100% + 队员加成)。（不适用于挑战演出、派对演出） 消耗 LB 0 1 2 3 4 5 6 7 8 9 10 活动 PT 1 5 10 15 19 23 27 31 34 37 40 获得奖励 1 5 10 14 17 20 21 22 23 24 25 队员加成： 指定属性 +20% 指定成员 +20% 指定属性和成员 +50% 专精等级（见下表） 专精等级 1 2 3 4 5 SSR 8% 10% 12% 14% 16% SR 2% 3.5% 5% 6.5% 8% R 0.5% 1% 1.5% 2% 2.5% N 0.2% 0.4% 0.6% 0.8% 1% 不同活动的基础 PT 计算方式不尽相同，详见下文。 中括号内给出了个人分数和队友均分均为 100万，150万，200万时的基础 PT。 ライブ &#x2F; 演唱会通过独立演出或协力演出获得活动点数 (PT) 和活动贴纸 (RP)。 协力演出会匹配到四名玩家，每人选择一首乐曲或放弃，系统从所有选择的乐曲中随机选择一首。如果所有人都放弃，系统会随机选择一首乐曲。乐曲确定后，各玩家选择难度。 协力演出过程中，前 5 次技能分别发动 5 名玩家队长的技能（顺序随机；队员的技能不会发动），第 6 次技能发动个人分数最高玩家的队长技能。 此外，协力演出还存在 Fever 机制。在 Fever Chance 段落的表现足够好（与分数无关，只与判定有关），就进入 Fever Ready 状态。如果所有在线的玩家都进入 Fever Ready 状态，Fever 段落开始时则进入 Fever 状态，分数翻倍。如果在线玩家为 5 名且所有玩家都在 Fever Chance 段落全连，Fever 段落开始时则进入 Super Fever 状态，分数 2.5 倍、结算时获得额外奖励。 协力演出结束后，先展示协力总分和各玩家的成绩，再显示自己的成绩。 由于 Fever 和队友分数的加成，协力演出获得的 PT 往往远高于独立演出。因此，该活动又称「普协」（即「普通协力演出」）。 从主线第三章开始，ライブ活动被性质相近的ミッション活动取代。 独立演出的基础 PT &#x3D; 100 + (分数 &#x2F; 15000) [167, 200, 233] 协力演出的基础 PT &#x3D; 120 + (分数 &#x2F; 15000) + min(队友均分 &#x2F; 50000, 30) [207, 250, 283] RP &#x3D; PT &#x2F; 10 v2.0 以前的旧算法 独立演出的基础 PT &#x3D; 100 + (分数 &#x2F; 20000) [150, 175, 200] 协力演出的基础 PT &#x3D; 114 + (分数 &#x2F; 17500) + min(队友均分 &#x2F; 100000, 11) [181, 211, 228] チームフェス &#x2F; 团队嘉年华 玩家选择加入两个团队中的一个。 通过独立演出或团队演出获得活动点数 (PT) 和活动贴纸 (RP)。独立演奏的收益大幅降低，以鼓励玩家进行团队演出。 团队演出类似于协力演出，但是只会匹配到同一团队的四名玩家，与另一团队的五名玩家对战。团队演出无法选择乐曲，由系统在一个较小的曲库中随机选择，曲库每小时更新。 团队演出的过程与协力演出相同，不过额外显示对手五名玩家的连击数（不会显示对手分数）。 团队演出结束后，先展示对战结果，对战胜利的一方给团队提供 +2 应援值，失败 +1，平局则双方 +2；然后展示协力总分和各玩家的成绩，再显示自己的成绩。 团队演出是否胜利不影响个人获得的 PT。 活动结束后，团队应援值高的一方获得胜利，可以获得更多奖励。 在活动期间团队演出会替代协力演出的入口。该活动又称「团战」「5v5」。 独立演出的基础 PT &#x3D; 70 + (分数 &#x2F; 25000) [110, 130, 150] 团队演出的基础 PT &#x3D; 120 + (分数 &#x2F; 15000) + min(队友均分 &#x2F; 100000, 15) + min(剩余生命 &#x2F; 50, 20) [217, 255, 288] RP &#x3D; PT &#x2F; 10 v2.0 以前的旧算法 独立演出的基础 PT &#x3D; 100 + (分数 &#x2F; 20000) [150, 175, 200] 团队演出的基础 PT &#x3D; 114 + (分数 &#x2F; 12500) + min(队友均分 &#x2F; 100000, 11) + min(剩余生命 &#x2F; 25, 40) [244, 285, 325] バトル &#x2F; 竞演通过独立演出或竞赛演出获得活动点数 (PT) 和活动贴纸 (RP)。独立演奏的收益大幅降低，以鼓励玩家进行竞赛演出。 竞赛演出的匹配与协力演出相同。但是，演出过程与独立演出类似，前 5 次技能分别发动自己队伍中 5 名队员的技能，第 6 次技能发动队长的技能；此外，没有 Fever 机制。 竞赛演出结束后，先展示协力总分和各玩家的成绩，再显示自己的成绩。 竞赛演出中，除了根据个人和队友分数获得基础 PT 外，还根据个人在队伍中的排名获得奖励 PT。由于奖励 PT 的占比很高，因此获得好排名比整体分数更重要。 有些高水平玩家会尝试在新手大厅中匹配，以期稳定地获得第一名。 在活动期间竞赛演出会替代协力演出的入口。该活动又称「排位赛」。 独立演出的基础 PT &#x3D; 70 + (分数 &#x2F; 25000) [110, 130, 150] 竞赛演出的基础 PT &#x3D; 100 + (分数 &#x2F; 15000) + min(队友均分 &#x2F; 100000, 15) + (5 - 排名) × 15 [177-237, 215-275, 248-308] RP &#x3D; PT &#x2F; 10 v2.0 以前的旧算法 独立演出的基础 PT &#x3D; 50 + (分数 &#x2F; 40000) [75, 88, 100] 竞赛演出的基础 PT &#x3D; 60 + (分数 &#x2F; 12500) + min(队友均分 &#x2F; 500000, 3) + (5 - 排名) × 25 [142-242, 183-283, 223-323] トライアル &#x2F; 试炼通过独立演出或协力演出获得活动点数 (PT) 和活动贴纸 (RP)。 此外，活动期间会新增一系列试炼目标，分为等级、分数、连击、判定、协力五类，每类目标一般有 10+5 个等级。 每次演出只能完成同一类目标中的一级。完成目标后，获得少量 PT 和大量 RP，同时解锁下一级目标。 完成五类各 10 级目标后，获得「トライアルマスター」称号。 完成五类各 15 级目标后，获得「トライアルマスター」称号的金色版本。 独立演出的基础 PT &#x3D; 100 + (分数 &#x2F; 15000) [167, 200, 233] 协力演出的基础 PT &#x3D; 120 + (分数 &#x2F; 15000) + min(队友均分 &#x2F; 50000, 30) [207, 250, 283] RP &#x3D; PT &#x2F; 40 v2.0 以前的旧算法 独立演出的基础 PT &#x3D; 100 + (分数 &#x2F; 20000) [150, 175, 200] 协力演出的基础 PT &#x3D; 114 + (分数 &#x2F; 17500) + min(队友均分 &#x2F; 100000, 11) [181, 211, 228] チャレンジ &#x2F; 挑战 通过独立演出或协力演出获得挑战点数 (CP) 和少量活动点数 (PT)。 通过挑战演出消耗挑战点数 (CP) 获得大量活动点数 (PT) 和活动贴纸 (RP)。 挑战演出为单人游戏，玩家在活动指定的三首乐曲（一般是一首新曲和两首追加 MAS 难度的老曲）中选择一首，选择难度后开始演出。演出过程与独立演出相同，但是技能只会发动增加分数的效果（无法恢复生命值和强化判定）。 挑战演出获得的 PT 和 RP 与消耗的 CP 成正比，但是每次最多只能消耗 4000 CP。此外，不像独立演出中退出&#x2F;重试不扣除 LB，挑战演出中退出&#x2F;重试会扣除 CP。 挑战演出还会为这三首歌曲设置单曲排行榜。挑战演出计算分数时，综合力直接乘以 (100% + 队员加成)，而不是到结算 PT 时再计算。因此，要在单曲排行榜上获得好成绩，需要考虑综合力与队员加成的乘积。 独立演出的基础 PT &#x3D; 20 + (分数 &#x2F; 75000) [33.3, 40.0, 46.7] 协力演出的基础 PT &#x3D; 20 + (分数 &#x2F; 75000) + min(队友均分 &#x2F; 500000, 3) [35.3, 43.0, 49.7] CP &#x3D; PT 挑战演出的最终 PT &#x3D; 基础 PT × (CP &#x2F; 400)，每次最少消耗 400 CP，最多消耗 4000 CP 挑战演出的基础 PT &#x3D; min(分数 &#x2F; 2000, 1500) + ((分数 - 3000000) &#x2F; 5000) (已计算成员加成) RP &#x3D; PT &#x2F; 10 挑战活动的 PT 计算比较复杂。按照 3LB +200% 加成计算，协力演出获得的 PT 和 CP 为 [1500, 1935, 2235]。假设一次性将这些 CP 全部消耗，并打出同样的基本分 (在 +200% 加成前)，挑战演出获得的 PT 为 [5625, 8707, 12572]，这 3LB 的合计 PT 为 [7125, 10642, 13968]，均摊后相当于其他活动中 [158, 236, 310] 的基础 PT。 v2.0 以前的旧算法 独立演出的基础 PT &#x3D; 20 + (分数 &#x2F; 100000) [30.0, 35.0, 40.0] 协力演出的基础 PT &#x3D; 22 + (分数 &#x2F; 80000) + min(队友均分 &#x2F; 500000, 2.2) [36.5, 43.0, 49.2] CP &#x3D; PT 挑战演出的最终 PT &#x3D; 基础 PT × (CP &#x2F; 400)，每次最少消耗 400 CP，最多消耗 4000 CP 挑战演出的基础 PT &#x3D; 分数 &#x2F; 2500 (已计算成员加成)按照 3LB +200% 加成计算，协力演出获得的 PT 和 CP 为 [1642, 1933, 2214]。假设一次性将这些 CP 全部消耗，并打出同样的基本分 (在 +200% 加成前)，挑战演出获得的 PT 为 [4928, 8697, 13284]，这 3LB 的合计 PT 为 [6570, 10630, 15498]，均摊后相当于其他活动中 [146, 236, 344] 的基础 PT。 ミッション &#x2F; 任务通过独立演出或协力演出获得活动点数 (PT) 和活动贴纸 (RP)。 编队时，系统会给每个编队内角色选择一张角色相同且综合力最高的卡牌，组成一个助阵队，提供额外且固定的 PT 奖励（不受分数影响）。 此外，活动期间会新增一系列日常和一次性任务，完成任务后获得大量 RP。 比起トライアル，任务会更加多样化，比如用某乐队的 5 名成员组队演奏、在某乐曲中达到 1000 连击等。 现在作为最常规的活动种类，取代了ライブ活动。 独立演出的基础 PT &#x3D; 70 + (分数 &#x2F; 15000) + min(助阵队综合力 &#x2F; 75000, 40) [167, 210, 243] 协力演出的基础 PT &#x3D; 100 + (分数 &#x2F; 15000) + min(队友均分 &#x2F; 100000, 15) + min(助阵队综合力 &#x2F; 75000, 40) [217, 260, 288] RP &#x3D; PT &#x2F; 40 v2.0 以前的旧算法 独立演出的基础 PT &#x3D; 100 + (分数 &#x2F; 20000) + min(助阵队综合力 &#x2F; 100000, 30) [180, 205, 230] 协力演出的基础 PT &#x3D; 114 + (分数 &#x2F; 17500) + min(队友均分 &#x2F; 100000, 11) + min(助阵队综合力 &#x2F; 75000, 40) [221, 251, 279] パーリナイ &#x2F; 派对夜通过独立演出、协力演出或派对演出获得活动点数 (PT) 和活动贴纸 (RP)。独立演出和协力演出的收益大幅降低，以鼓励玩家进行派对演出。 派对演出为单人游戏，玩家选择三张谱面（可以重复），然后连续游玩三首乐曲。每首游玩结束后，可以自行决定休息时间。不能重试，退出或断线即视为放弃。在全程在线的情况下完成三首乐曲后，进行结算，显示三首的总分和具体成绩。 三首乐曲需要使用不同的卡牌编队（角色可以相同），且游玩过程中不能更换。三首乐曲可以设定不同的 LB 消耗，每首最多 5 LB，允许超支 LB（最低 -10，LB 为负数的情况下仍然按照自然速度恢复）。 游玩过程中生命值、连击数和分数会继承到下一首乐曲，因此保持全程连击可以获得较大的分数优势（在乐曲开始时即获得满连击加成）。 派对演出还会设置两个排行榜，一个是指定的三张谱面的总分排行榜，另一个是任选的三张谱面的总分排行榜。派对演出计算分数时，综合力直接乘以 (100% + 队员加成)，而不是到结算 PT 时再计算。因此，要在排行榜上获得好成绩，需要考虑综合力与队员加成的乘积。 此活动又称「课题」「三连打」。 独立演出的基础 PT &#x3D; 70 + (分数 &#x2F; 25000) [110, 130, 150] 协力演出的基础 PT &#x3D; 70 + (分数 &#x2F; 25000) + min(队友均分 &#x2F; 150000, 10) [116, 140, 160] 派对演出的最终 PT &#x3D; sum(基础 PT × LB 加成) 派对演出的基础 PT &#x3D; 30 + min(分数 &#x2F; 6000, 500) + ((分数 - 3000000) &#x2F; 12000) (已计算成员加成) [196, 238, 280] RP &#x3D; PT &#x2F; 10 v2.0 后新增的活动类型","categories":[null]},{"title":"Project Sekai：Rating","path":"/trash/pjsk-rating.html","content":"Read Before ProceedingThe content of this article is purely fictional and is not related to any organisation or individual in real life. In addition, it contains GPT-3.5 generated text, which may not be accurate or reliable. Please read with caution.This article was created on 2023-07-07. Have fun reading! Rating consists of 2 parts: Base Rating and Match Rating. Base RatingRating for each chart is calculated based on the following formula: R &#x3D; (5 + LV) * ACC ^ 4 where R is the rating, LV is the level of the chart, and ACC is the accuracy in percentage. Different judgment types have different ACC values: Perfect: 1.0 Great: 0.6 Good: 0.2 Bad: 0.0 Miss: 0.0 The final ACC is weighted average of all notes, where the weight of each note is the same as the weight in calculating score. Tap: 1 Critical Tap: 2 (2x) Slide (Head and Tail): 1 Critical Slide (Head and Tail): 2 (2x) Slide (Body): 0.1 Critical Slide (Body): 0.1 (1x) Slide (Body Special): 0.1 Critical Slide (Body Special): 0.2 (2x) Flick: 2 Critical Flick: 6 (3x) All chart rating is rounded down to 2 decimal places. The total base rating is the sum of best 30 chart ratings, rounded down to nearest integer. As of current version, theoretically the maximum base rating is 850. Match RatingMatch rating is determined by match rank. There are 7 ranks in total: Rookie, Bronze, Silver, Gold, Platinum, Diamond, and Master. Match score is calculated based on all notes judgement in the match, regardless of the note type: Perfect: +1 Great: 0 Good: -2 Bad: -10 Miss: -20 Additionally, there are some bonus points: Combo Bonus: +(max combo &#x2F; 100) All Perfect: +30 Full Combo: +10 Fail: -100 Facing a higher rank opponent: +10 You gain +1 match XP for winning, 0 for draw, and -1 for losing. You don’t lose match XP in Rookie rank. You advance to next rank when you reach certain amount of match XP: Rookie: 3 Bronze: 6 Silver: 9 Gold: 12 Platinum: 15 Diamond: 20 … and start from 1 match XP in the next rank. You demote to previous rank when you reach -2 match XP, and start from 2 match XP in the previous rank. Match rating is determined by your current rank: Rookie: 0 Bronze: 10 Silver: 30 Gold: 60 Platinum: 100 Diamond: 150 Master: 200 + match XP &#x2F; 10, rounded down","categories":[null]},{"title":"Project Sekai：Course Mode","path":"/trash/pjsk-dan.html","content":"Read Before ProceedingThe content of this article is purely fictional and is not related to any organisation or individual in real life. In addition, it contains GPT-3.5 generated text, which may not be accurate or reliable. Please read with caution.This article was created on 2023-07-17. Have fun reading! In Course Mode, card power doesn’t matter and skill won’t be activated. Instead of a regular score, the only thing you need to care about is your HP. If your HP ever reaches 0, you will fail the course immediately. How to playAfter reaching Player Rank 50, and have FC’d at least 10 songs in Expert difficulty or above, you will unlock Course Mode. You can access it via the Live Menu. Course ListAll courses up to 1 Kyu are unlocked by default. Starting from 1 Dan, you will need to clear the previous course to unlock the next one. Course Mode costs 1 LP per song, which will be returned if you clear the course. If you fail the course but clear at least one song, you will get LP corresponding to the number of songs you cleared. If you fail the course without clearing any song, you will be further deducted 1 LP as penalty. All Kyu courses have 3 songs, while Dan courses have 4 songs. There are no specific song lists for each tier. However, a difficulty level is assigned to each song, and when you start a course, the game will randomly pick 3&#x2F;4 songs from the pool of songs with required level. You can rest for up to 60 seconds between songs. If you don’t start the next song within 60 seconds, or the game is not in focus for 120 seconds (e.g. you switch to another app), you will fail the course. (the limit of 120 seconds is accumulated, not consecutive) You start with reduced amount of maximum HP, and can only recover HP by clearing songs. You lose HP when you have a miss, bad, good (in higher Dans), or great (in even higher Dans). The amount of HP lost depends on the Course tier, which becomes increasingly difficult and demanding as you progress. Tier Song Level Max HP HP Recovery HP Lost (Gr&#x2F;G&#x2F;B&#x2F;M) 10 Kyu 18&#x2F;19&#x2F;20 1000 200 0&#x2F;0&#x2F;50&#x2F;100 9 Kyu 20&#x2F;21&#x2F;22 1000 200 0&#x2F;0&#x2F;60&#x2F;120 8 Kyu 22&#x2F;23&#x2F;24 1000 200 0&#x2F;0&#x2F;70&#x2F;140 7 Kyu 24&#x2F;25&#x2F;26 500 100 0&#x2F;0&#x2F;80&#x2F;160 6 Kyu 25&#x2F;26&#x2F;27 500 100 0&#x2F;0&#x2F;90&#x2F;180 5 Kyu 26&#x2F;27&#x2F;28 500 100 0&#x2F;0&#x2F;100&#x2F;200 4 Kyu 27&#x2F;28&#x2F;29 200 50 0&#x2F;5&#x2F;120&#x2F;200 3 Kyu 28&#x2F;29&#x2F;30 200 50 0&#x2F;10&#x2F;140&#x2F;200 2 Kyu 29&#x2F;30&#x2F;31 200 50 0&#x2F;15&#x2F;160&#x2F;200 1 Kyu 30&#x2F;31&#x2F;32 100 25 0&#x2F;20&#x2F;180&#x2F;200 1 Dan 31&#x2F;32&#x2F;32&#x2F;33 100 25 2&#x2F;25&#x2F;200&#x2F;200 2 Dan 32&#x2F;33&#x2F;33&#x2F;34 100 25 4&#x2F;30&#x2F;200&#x2F;200 3 Dan 33&#x2F;34&#x2F;34&#x2F;35 100 25 6&#x2F;35&#x2F;200&#x2F;200 4 Dan 34&#x2F;35&#x2F;36&#x2F;36 50 5 8&#x2F;40&#x2F;200&#x2F;200 5 Dan 35&#x2F;36&#x2F;37&#x2F;37 50 5 10&#x2F;45&#x2F;200&#x2F;200 6 Dan 36&#x2F;37&#x2F;38&#x2F;38 50 5 12&#x2F;50&#x2F;200&#x2F;200 7 Dan 37&#x2F;38&#x2F;39&#x2F;39 20 4 14&#x2F;50&#x2F;200&#x2F;200 8 Dan 38&#x2F;39&#x2F;40&#x2F;40 20 3 16&#x2F;50&#x2F;200&#x2F;200 9 Dan 39&#x2F;40&#x2F;41&#x2F;41 20 2 18&#x2F;50&#x2F;200&#x2F;200 10 Dan 40&#x2F;41&#x2F;42&#x2F;42 20 1 20&#x2F;50&#x2F;200&#x2F;200 RewardsFirst time clearing rewards: Title of corresponding tier “10級”, “9級”, etc. 500 Crystals (Kyu) &#x2F; 1000 Crystals (Dan) 1000 Thought Fragments (Kyu) &#x2F; 1 Thought Crystal (Dan) 5 Skill EXP Tickets First time FC rewards: Title of corresponding tier “エクスパート10級”, “エクスパート9級”, etc. (decorated with gold frame) 500 Crystals 1000 Thought Fragments First time AP rewards: Title of corresponding tier “マスター10級”, “マスター9級”, etc. (decorated with rainbow frame) 1000 Crystals 1 Thought Crystal Tips You do not need to form a team for Course Mode. The game will automatically use your best team for event point calculation. And you cannot rely on the skills of your cards, so you can just use your best cards regardless of their skills.","categories":[null]}]